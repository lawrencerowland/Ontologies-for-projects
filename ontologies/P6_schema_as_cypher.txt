:begin
// cat <path to cypher file> | ./bin/cypher-shell -a <address> -u <user> -p <password>

CREATE (`account`:`account` {
	`acct_id`: 74,
	`acct_seq_num`: -54,
	`acct_short_name`: "Lorem",
	`acct_name`: "Lorem",
	`parent_acct_id`: -3,
	`acct_descr`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 34,
	`delete_date`: "Lorem"
}),

CREATE (`activitycodehierarchy`:`activitycodehierarchy` {
	`codetypeobjectid`: -50,
	`codetypename`: "Lorem",
	`codetypesequencenumber`: -58,
	`codetypeissecure`: "L",
	`parentcodevalueobjectid`: -14,
	`parentcodevaluename`: "Lorem",
	`parentcodevalueshortname`: "Lorem",
	`parentcodevaluesequencenumber`: 56,
	`childcodevalueobjectid`: -77,
	`childcodevaluename`: "Lorem",
	`childcodevalueshortname`: "Lorem",
	`childcodevaluesequencenumber`: 6,
	`parentlevelsbelowroot`: 72,
	`childlevelsbelowroot`: -97,
	`levelsbetween`: -71,
	`childhaschildren`: "L",
	`fullpathname`: "Lorem",
	`codetypescope`: "Lorem",
	`codetypeprojectid`: -98
}),

CREATE (`activitycodetypesecurity`:`activitycodetypesecurity` {
	`rdbmsuserid`: -53,
	`projectobjectid`: 7
}),

CREATE (`activityspread`:`activityspread` {
	`activityobjectid`: -99,
	`startdate`: "Lorem",
	`enddate`: "Lorem",
	`activitycode`: "Lorem",
	`activityname`: "Lorem",
	`wbsobjectid`: -8,
	`projectobjectid`: -68,
	`actuallaborunits`: -70,
	`actualnonlaborunits`: -7,
	`atcompletionlaborunits`: -85,
	`atcompletionnonlaborunits`: -61,
	`baselineactuallaborunits`: 72,
	`baselineactualnonlaborunits`: 10,
	`baselineplannedlaborunits`: -41,
	`baselineplannednonlaborunits`: -79,
	`baseline1actuallaborunits`: 30,
	`baseline1actualnonlaborunits`: -94,
	`baseline1plannedlaborunits`: -56,
	`baseline1plannednonlaborunits`: 30,
	`earnedvaluelaborunits`: -3,
	`estimateatcompletionlaborunits`: 28,
	`estimatetocompletelaborunits`: 26,
	`plannedlaborunits`: 98,
	`plannednonlaborunits`: -10,
	`plannedvaluelaborunits`: -58,
	`remaininglaborunits`: -27,
	`remaininglatelaborunits`: 0,
	`remaininglatenonlaborunits`: 69,
	`remainingnonlaborunits`: -93,
	`actualcost`: -73,
	`actualexpensecost`: 23,
	`actuallaborcost`: 94,
	`actualmaterialcost`: 80,
	`actualnonlaborcost`: -35,
	`actualtotalcost`: 29,
	`atcompletionexpensecost`: 4,
	`atcompletionlaborcost`: 35,
	`atcompletionmaterialcost`: -71,
	`atcompletionnonlaborcost`: 88,
	`atcompletiontotalcost`: -81,
	`baselineplannedexpensecost`: -52,
	`baselineplannedlaborcost`: 77,
	`baselineplannedmaterialcost`: 87,
	`baselineplannednonlaborcost`: 42,
	`baselineplannedtotalcost`: -4,
	`baselineactualexpensecost`: 43,
	`baselineactuallaborcost`: 9,
	`baselineactualmaterialcost`: -19,
	`baselineactualnonlaborcost`: -6,
	`baselineactualtotalcost`: -77,
	`baseline1actualexpensecost`: 51,
	`baseline1actuallaborcost`: -83,
	`baseline1actualmaterialcost`: 46,
	`baseline1actualnonlaborcost`: -25,
	`baseline1actualtotalcost`: -46,
	`baseline1plannedexpensecost`: -84,
	`baseline1plannedlaborcost`: -89,
	`baseline1plannedmaterialcost`: -51,
	`baseline1plannednonlaborcost`: 3,
	`baseline1plannedtotalcost`: -3,
	`earnedvaluecost`: 42,
	`estimateatcompletioncost`: -94,
	`estimatetocompletecost`: -29,
	`plannedexpensecost`: -88,
	`plannedlaborcost`: -57,
	`plannedmaterialcost`: -30,
	`plannednonlaborcost`: 28,
	`plannedtotalcost`: 99,
	`plannedvaluecost`: 85,
	`remainingexpensecost`: -52,
	`remaininglaborcost`: -33,
	`remaininglateexpensecost`: 12,
	`remaininglatelaborcost`: -45,
	`remaininglatematerialcost`: 35,
	`remaininglatenonlaborcost`: 4,
	`remaininglatetotalcost`: -41,
	`remainingmaterialcost`: 64,
	`remainingnonlaborcost`: 27,
	`remainingtotalcost`: -81
}),

CREATE  (`actvcode`:`actvcode` {
	`actv_code_id`: 42,
	`actv_code_type_id`: -72,
	`seq_num`: 68,
	`short_name`: "Lorem",
	`parent_actv_code_id`: 35,
	`actv_code_name`: "Lorem",
	`color`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -7,
	`delete_date`: "Lorem"
}),

CREATE  (`actvcodex`:`actvcodex` {
	`actv_code_id`: -6,
	`codetypename`: "Lorem",
	`issecurecode`: "L",
	`projectobjectid`: 67,
	`codetypescope`: "Lorem",
	`create_date`: "sysdate",
	`update_date`: "sysdate"
}),

CREATE  (`actvtype`:`actvtype` {
	`actv_code_type_id`: -3,
	`actv_short_len`: 28,
	`seq_num`: 84,
	`actv_code_type`: "Lorem",
	`actv_code_type_scope`: "Lorem",
	`proj_id`: 0,
	`super_flag`: "&apos;N&apos;",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 39,
	`delete_date`: "Lorem"
}),

CREATE  (`admin_config`:`admin_config` {
	`config_name`: "Lorem",
	`config_type`: "Lorem",
	`factory_version`: "Lorem",
	`last_change_date`: "sysdate",
	`config_value`: "Lorem",
	`config_data`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 73,
	`delete_date`: "Lorem"
}),

(`alert`:`alert` {
	`alert_id`: -79,
	`user_id`: 94,
	`alert_type`: "Lorem",
	`action_key`: "Lorem",
	`alert_status`: "Lorem",
	`alert_date`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -6,
	`delete_date`: "Lorem"
}),

(`alertparam`:`alertparam` {
	`alert_id`: -49,
	`setting_id`: -32,
	`setting_name`: "Lorem",
	`setting_value`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 58,
	`delete_date`: "Lorem"
}),

(`basetype`:`basetype` {
	`base_type_id`: -46,
	`base_type_seq_num`: 78,
	`base_type`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -77,
	`delete_date`: "Lorem"
}),

(`bgplog`:`bgplog` {
	`log_time`: "sysdate",
	`source`: "Lorem",
	`type`: "Lorem",
	`description`: "Lorem"
}),

(`bre_registry`:`bre_registry` {
	`bre_registry_id`: "Lorem",
	`ip_address`: "Lorem",
	`start_time`: "Lorem",
	`last_time`: "Lorem",
	`status_code`: "L",
	`torched_time`: "Lorem",
	`config_name`: "Lorem",
	`config_changed_flag`: "L",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 50,
	`delete_date`: "Lorem"
}),

(`budgchng`:`budgchng` {
	`budg_chng_id`: -16,
	`proj_id`: -80,
	`wbs_id`: 41,
	`chng_date`: "Lorem",
	`chng_short_name`: "Lorem",
	`chng_cost`: -29,
	`chng_by_name`: "Lorem",
	`status_code`: "Lorem",
	`chng_descr`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 25,
	`delete_date`: "Lorem"
}),

(`budgchngx`:`budgchngx` {
	`budg_chng_id`: -8,
	`epsid`: "Lorem",
	`epsname`: "Lorem",
	`projectid`: "Lorem",
	`wbscode`: "Lorem",
	`wbsname`: "Lorem",
	`create_date`: "sysdate",
	`update_date`: "sysdate"
}),

(`calendar`:`calendar` {
	`clndr_id`: -2,
	`default_flag`: "&apos;N&apos;",
	`rsrc_private`: "&apos;N&apos;",
	`clndr_name`: "Lorem",
	`proj_id`: 4,
	`base_clndr_id`: 42,
	`last_chng_date`: "Lorem",
	`clndr_type`: "Lorem",
	`clndr_data`: "Lorem",
	`day_hr_cnt`: -100,
	`week_hr_cnt`: 12,
	`year_hr_cnt`: 90,
	`month_hr_cnt`: 83,
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 1,
	`delete_date`: "Lorem"
}),

(`calendarx`:`calendarx` {
	`clndr_id`: -44,
	`daydate`: "Lorem",
	`weekdaynumber`: -96,
	`workdayflag`: "L",
	`totalworkhours`: 92,
	`workhoursbyhalfhour`: "Lorem",
	`workdaystarttime`: "Lorem",
	`workdayfinishtime`: "Lorem",
	`create_date`: "sysdate",
	`update_date`: "sysdate"
}),

(`costaccounthierarchy`:`costaccounthierarchy` {
	`parentobjectid`: -32,
	`parentsequencenumber`: 65,
	`parentname`: "Lorem",
	`parentid`: "Lorem",
	`childobjectid`: -35,
	`childsequencenumber`: -16,
	`childname`: "Lorem",
	`childid`: "Lorem",
	`parentlevelsbelowroot`: -9,
	`childlevelsbelowroot`: 30,
	`levelsbetween`: -29,
	`childhaschildren`: "L",
	`fullpathname`: "Lorem"
}),

(`costsecurity`:`costsecurity` {
	`rdbmsuserid`: 80,
	`projectobjectid`: -41,
	`wholeprojectflag`: "L"
}),

(`costtype`:`costtype` {
	`cost_type_id`: 40,
	`seq_num`: -86,
	`cost_type`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -31,
	`delete_date`: "Lorem"
}),

(`currtype`:`currtype` {
	`curr_id`: 38,
	`decimal_digit_cnt`: 69,
	`curr_symbol`: "Lorem",
	`decimal_symbol`: "Lorem",
	`digit_group_symbol`: "Lorem",
	`pos_curr_fmt_type`: "Lorem",
	`neg_curr_fmt_type`: "Lorem",
	`curr_type`: "Lorem",
	`curr_short_name`: "Lorem",
	`group_digit_cnt`: 3,
	`base_exch_rate`: -81,
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 4,
	`delete_date`: "Lorem"
}),

(`currtypex`:`currtypex` {
	`curr_id`: 62,
	`isbasecurrency`: "L",
	`create_date`: "sysdate",
	`update_date`: "sysdate"
}),

(`dashboard`:`dashboard` {
	`dashboard_id`: -74,
	`dashboard_name`: "Lorem",
	`user_id`: 74,
	`table_name`: "Lorem",
	`fk_id`: 42,
	`lock_filter_flag`: "&apos;N&apos;",
	`max_rows_per_portlet`: -20,
	`dashboard_layout_data`: "Lorem",
	`portlet_settings_data`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 19,
	`delete_date`: "Lorem"
}),

(`dashuser`:`dashuser` {
	`dashboard_id`: 53,
	`user_id`: -16,
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -100,
	`delete_date`: "Lorem"
}),

(`dltacct`:`dltacct` {
	`session_id`: -7,
	`acct_id`: -26
}),

(`dltactv`:`dltactv` {
	`session_id`: 99,
	`actv_code_id`: -11
}),

(`dltobs`:`dltobs` {
	`session_id`: 53,
	`obs_id`: 84
}),

(`dltrole`:`dltrole` {
	`session_id`: -4,
	`role_id`: 54
}),

(`dltrsrc`:`dltrsrc` {
	`session_id`: -2,
	`rsrc_id`: 91
}),

(`dltrsrl`:`dltrsrl` {
	`session_id`: 98,
	`rsrc_id`: -30,
	`role_id`: 37
}),

(`dltuser`:`dltuser` {
	`session_id`: -72,
	`user_id`: -1
}),

(`doccatg`:`doccatg` {
	`doc_catg_id`: -35,
	`seq_num`: -4,
	`doc_catg_name`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -59,
	`delete_date`: "Lorem"
}),

(`docreview`:`docreview` {
	`doc_review_id`: -56,
	`doc_id`: 52,
	`user_id`: -77,
	`review_name`: "Lorem",
	`review_descr`: "Lorem",
	`review_type`: "Lorem",
	`due_date`: "Lorem",
	`status`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -48,
	`delete_date`: "Lorem"
}),

(`docreviewtask`:`docreviewtask` {
	`review_task_id`: -56,
	`doc_review_id`: 44,
	`user_id`: 82,
	`review_date`: "Lorem",
	`comments`: "Lorem",
	`priority`: 41,
	`status`: "Lorem",
	`attachment_uuid`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -74,
	`delete_date`: "Lorem"
}),

(`docstat`:`docstat` {
	`doc_status_id`: -36,
	`seq_num`: -78,
	`doc_status_code`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 59,
	`delete_date`: "Lorem"
}),

(`document`:`document` {
	`doc_id`: 30,
	`doc_seq_num`: -44,
	`deliv_flag`: "&apos;N&apos;",
	`doc_name`: "Lorem",
	`parent_doc_id`: -47,
	`proj_id`: -9,
	`doc_status_id`: -36,
	`doc_catg_id`: 62,
	`doc_date`: "Lorem",
	`version_name`: "&apos;1&apos;",
	`guid`: "Lorem",
	`tmpl_guid`: "Lorem",
	`doc_short_name`: "Lorem",
	`author_name`: "Lorem",
	`private_loc`: "Lorem",
	`public_loc`: "Lorem",
	`doc_content`: "Lorem",
	`rsrc_id`: -49,
	`doc_mgmt_type`: "&apos;DM_Local&apos;",
	`external_doc_key`: "Lorem",
	`cr_external_doc_key`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -87,
	`delete_date`: "Lorem"
}),

(`documentx`:`documentx` {
	`doc_id`: 55,
	`documentcategoryname`: "Lorem",
	`documentstatuscodename`: "Lorem",
	`projectid`: "Lorem",
	`resourceid`: "Lorem",
	`resourcename`: "Lorem",
	`create_date`: "sysdate",
	`update_date`: "sysdate"
}),

(`epshierarchy`:`epshierarchy` {
	`parentobjectid`: 61,
	`parentprojectid`: 91,
	`parentsequencenumber`: -73,
	`parentname`: "Lorem",
	`parentid`: "Lorem",
	`childobjectid`: -85,
	`childprojectid`: -77,
	`childsequencenumber`: -13,
	`childname`: "Lorem",
	`childid`: "Lorem",
	`parentlevelsbelowroot`: 90,
	`childlevelsbelowroot`: 90,
	`levelsbetween`: -39,
	`childhaschildren`: "L",
	`fullpathname`: "Lorem"
}),

(`epsspread`:`epsspread` {
	`objectid`: -42,
	`id`: "Lorem",
	`name`: "Lorem",
	`parentobjectid`: -95,
	`projectobjectid`: 39,
	`obsobjectid`: -75,
	`obsname`: "Lorem",
	`startdate`: "Lorem",
	`enddate`: "Lorem",
	`actuallaborunits`: -16,
	`actualnonlaborunits`: -42,
	`atcompletionlaborunits`: -78,
	`atcompletionnonlaborunits`: 96,
	`baselineplannedlaborunits`: -93,
	`baselineplannednonlaborunits`: -26,
	`earnedvaluelaborunits`: -97,
	`estimateatcompletionlaborunits`: 31,
	`estimatetocompletelaborunits`: -40,
	`plannedvaluelaborunits`: 25,
	`remaininglaborunits`: -34,
	`remainingnonlaborunits`: 97,
	`actualcost`: 37,
	`actualexpensecost`: -1,
	`actuallaborcost`: -34,
	`actualmaterialcost`: 71,
	`actualnonlaborcost`: 37,
	`actualtotalcost`: 90,
	`atcompletionexpensecost`: -86,
	`atcompletionlaborcost`: 14,
	`atcompletionmaterialcost`: 38,
	`atcompletionnonlaborcost`: 14,
	`atcompletiontotalcost`: -29,
	`baselineplannedexpensecost`: -5,
	`baselineplannedlaborcost`: 95,
	`baselineplannedmaterialcost`: -81,
	`baselineplannednonlaborcost`: 94,
	`baselineplannedtotalcost`: -74,
	`earnedvaluecost`: -3,
	`estimateatcompletioncost`: 64,
	`estimatetocompletecost`: -65,
	`plannedvaluecost`: 49,
	`remainingexpensecost`: 44,
	`remaininglaborcost`: -81,
	`remainingmaterialcost`: -51,
	`remainingnonlaborcost`: -24,
	`remainingtotalcost`: 7
}),

(`expproj`:`expproj` {
	`proj_id`: 88,
	`exp_group`: "Lorem",
	`exp_proj_name`: "Lorem",
	`login_supplied_flag`: "&apos;N&apos;",
	`exp_user_name`: "Lorem",
	`exp_passwd`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -93,
	`delete_date`: "Lorem"
}),

(`extapp`:`extapp` {
	`app_id`: -57,
	`login_supply_flag`: "&apos;N&apos;",
	`app_name`: "Lorem",
	`app_exe_name`: "Lorem",
	`proj_id`: 28,
	`app_user_name`: "Lorem",
	`app_passwd`: "Lorem",
	`app_data_name`: "Lorem",
	`app_parm_string`: "Lorem",
	`app_data_loc`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 2,
	`delete_date`: "Lorem"
}),

(`factor`:`factor` {
	`fact_id`: 28,
	`fact_seq_num`: 23,
	`fact_type`: "Lorem",
	`fact_name`: "Lorem",
	`def_fact_val_id`: 56,
	`fact_descr`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -11,
	`delete_date`: "Lorem"
}),

(`factval`:`factval` {
	`fact_val_id`: 75,
	`fact_id`: 99,
	`fact_value`: "Lorem",
	`fact_value_descr`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -56,
	`delete_date`: "Lorem"
}),

(`filtprop`:`filtprop` {
	`filter_id`: -84,
	`table_name`: "Lorem",
	`filter_type`: "Lorem",
	`filter_name`: "Lorem",
	`user_id`: 63,
	`filter_data`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 11,
	`delete_date`: "Lorem"
}),

(`findates`:`findates` {
	`fin_dates_id`: -34,
	`fin_dates_name`: "Lorem",
	`start_date`: "Lorem",
	`end_date`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 61,
	`delete_date`: "Lorem"
}),

(`formcatg`:`formcatg` {
	`form_catg_id`: 49,
	`form_catg_name`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -75,
	`delete_date`: "Lorem"
}),

(`formproj`:`formproj` {
	`form_tmpl_id`: -17,
	`proj_id`: 40,
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -33,
	`delete_date`: "Lorem"
}),

(`formtmpl`:`formtmpl` {
	`form_tmpl_id`: 7,
	`form_tmpl_name`: "Lorem",
	`form_tmpl_desc`: "Lorem",
	`form_catg_id`: 68,
	`form_tmpl_data`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -51,
	`delete_date`: "Lorem"
}),

(`fundsrc`:`fundsrc` {
	`fund_id`: -72,
	`seq_num`: -91,
	`fund_name`: "Lorem",
	`parent_fund_id`: 33,
	`fund_descr`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 60,
	`delete_date`: "Lorem"
}),

(`gchange`:`gchange` {
	`gchange_id`: -81,
	`gchange_name`: "Lorem",
	`gchange_data`: "Lorem",
	`user_id`: -88,
	`table_name`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -36,
	`delete_date`: "Lorem"
}),

(`globalsecurity`:`globalsecurity` {
	`rdbmsuserid`: -55,
	`securecodeflag`: "L",
	`resourcecostflag`: "L",
	`proficiencyflag`: "L"
}),

(`hqdata`:`hqdata` {
	`session_id`: 85,
	`context_id`: 54,
	`fk_id`: 23,
	`value`: -89
}),

(`hquery`:`hquery` {
	`session_id`: 61,
	`context_id`: -98,
	`fk_id`: -67,
	`order_value`: "Lorem",
	`order_ids`: "Lorem"
}),

(`issuhist`:`issuhist` {
	`issue_id`: 54,
	`proj_id`: 85,
	`issue_history`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -75,
	`delete_date`: "Lorem"
}),

(`iteration`:`iteration` {
	`iteration_id`: -28,
	`release_id`: 43,
	`iteration_name`: "Lorem",
	`start_date`: "Lorem",
	`end_date`: "Lorem",
	`termination_date`: "Lorem",
	`capacity_pct`: 0,
	`remain_qty`: 39,
	`update_date`: "sysdate",
	`update_user`: "&apos;SYSTEM&apos;",
	`create_date`: "sysdate",
	`create_user`: "&apos;SYSTEM&apos;",
	`delete_session_id`: -79,
	`delete_date`: "Lorem"
}),

(`iterdays`:`iterdays` {
	`task_id`: 36,
	`day_number`: 23,
	`proj_id`: 94,
	`iteration_id`: 89,
	`act_work_qty`: -36,
	`remain_work_qty`: 42,
	`update_date`: "sysdate",
	`update_user`: "&apos;SYSTEM&apos;",
	`create_date`: "sysdate",
	`create_user`: "&apos;SYSTEM&apos;",
	`delete_session_id`: -75,
	`delete_date`: "Lorem"
}),

(`itergoal`:`itergoal` {
	`iter_goal_id`: -86,
	`iteration_id`: 95,
	`goal_name`: "Lorem",
	`goal_descr`: "Lorem",
	`status_code`: "&apos;IG_NotStart&apos;",
	`rfolio_id`: 19,
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -17,
	`delete_date`: "Lorem"
}),

(`joblog`:`joblog` {
	`job_id`: -53,
	`job_log_data`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -23,
	`delete_date`: "Lorem"
}),

(`jobrpt`:`jobrpt` {
	`job_id`: -64,
	`rpt_id`: -53,
	`table_name`: "Lorem",
	`fk_id`: 5,
	`jobrpt_data`: "Lorem",
	`personal_portal_flag`: "&apos;Y&apos;",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 90,
	`delete_date`: "Lorem"
}),

(`jobset`:`jobset` {
	`job_id`: -66,
	`setting_name`: "Lorem",
	`setting_value`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 63,
	`delete_date`: "Lorem"
}),

(`jobsvc`:`jobsvc` {
	`job_id`: -70,
	`parent_job_id`: -59,
	`seq_num`: 5,
	`audit_flag`: "&apos;Y&apos;",
	`job_type`: "Lorem",
	`job_type_key`: "Lorem",
	`job_name`: "Lorem",
	`user_id`: -63,
	`last_run_date`: "Lorem",
	`status_code`: "Lorem",
	`recur_data`: "Lorem",
	`recur_type`: "Lorem",
	`submitted_date`: "Lorem",
	`last_error_descr`: "Lorem",
	`audit_file_path`: "Lorem",
	`job_data`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 23,
	`delete_date`: "Lorem"
}),

(`memotype`:`memotype` {
	`memo_type_id`: -22,
	`seq_num`: 35,
	`eps_flag`: "&apos;N&apos;",
	`proj_flag`: "&apos;N&apos;",
	`wbs_flag`: "&apos;N&apos;",
	`task_flag`: "&apos;N&apos;",
	`memo_type`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 68,
	`delete_date`: "Lorem"
}),

(`mtxscrtyp`:`mtxscrtyp` {
	`matrix_id`: 11,
	`scoretype_id`: 82,
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -44,
	`delete_date`: "Lorem"
}),

(`nextkey`:`nextkey` {
	`key_name`: "Lorem",
	`key_seq_num`: 94
}),

(`nonwork`:`nonwork` {
	`nonwork_type_id`: -27,
	`seq_num`: -12,
	`nonwork_code`: "Lorem",
	`nonwork_type`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -94,
	`delete_date`: "Lorem"
}),

(`note`:`note` {
	`note_id`: -35,
	`table_name`: "Lorem",
	`type_name`: "Lorem",
	`fk_id`: 82,
	`note_date`: "Lorem",
	`note_value`: "Lorem",
	`user_name`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -10,
	`delete_date`: "Lorem"
}),

(`obs`:`obs` {
	`obs_id`: 99,
	`seq_num`: -63,
	`obs_name`: "Lorem",
	`parent_obs_id`: 75,
	`guid`: "Lorem",
	`obs_descr`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -68,
	`delete_date`: "Lorem"
}),

(`obsproj`:`obsproj` {
	`obs_id`: 25,
	`proj_id`: -55,
	`wbs_id`: 85
}),

(`pcattype`:`pcattype` {
	`proj_catg_type_id`: -82,
	`seq_num`: -29,
	`proj_catg_short_len`: 43,
	`proj_catg_type`: "Lorem",
	`super_flag`: "&apos;N&apos;",
	`proj_catg_type_wt`: 0,
	`max_proj_catg_wt`: 0,
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -88,
	`delete_date`: "Lorem"
}),

(`pcatuser`:`pcatuser` {
	`proj_catg_id`: -21,
	`user_id`: -31,
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 19,
	`delete_date`: "Lorem"
}),

(`pcatuserx`:`pcatuserx` {
	`proj_catg_id`: 6,
	`user_id`: 9,
	`codetypeobjectid`: 70,
	`codevalue`: "Lorem",
	`username`: "Lorem",
	`create_date`: "sysdate",
	`update_date`: "sysdate"
}),

(`pcatval`:`pcatval` {
	`proj_catg_id`: 83,
	`proj_catg_type_id`: -93,
	`seq_num`: 21,
	`proj_catg_short_name`: "Lorem",
	`parent_proj_catg_id`: -31,
	`proj_catg_name`: "Lorem",
	`proj_catg_wt`: 0,
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -43,
	`delete_date`: "Lorem"
}),

(`pcatvalx`:`pcatvalx` {
	`proj_catg_id`: 87,
	`codetypename`: "Lorem",
	`issecurecode`: "L",
	`create_date`: "sysdate",
	`update_date`: "sysdate"
}),

(`pfolio`:`pfolio` {
	`pfolio_id`: 96,
	`closed_proj_flag`: "&apos;N&apos;",
	`whatif_proj_flag`: "&apos;N&apos;",
	`pfolio_type`: "Lorem",
	`pfolio_name`: "Lorem",
	`user_id`: -4,
	`pfolio_descr`: "Lorem",
	`last_refresh_date`: "Lorem",
	`pfolio_data`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 87,
	`delete_date`: "Lorem"
}),

(`pfoliox`:`pfoliox` {
	`pfolio_id`: 38,
	`username`: "Lorem",
	`create_date`: "sysdate",
	`update_date`: "sysdate"
}),

(`phase`:`phase` {
	`phase_id`: -8,
	`seq_num`: 23,
	`phase_name`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -74,
	`delete_date`: "Lorem"
}),

(`pkxref`:`pkxref` {
	`system_id`: -43,
	`context_name`: "Lorem",
	`pk1`: -17,
	`pk2`: 49,
	`old_pk1`: -79,
	`old_pk2`: -86,
	`old_str`: "Lorem",
	`new_str`: "Lorem",
	`add_date`: "sysdate"
}),

(`plprojref`:`plprojref` {
	`proj_id`: -38,
	`ref_cnt`: 78,
	`last_queued_date`: "Lorem"
}),

(`pobs`:`pobs` {
	`pobs_id`: -88,
	`seq_num`: -39,
	`pobs_name`: "Lorem",
	`pobs_parent_id`: 33,
	`pobs_descr`: "Lorem",
	`pobs_manager`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 2,
	`delete_date`: "Lorem"
}),

(`prefer`:`prefer` {
	`prefer_id`: 37,
	`hr_decimal_cnt`: -63,
	`xfer_complete_day_cnt`: -25,
	`xfer_notstart_day_cnt`: 84,
	`max_wbs_level_cnt`: 90,
	`max_rsrc_level_cnt`: 23,
	`max_acct_level_cnt`: -38,
	`max_task_actv_type_cnt`: -64,
	`future_ts_cnt`: -100,
	`max_obs_level_cnt`: 74,
	`week_start_day_num`: 86,
	`ts_approval_level`: -19,
	`task_code_len`: -50,
	`proj_short_len`: -37,
	`wbs_short_len`: -97,
	`rsrc_short_len`: -62,
	`acct_short_len`: 71,
	`role_short_len`: 91,
	`max_base_cnt`: 57,
	`def_target_drtn_hr_cnt`: -52,
	`day_hr_cnt`: -85,
	`week_hr_cnt`: -53,
	`year_hr_cnt`: -23,
	`month_hr_cnt`: 71,
	`max_actv_level_cnt`: -98,
	`max_eps_level_cnt`: 70,
	`max_pcat_level_cnt`: -13,
	`max_rcat_level_cnt`: 18,
	`complete_task_hrs_flag`: "&apos;Y&apos;",
	`default_timesheet_flag`: "&apos;N&apos;",
	`future_ts_hrs_flag`: "&apos;Y&apos;",
	`ev_fix_cost_flag`: "&apos;Y&apos;",
	`ts_daily_flag`: "&apos;Y&apos;",
	`notstart_task_hrs_flag`: "&apos;Y&apos;",
	`prestart_task_hrs_flag`: "&apos;Y&apos;",
	`postend_task_hrs_flag`: "&apos;Y&apos;",
	`ermm_enabled_flag`: "&apos;Y&apos;",
	`name_sep_char`: "Lo",
	`year_char`: "Lore",
	`month_char`: "Lore",
	`week_char`: "Lore",
	`day_char`: "Lore",
	`hour_char`: "Lore",
	`minute_char`: "Lore",
	`ts_approval_type`: "&apos;AT_PM_RM&apos;",
	`db_name`: "Lorem",
	`tasksum_period_type`: "Lorem",
	`trsrcsum_period_type`: "Lorem",
	`database_version`: "Lorem",
	`phase_label`: "Lorem",
	`ts_approve_user_id`: 29,
	`curr_id`: 1,
	`ev_user_pct`: -99,
	`ev_etc_user_value`: 81,
	`ev_compute_type`: "Lorem",
	`ev_etc_compute_type`: "Lorem",
	`rpt_header_1`: "Lorem",
	`rpt_header_2`: "Lorem",
	`rpt_header_3`: "Lorem",
	`rpt_footer_1`: "Lorem",
	`rpt_footer_2`: "Lorem",
	`rpt_footer_3`: "Lorem",
	`rpt_user_1`: "Lorem",
	`rpt_user_2`: "Lorem",
	`rpt_user_3`: "Lorem",
	`license_data`: "Lorem",
	`max_role_level_cnt`: 10,
	`past_ts_cnt`: 4,
	`projinit_admin_user_id`: -42,
	`default_rsrc_sec_id`: -55,
	`allow_user_time_period_flag`: "&apos;N&apos;",
	`exp_root_url`: "Lorem",
	`ts_rsrc_def_asgn_actv_flag`: "&apos;Y&apos;",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 96,
	`delete_date`: "Lorem"
}),

(`prmaudit`:`prmaudit` {
	`audit_date`: "Lorem",
	`table_name`: "Lorem",
	`pk1`: "Lorem",
	`pk2`: "Lorem",
	`pk3`: "Lorem",
	`pk4`: "Lorem",
	`oper`: "L",
	`prm_user_name`: "Lorem",
	`audit_info`: "Lorem",
	`audit_info_extended`: "Lorem",
	`logical_delete_flag`: "L",
	`rdbms_user_name`: "Lorem",
	`os_user_name`: "Lorem",
	`program`: "Lorem",
	`host_name`: "Lorem",
	`app_name`: "Lorem",
	`netaddress`: "Lorem"
}),

(`prmqueue`:`prmqueue` {
	`queue_name`: "Lorem",
	`msg_key`: "Lorem",
	`enqueue_date`: "Lorem",
	`enqueue_user`: "Lorem",
	`status_code`: "Lorem",
	`priority`: -9,
	`sender_name`: "Lorem",
	`dequeue_date`: "Lorem",
	`dequeue_user`: "Lorem",
	`retry_count`: -85,
	`msg_type`: "Lorem",
	`msg_sub_type`: "Lorem",
	`key1`: "Lorem",
	`key2`: "Lorem",
	`err_msg`: "Lorem",
	`queue_payload`: "Lorem",
	`queue_payload_extended`: "Lorem"
}),

(`procgroup`:`procgroup` {
	`proc_group_id`: 63,
	`seq_num`: 98,
	`proc_group_name`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 24,
	`delete_date`: "Lorem"
}),

(`procitem`:`procitem` {
	`proc_item_id`: -1,
	`proc_group_id`: 70,
	`seq_num`: 51,
	`proc_name`: "Lorem",
	`proc_wt`: 23,
	`proc_descr`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -69,
	`delete_date`: "Lorem"
}),

(`profile`:`profile` {
	`prof_id`: -28,
	`default_flag`: "&apos;N&apos;",
	`superuser_flag`: "&apos;N&apos;",
	`scope_type`: "Lorem",
	`prof_name`: "Lorem",
	`prof_descr`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 39,
	`delete_date`: "Lorem"
}),

(`profpriv`:`profpriv` {
	`prof_id`: -31,
	`priv_num`: -69,
	`allow_flag`: "&apos;N&apos;",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 82,
	`delete_date`: "Lorem"
}),

(`profprivx`:`profprivx` {
	`prof_id`: -79,
	`priv_num`: 61,
	`privlegename`: "Lorem",
	`create_date`: "sysdate",
	`update_date`: "sysdate"
}),

(`projcost`:`projcost` {
	`cost_item_id`: -61,
	`proj_id`: 72,
	`task_id`: 10,
	`auto_compute_act_flag`: "&apos;N&apos;",
	`cost_load_type`: "Lorem",
	`acct_id`: 80,
	`cost_type_id`: 53,
	`target_cost`: -57,
	`act_cost`: -19,
	`remain_cost`: 67,
	`qty_name`: "Lorem",
	`target_qty`: 67,
	`cost_per_qty`: -3,
	`po_number`: "Lorem",
	`vendor_name`: "Lorem",
	`cost_name`: "Lorem",
	`cost_descr`: "Lorem",
	`pobs_id`: 69,
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 29,
	`delete_date`: "Lorem"
}),

(`projcostx`:`projcostx` {
	`cost_item_id`: 88,
	`activityid`: "Lorem",
	`activityname`: "Lorem",
	`actualunits`: -67,
	`atcompletioncost`: -42,
	`atcompletionunits`: -68,
	`costaccountid`: "Lorem",
	`costaccountname`: "Lorem",
	`expensecategoryname`: "Lorem",
	`expensepercentcomplete`: 51,
	`overbudget`: "L",
	`projectid`: "Lorem",
	`remainingunits`: 89,
	`wbsobjectid`: 55,
	`create_date`: "sysdate",
	`update_date`: "sysdate"
}),

(`project`:`project` {
	`proj_id`: -85,
	`fy_start_month_num`: -2,
	`chng_eff_cmp_pct_flag`: "&apos;N&apos;",
	`rsrc_self_add_flag`: "&apos;Y&apos;",
	`allow_complete_flag`: "&apos;N&apos;",
	`rsrc_multi_assign_flag`: "&apos;Y&apos;",
	`checkout_flag`: "&apos;N&apos;",
	`project_flag`: "&apos;Y&apos;",
	`step_complete_flag`: "&apos;N&apos;",
	`cost_qty_recalc_flag`: "&apos;N&apos;",
	`sum_only_flag`: "&apos;N&apos;",
	`batch_sum_flag`: "&apos;Y&apos;",
	`name_sep_char`: "Lo",
	`def_complete_pct_type`: "&apos;CP_Drtn&apos;",
	`proj_short_name`: "Lorem",
	`acct_id`: 12,
	`orig_proj_id`: -31,
	`source_proj_id`: 7,
	`base_type_id`: -45,
	`clndr_id`: -30,
	`sum_base_proj_id`: -57,
	`task_code_base`: 46,
	`task_code_step`: 12,
	`priority_num`: -18,
	`wbs_max_sum_level`: -72,
	`risk_level`: 68,
	`strgy_priority_num`: 0,
	`last_checksum`: -19,
	`critical_drtn_hr_cnt`: 88,
	`def_cost_per_qty`: -81,
	`last_recalc_date`: "Lorem",
	`plan_start_date`: "Lorem",
	`plan_end_date`: "Lorem",
	`scd_end_date`: "Lorem",
	`add_date`: "sysdate",
	`sum_data_date`: "Lorem",
	`last_tasksum_date`: "Lorem",
	`fcst_start_date`: "Lorem",
	`def_duration_type`: "Lorem",
	`task_code_prefix`: "Lorem",
	`guid`: "Lorem",
	`def_qty_type`: "Lorem",
	`add_by_name`: "Lorem",
	`web_local_root_path`: "Lorem",
	`proj_url`: "Lorem",
	`def_rate_type`: "Lorem",
	`act_this_per_link_flag`: "&apos;Y&apos;",
	`def_task_type`: "&apos;TT_Task&apos;",
	`act_pct_link_flag`: "&apos;N&apos;",
	`add_act_remain_flag`: "&apos;Y&apos;",
	`critical_path_type`: "&apos;CT_TotFloat&apos;",
	`task_code_prefix_flag`: "&apos;N&apos;",
	`def_rollup_dates_flag`: "&apos;Y&apos;",
	`rem_target_link_flag`: "&apos;Y&apos;",
	`reset_planned_flag`: "&apos;Y&apos;",
	`allow_neg_act_flag`: "&apos;N&apos;",
	`rsrc_id`: -32,
	`msp_managed_flag`: "&apos;N&apos;",
	`msp_update_actuals_flag`: "&apos;N&apos;",
	`checkout_date`: "Lorem",
	`checkout_user_id`: 58,
	`sum_assign_level`: "&apos;SL_Taskrsrc&apos;",
	`last_fin_dates_id`: 25,
	`use_project_baseline_flag`: "&apos;Y&apos;",
	`last_baseline_update_date`: "Lorem",
	`ts_rsrc_vw_compl_asgn_flag`: "&apos;N&apos;",
	`ts_rsrc_mark_act_finish_flag`: "&apos;N&apos;",
	`ts_rsrc_vw_inact_actv_flag`: "&apos;N&apos;",
	`cr_external_key`: "Lorem",
	`apply_actuals_date`: "Lorem",
	`description`: "Lorem",
	`intg_proj_type`: "Lorem",
	`matrix_id`: 1,
	`px_last_update_date`: "Lorem",
	`px_priority`: 50,
	`px_next_date`: "Lorem",
	`px_enable_publication_flag`: "&apos;Y&apos;",
	`last_level_date`: "Lorem",
	`last_schedule_date`: "Lorem",
	`px_safety_date`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 48,
	`delete_date`: "Lorem"
}),

(`projectcodehierarchy`:`projectcodehierarchy` {
	`codetypeobjectid`: 76,
	`codetypename`: "Lorem",
	`codetypesequencenumber`: 62,
	`codetypeissecure`: "L",
	`parentcodevalueobjectid`: 7,
	`parentcodevaluename`: "Lorem",
	`parentcodevalueshortname`: "Lorem",
	`parentcodevaluesequencenumber`: 55,
	`childcodevalueobjectid`: -80,
	`childcodevaluename`: "Lorem",
	`childcodevalueshortname`: "Lorem",
	`childcodevaluesequencenumber`: 55,
	`parentlevelsbelowroot`: 93,
	`childlevelsbelowroot`: 95,
	`levelsbetween`: -74,
	`childhaschildren`: "L",
	`fullpathname`: "Lorem",
	`codetypeweight`: 20,
	`maxcodevalueweight`: -35,
	`parentcodevalueweight`: -5,
	`childcodevalueweight`: -78
}),

(`projectsecurity`:`projectsecurity` {
	`rdbmsuserid`: 48,
	`projectobjectid`: -31,
	`costflag`: "L"
}),

(`projectspread`:`projectspread` {
	`objectid`: 74,
	`id`: "Lorem",
	`name`: "Lorem",
	`parentepsobjectid`: 25,
	`obsobjectid`: 56,
	`obsname`: "Lorem",
	`startdate`: "Lorem",
	`enddate`: "Lorem",
	`actuallaborunits`: 21,
	`actualnonlaborunits`: 93,
	`atcompletionlaborunits`: 93,
	`atcompletionnonlaborunits`: -36,
	`baselineplannedlaborunits`: -55,
	`baselineplannednonlaborunits`: 82,
	`earnedvaluelaborunits`: -53,
	`estimateatcompletionlaborunits`: -60,
	`estimatetocompletelaborunits`: 4,
	`plannedlaborunits`: 52,
	`plannednonlaborunits`: 83,
	`plannedvaluelaborunits`: -10,
	`remaininglaborunits`: 21,
	`remainingnonlaborunits`: -62,
	`actualcost`: -12,
	`actualexpensecost`: 26,
	`actuallaborcost`: -73,
	`actualmaterialcost`: -35,
	`actualnonlaborcost`: 74,
	`actualtotalcost`: -98,
	`atcompletionexpensecost`: 42,
	`atcompletionlaborcost`: 40,
	`atcompletionmaterialcost`: -20,
	`atcompletionnonlaborcost`: 25,
	`atcompletiontotalcost`: -52,
	`baselineplannedexpensecost`: -79,
	`baselineplannedlaborcost`: 86,
	`baselineplannedmaterialcost`: 60,
	`baselineplannednonlaborcost`: -100,
	`baselineplannedtotalcost`: 72,
	`earnedvaluecost`: 34,
	`estimateatcompletioncost`: -19,
	`estimatetocompletecost`: -91,
	`plannedexpensecost`: -6,
	`plannedlaborcost`: -26,
	`plannedmaterialcost`: 65,
	`plannednonlaborcost`: 46,
	`plannedtotalcost`: -83,
	`plannedvaluecost`: 53,
	`remainingexpensecost`: 84,
	`remaininglaborcost`: -9,
	`remainingmaterialcost`: 22,
	`remainingnonlaborcost`: -23,
	`remainingtotalcost`: -43
}),

(`projectx`:`projectx` {
	`proj_id`: -17,
	`annualdiscountrate`: 21,
	`anticipatedfinishdate`: "Lorem",
	`anticipatedstartdate`: "Lorem",
	`containssummarydata`: "L",
	`currentbudget`: 63,
	`currentvariance`: -66,
	`datadate`: "Lorem",
	`discountapplicationperiod`: "Lorem",
	`distributedcurrentbudget`: -72,
	`earnedvaluecomputetype`: "Lorem",
	`earnedvalueetccomputetype`: "Lorem",
	`earnedvalueetcuservalue`: -63,
	`earnedvalueuserpercent`: 51,
	`finishdate`: "Lorem",
	`forecastfinishdate`: "Lorem",
	`forecaststartdate`: "Lorem",
	`independentetclaborunits`: 54,
	`independentetctotalcost`: -82,
	`name`: "Lorem",
	`obsname`: "Lorem",
	`obsobjectid`: -59,
	`originalbudget`: -25,
	`overallprojectscore`: 13,
	`parentepsobjectid`: 27,
	`proposedbudget`: 30,
	`risklevel`: "Lorem",
	`riskscore`: 79,
	`riskexposure`: 94,
	`startdate`: "Lorem",
	`status`: "Lorem",
	`sumaccountingvarbylaborunits`: 17,
	`sumaccountingvariancebycost`: 96,
	`sumactthisperiodmaterialcost`: 89,
	`sumactthisperiodnonlaborcost`: -33,
	`sumactthisperiodnonlaborunits`: -59,
	`sumactualthisperiodlaborcost`: -57,
	`sumactualthisperiodlaborunits`: 29,
	`sumatcompletionmaterialcost`: 60,
	`sumatcompletionnonlaborcost`: -47,
	`sumatcompletionnonlaborunits`: -16,
	`sumatcompletiontotalcostvar`: -85,
	`sumbaselinecompactivitycount`: -11,
	`sumbaselinenotstartedactcnt`: 27,
	`sumblinprogressactivitycount`: -72,
	`sumbudgetatcmpbylaborunits`: -35,
	`sumbudgetatcompletionbycost`: 75,
	`sumcostperfindexbycost`: -97,
	`sumcostperfindexbylaborunits`: 43,
	`sumcostvariancebylaborunits`: 41,
	`sumcostvarindexbylaborunits`: -19,
	`sumdurationpercentofplanned`: 26,
	`sumeacbycost`: 95,
	`sumeacbylaborunits`: 19,
	`sumeachighpctbylaborunits`: -12,
	`sumeaclowpctbylaborunits`: -42,
	`sumetcbycost`: -73,
	`sumetcbylaborunits`: -24,
	`sumexpensecostpctcomplete`: -62,
	`sumlaborcostpercentcomplete`: -12,
	`sumlaborunitspercentcomplete`: -83,
	`sumactivitycount`: 59,
	`sumactualduration`: -12,
	`sumactualexpensecost`: -89,
	`sumactualfinishdate`: "Lorem",
	`summaxactualfinishdate`: "Lorem",
	`summaxrestartdate`: "Lorem",
	`sumactuallaborcost`: 27,
	`sumactuallaborunits`: 91,
	`sumactualmaterialcost`: -78,
	`sumactualnonlaborcost`: 15,
	`sumactualnonlaborunits`: 46,
	`sumactualstartdate`: "Lorem",
	`sumactualthisperiodcost`: 84,
	`sumactualtotalcost`: -23,
	`sumactualvaluebycost`: 8,
	`sumactualvaluebylaborunits`: -23,
	`sumatcompletionduration`: 96,
	`sumatcompletionexpensecost`: -39,
	`sumatcompletionlaborcost`: 35,
	`sumatcompletionlaborunits`: 99,
	`sumatcompletiontotalcost`: 21,
	`sumbaselineduration`: -68,
	`sumbaselineexpensecost`: -11,
	`sumbaselinefinishdate`: "Lorem",
	`sumbaselinelaborcost`: -72,
	`sumbaselinelaborunits`: 56,
	`sumbaselinematerialcost`: -64,
	`sumbaselinenonlaborcost`: -40,
	`sumbaselinenonlaborunits`: -6,
	`sumbaselinestartdate`: "Lorem",
	`sumbaselinetotalcost`: 89,
	`sumcompletedactivitycount`: 87,
	`sumcostpercentcomplete`: -82,
	`sumcostpercentofplanned`: -56,
	`sumcostvariancebycost`: -25,
	`sumcostvarianceindex`: 10,
	`sumcostvarianceindexbycost`: 24,
	`sumdurationpercentcomplete`: 89,
	`sumdurationvariance`: 96,
	`sumearnedvaluebycost`: -39,
	`sumearnedvaluebylaborunits`: -52,
	`sumexpensecostvariance`: 72,
	`sumfinishdatevariance`: -57,
	`suminprogressactivitycount`: -57,
	`sumlaborcostvariance`: 15,
	`sumlaborunitsvariance`: -5,
	`summaterialcostvariance`: 35,
	`sumnonlaborcostvariance`: 66,
	`sumnonlaborunitsvariance`: -42,
	`sumnotstartedactivitycount`: -11,
	`sumplannedvaluebycost`: -81,
	`sumprogressfinishdate`: "Lorem",
	`sumremainingduration`: -50,
	`sumremainingexpensecost`: 43,
	`sumremainingfinishdate`: "Lorem",
	`sumremaininglaborcost`: -10,
	`sumremaininglaborunits`: -74,
	`sumremainingmaterialcost`: 87,
	`sumremainingnonlaborcost`: 63,
	`sumremainingnonlaborunits`: -16,
	`sumremainingstartdate`: "Lorem",
	`sumremainingtotalcost`: -77,
	`sumschedulepercentcomplete`: 96,
	`sumperformancepercentcomplete`: -91,
	`sumschedulevariancebycost`: 42,
	`sumschedulevarianceindex`: -22,
	`sumstartdatevariance`: -87,
	`sumtotalcostvariance`: 49,
	`sumtotalfloat`: -15,
	`sumunitspercentcomplete`: -1,
	`summaterialcostpctcomplete`: -35,
	`sumnonlaborcostpctcomplete`: 71,
	`sumnonlaborunitspctcomplete`: 37,
	`sumperfpctcmpbylaborunits`: -77,
	`sumplannedvaluebylaborunits`: 57,
	`sumschdpctcmpbylaborunits`: 95,
	`sumschdperfindexbylaborunits`: -20,
	`sumschdvariancebylaborunits`: 19,
	`sumschdvarianceindexbycost`: -20,
	`sumschdvarindexbylaborunits`: 51,
	`sumscheduleperfindexbycost`: 89,
	`sumtocompleteperfindexbycost`: -25,
	`sumvaratcmpbylaborunits`: 13,
	`sumearlystartdate`: "Lorem",
	`sumearlyenddate`: "Lorem",
	`sumlatestartdate`: "Lorem",
	`sumlateenddate`: "Lorem",
	`summaxcalendarid`: -95,
	`summincalendarid`: 26,
	`totalbenefitplan`: 44,
	`totalbenefitplantally`: -91,
	`totalfunding`: -17,
	`totalspendingplan`: 47,
	`totalspendingplantally`: 92,
	`unallocatedbudget`: -77,
	`undistributedcurrentvariance`: -50,
	`sumactualprogressdate`: "Lorem",
	`netpresentvalue`: -81,
	`returnoninvestment`: -55,
	`paybackperiod`: -24,
	`create_date`: "sysdate",
	`update_date`: "sysdate"
}),

(`projest`:`projest` {
	`proj_est_id`: -31,
	`proj_id`: 1,
	`wbs_id`: 28,
	`applied_flag`: "&apos;N&apos;",
	`rsrc_type`: "&apos;RT_Labor&apos;",
	`est_type`: "Lorem",
	`est_name`: "Lorem",
	`rsrc_id`: 28,
	`bu_cmplx_value`: 59,
	`adj_mult_pct`: -48,
	`fp_cnt`: -17,
	`fp_cmplx_value`: -87,
	`fp_unadj_cnt`: 0,
	`est_task_cnt`: 31,
	`fp_prod_avg_value`: -76,
	`est_qty`: -45,
	`est_date`: "Lorem",
	`est_notes`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 22,
	`delete_date`: "Lorem"
}),

(`projfund`:`projfund` {
	`proj_fund_id`: -6,
	`fund_id`: -40,
	`proj_id`: -21,
	`fund_cost`: -50,
	`fund_wt`: -25,
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -35,
	`delete_date`: "Lorem"
}),

(`projfundx`:`projfundx` {
	`proj_fund_id`: -58,
	`epsid`: "Lorem",
	`epsname`: "Lorem",
	`epsobjectid`: -6,
	`projectid`: "Lorem",
	`create_date`: "sysdate",
	`update_date`: "sysdate"
}),

(`projissu`:`projissu` {
	`issue_id`: -32,
	`proj_id`: 88,
	`obs_id`: -75,
	`priority_type`: "Lorem",
	`status_code`: "Lorem",
	`issue_name`: "Lorem",
	`thresh_id`: 61,
	`track_view_id`: -34,
	`wbs_id`: 5,
	`task_id`: 91,
	`rsrc_id`: -71,
	`thresh_parm_id`: 90,
	`base_proj_id`: -63,
	`workspace_id`: 8,
	`issue_value`: 61,
	`lo_parm_value`: -67,
	`hi_parm_value`: 61,
	`add_by_name`: "Lorem",
	`resolv_date`: "Lorem",
	`add_date`: "Lorem",
	`issue_notes`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 81,
	`delete_date`: "Lorem"
}),

(`projissux`:`projissux` {
	`issue_id`: 48,
	`activityid`: "Lorem",
	`activityname`: "Lorem",
	`obsname`: "Lorem",
	`projectid`: "Lorem",
	`rawtextnote`: "Lorem",
	`resourceid`: "Lorem",
	`resourcename`: "Lorem",
	`wbscode`: "Lorem",
	`wbsname`: "Lorem",
	`create_date`: "sysdate",
	`update_date`: "sysdate"
}),

(`projpcat`:`projpcat` {
	`proj_id`: -34,
	`proj_catg_type_id`: 10,
	`proj_catg_id`: 83,
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 64,
	`delete_date`: "Lorem"
}),

(`projpcatx`:`projpcatx` {
	`proj_id`: 19,
	`proj_catg_type_id`: -58,
	`projectcodedescription`: "Lorem",
	`projectcodetypename`: "Lorem",
	`projectcodevalue`: "Lorem",
	`projectname`: "Lorem",
	`issecurecode`: "L",
	`create_date`: "sysdate",
	`update_date`: "sysdate"
}),

(`projprop`:`projprop` {
	`proj_id`: 52,
	`prop_name`: "Lorem",
	`prop_value`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -12,
	`delete_date`: "Lorem"
}),

(`projrisk`:`projrisk` {
	`risk_id`: 77,
	`proj_id`: -100,
	`wbs_id`: -26,
	`add_date`: "Lorem",
	`priority_type`: "Lorem",
	`status_code`: "Lorem",
	`risk_name`: "Lorem",
	`risk_type_id`: -55,
	`obs_id`: -55,
	`rsrc_id`: 78,
	`prbly_pct`: 2,
	`impact_work_qty`: -64,
	`impact_equip_qty`: 68,
	`impact_expense_cost`: -12,
	`impact_date`: "Lorem",
	`impact_mat_qty`: 46,
	`risk_descr`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -64,
	`delete_date`: "Lorem"
}),

(`projshar`:`projshar` {
	`proj_id`: 5,
	`session_id`: -39,
	`access_level`: 6,
	`load_status`: "&apos;L&apos;"
}),

(`projthrs`:`projthrs` {
	`thresh_id`: -22,
	`proj_id`: 98,
	`obs_id`: -97,
	`thresh_parm_id`: -19,
	`status_code`: "Lorem",
	`priority_type`: "&apos;PT_Normal&apos;",
	`thresh_type`: "&apos;TM_WBS&apos;",
	`wbs_id`: 83,
	`track_view_id`: -65,
	`lo_parm_value`: 6,
	`hi_parm_value`: 59,
	`window_start`: "Lorem",
	`window_end`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 39,
	`delete_date`: "Lorem"
}),

(`projwbs`:`projwbs` {
	`wbs_id`: 85,
	`proj_id`: -77,
	`obs_id`: -58,
	`seq_num`: -20,
	`est_wt`: 8,
	`proj_node_flag`: "&apos;Y&apos;",
	`sum_data_flag`: "&apos;N&apos;",
	`status_code`: "Lorem",
	`wbs_short_name`: "Lorem",
	`wbs_name`: "Lorem",
	`phase_id`: -87,
	`parent_wbs_id`: 84,
	`ev_user_pct`: -52,
	`ev_etc_user_value`: -59,
	`orig_cost`: 6,
	`indep_remain_total_cost`: 8,
	`ann_dscnt_rate_pct`: 76,
	`dscnt_period_type`: "Lorem",
	`indep_remain_work_qty`: 14,
	`anticip_start_date`: "Lorem",
	`anticip_end_date`: "Lorem",
	`ev_compute_type`: "Lorem",
	`ev_etc_compute_type`: "Lorem",
	`resp_team_id`: 50,
	`iteration_id`: 34,
	`guid`: "Lorem",
	`tmpl_guid`: "Lorem",
	`original_qty`: -97,
	`rqmt_rem_qty`: -76,
	`intg_type`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -83,
	`delete_date`: "Lorem"
}),

(`projwbsx`:`projwbsx` {
	`wbs_id`: 41,
	`id`: "Lorem",
	`lastsummarizeddate`: "Lorem",
	`plannedstartdate`: "Lorem",
	`totalfunding`: 5,
	`currentbudget`: -62,
	`currentvariance`: 56,
	`distributedcurrentbudget`: 32,
	`finishdate`: "Lorem",
	`forecastfinishdate`: "Lorem",
	`forecaststartdate`: "Lorem",
	`fullname`: "Lorem",
	`fullsequence`: "Lorem",
	`obsname`: "Lorem",
	`projectid`: "Lorem",
	`proposedbudget`: 58,
	`startdate`: "Lorem",
	`sumaccountingvarbylaborunits`: 31,
	`sumaccountingvariancebycost`: 62,
	`sumactthisperiodmaterialcost`: -30,
	`sumactthisperiodnonlaborcost`: 1,
	`sumactthisperiodnonlaborunits`: -16,
	`sumactualthisperiodlaborcost`: -96,
	`sumactualthisperiodlaborunits`: -32,
	`sumatcompletionmaterialcost`: 28,
	`sumatcompletionnonlaborcost`: 92,
	`sumatcompletionnonlaborunits`: 27,
	`sumatcompletiontotalcostvar`: -64,
	`sumbaselinecompactivitycount`: 0,
	`sumbaselinenotstartedactcnt`: 60,
	`sumblinprogressactivitycount`: -76,
	`sumbudgetatcmpbylaborunits`: 61,
	`sumbudgetatcompletionbycost`: 85,
	`sumcostperfindexbycost`: -92,
	`sumcostperfindexbylaborunits`: -44,
	`sumcostvariancebylaborunits`: 75,
	`sumcostvarindexbylaborunits`: -87,
	`sumdurationpercentofplanned`: -54,
	`sumeacbycost`: -21,
	`sumeacbylaborunits`: 36,
	`sumeachighpctbylaborunits`: 36,
	`sumeaclowpctbylaborunits`: 94,
	`sumetcbycost`: -98,
	`sumetcbylaborunits`: -30,
	`sumexpensecostpctcomplete`: 34,
	`sumlaborcostpercentcomplete`: 27,
	`sumlaborunitspercentcomplete`: 92,
	`sumactivitycount`: 42,
	`sumactualduration`: 73,
	`sumactualexpensecost`: -20,
	`sumactualfinishdate`: "Lorem",
	`summaxactualfinishdate`: "Lorem",
	`summaxrestartdate`: "Lorem",
	`sumactuallaborcost`: 31,
	`sumactuallaborunits`: -68,
	`sumactualmaterialcost`: 94,
	`sumactualnonlaborcost`: 56,
	`sumactualnonlaborunits`: 18,
	`sumactualstartdate`: "Lorem",
	`sumactualthisperiodcost`: -11,
	`sumactualtotalcost`: -31,
	`sumactualvaluebycost`: -59,
	`sumactualvaluebylaborunits`: 82,
	`sumatcompletionduration`: -1,
	`sumatcompletionexpensecost`: -61,
	`sumatcompletionlaborcost`: 65,
	`sumatcompletionlaborunits`: -37,
	`sumatcompletiontotalcost`: -68,
	`sumbaselineduration`: 20,
	`sumbaselineexpensecost`: -10,
	`sumbaselinefinishdate`: "Lorem",
	`sumbaselinelaborcost`: -64,
	`sumbaselinelaborunits`: -26,
	`sumbaselinematerialcost`: 74,
	`sumbaselinenonlaborcost`: -88,
	`sumbaselinenonlaborunits`: 60,
	`sumbaselinestartdate`: "Lorem",
	`sumbaselinetotalcost`: -27,
	`sumcompletedactivitycount`: 88,
	`sumcostpercentcomplete`: -89,
	`sumcostpercentofplanned`: -98,
	`sumcostvariancebycost`: 22,
	`sumcostvarianceindex`: 87,
	`sumcostvarianceindexbycost`: -40,
	`sumdurationpercentcomplete`: 25,
	`sumdurationvariance`: -54,
	`sumearnedvaluebycost`: 85,
	`sumearnedvaluebylaborunits`: -59,
	`sumexpensecostvariance`: -2,
	`sumfinishdatevariance`: 65,
	`suminprogressactivitycount`: -78,
	`sumlaborcostvariance`: 64,
	`sumlaborunitsvariance`: 85,
	`summaterialcostvariance`: -84,
	`sumnonlaborcostvariance`: -43,
	`sumnonlaborunitsvariance`: -12,
	`sumnotstartedactivitycount`: 9,
	`sumplannedvaluebycost`: -5,
	`sumprogressfinishdate`: "Lorem",
	`sumremainingduration`: 66,
	`sumremainingexpensecost`: 97,
	`sumremainingfinishdate`: "Lorem",
	`sumremaininglaborcost`: -31,
	`sumremaininglaborunits`: 33,
	`sumremainingmaterialcost`: 26,
	`sumremainingnonlaborcost`: 91,
	`sumremainingnonlaborunits`: 92,
	`sumremainingstartdate`: "Lorem",
	`sumremainingtotalcost`: -28,
	`sumschedulepercentcomplete`: 36,
	`sumperformancepercentcomplete`: 29,
	`sumschedulevariancebycost`: 93,
	`sumschedulevarianceindex`: 96,
	`sumstartdatevariance`: -32,
	`sumtotalcostvariance`: 6,
	`sumtotalfloat`: -94,
	`sumunitspercentcomplete`: -55,
	`summaterialcostpctcomplete`: 92,
	`sumnonlaborcostpctcomplete`: 25,
	`sumnonlaborunitspctcomplete`: 30,
	`sumperfpctcmpbylaborunits`: -37,
	`sumplannedvaluebylaborunits`: 44,
	`sumschdpctcmpbylaborunits`: -72,
	`sumschdperfindexbylaborunits`: 90,
	`sumschdvariancebylaborunits`: 52,
	`sumschdvarianceindexbycost`: 14,
	`sumschdvarindexbylaborunits`: 52,
	`sumscheduleperfindexbycost`: -3,
	`sumtocompleteperfindexbycost`: -37,
	`sumvaratcmpbylaborunits`: -79,
	`sumearlystartdate`: "Lorem",
	`sumearlyenddate`: "Lorem",
	`sumlatestartdate`: "Lorem",
	`sumlateenddate`: "Lorem",
	`summaxcalendarid`: 37,
	`summincalendarid`: -34,
	`totalbenefitplan`: -91,
	`totalbenefitplantally`: 38,
	`totalspendingplan`: -39,
	`totalspendingplantally`: -71,
	`unallocatedbudget`: 51,
	`undistributedcurrentvariance`: 1,
	`sumactualprogressdate`: "Lorem",
	`create_date`: "sysdate",
	`update_date`: "sysdate"
}),

(`projwsrpt`:`projwsrpt` {
	`rpt_id`: -51,
	`proj_id`: -66,
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 7,
	`delete_date`: "Lorem"
}),

(`prpfolio`:`prpfolio` {
	`pfolio_id`: -70,
	`wbs_id`: -39,
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -74,
	`delete_date`: "Lorem"
}),

(`pubuser`:`pubuser` {
	`public_group_id`: -42,
	`private_db_user_name`: "Lorem",
	`private_db_passwd`: "Lorem"
}),

(`querylib`:`querylib` {
	`query_lib_id`: -19,
	`app_name`: "Lorem",
	`core_flag`: "L",
	`match_sql`: "Lorem",
	`hints`: "Lorem",
	`replacement_sql`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 79,
	`delete_date`: "Lorem"
}),

(`rcattype`:`rcattype` {
	`rsrc_catg_type_id`: -89,
	`seq_num`: -29,
	`rsrc_catg_short_len`: -39,
	`rsrc_catg_type`: "Lorem",
	`super_flag`: "&apos;N&apos;",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 76,
	`delete_date`: "Lorem"
}),

(`rcatval`:`rcatval` {
	`rsrc_catg_id`: -100,
	`rsrc_catg_type_id`: -38,
	`seq_num`: 0,
	`rsrc_catg_short_name`: "Lorem",
	`rsrc_catg_name`: "Lorem",
	`parent_rsrc_catg_id`: 47,
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 43,
	`delete_date`: "Lorem"
}),

(`rcatvalx`:`rcatvalx` {
	`rsrc_catg_id`: 32,
	`codetypename`: "Lorem",
	`issecurecode`: "L",
	`create_date`: "sysdate",
	`update_date`: "sysdate"
}),

(`refrdel`:`refrdel` {
	`delete_date`: "sysdate",
	`table_name`: "Lorem",
	`pk1`: "Lorem",
	`pk2`: "Lorem",
	`pk3`: "Lorem",
	`pk4`: "Lorem",
	`proj_id`: -46
}),

(`reittype`:`reittype` {
	`related_item_type_id`: -33,
	`related_item`: "Lorem",
	`table_name`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 9,
	`delete_date`: "Lorem"
}),

(`release`:`release` {
	`release_id`: 78,
	`rfolio_id`: 91,
	`release_name`: "Lorem",
	`start_date`: "Lorem",
	`proj_id`: -86,
	`release_theme`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -98,
	`delete_date`: "Lorem"
}),

(`relitems`:`relitems` {
	`item_type_id`: -31,
	`fk_id`: -14,
	`related_item_type_id`: 24,
	`related_fk_id`: -76,
	`proj_id`: -37,
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 28,
	`delete_date`: "Lorem"
}),

(`reportdate`:`reportdate` {
	`datename`: 29,
	`daydate`: "Lorem",
	`dayname`: "Lorem",
	`dayofmonth`: 31,
	`dayofyear`: -18,
	`ordinaldayofmonth`: "Lore",
	`ordinaldayofyear`: "Lorem",
	`weekbegindate`: "Lorem",
	`dayofweek`: 37,
	`weeknumber`: 68,
	`monthnumber`: -96,
	`monthname`: "Lorem",
	`monthshortname`: "Lorem",
	`monthenddate`: "Lorem",
	`daysinmonth`: 63,
	`yearmonth`: -99,
	`quarternumber`: -86,
	`quartername`: "Lorem",
	`year`: -42,
	`etlprocess`: "Lorem",
	`etluser`: "Lorem"
}),

(`reporttime`:`reporttime` {
	`civiliantime`: "Lorem",
	`militarytime`: "Lore",
	`twochar`: "Lo",
	`timename`: "Lo",
	`timeofday`: -54,
	`etlprocess`: "Lorem",
	`etluser`: "Lorem"
}),

(`resourceassignmentspread`:`resourceassignmentspread` {
	`resourceassignmentobjectid`: -6,
	`startdate`: "Lorem",
	`enddate`: "Lorem",
	`resourceobjectid`: -29,
	`roleobjectid`: 79,
	`activityobjectid`: -22,
	`wbsobjectid`: -34,
	`projectobjectid`: -3,
	`costaccountobjectid`: -96,
	`actualregularunits`: -65,
	`actualovertimeunits`: 52,
	`actualunits`: -3,
	`atcompletionunits`: -77,
	`plannedunits`: -66,
	`remainingunits`: 60,
	`remaininglateunits`: -80,
	`staffedremainingunits`: 49,
	`staffedremaininglateunits`: 33,
	`unstaffedremainingunits`: 2,
	`unstaffedremaininglateunits`: -29,
	`actualregularcost`: -59,
	`actualovertimecost`: -43,
	`actualcost`: -28,
	`atcompletioncost`: -55,
	`plannedcost`: -90,
	`remainingcost`: 83,
	`remaininglatecost`: -76,
	`staffedremainingcost`: -31,
	`staffedremaininglatecost`: -91,
	`unstaffedremainingcost`: 40,
	`unstaffedremaininglatecost`: -20
}),

(`resourcecodehierarchy`:`resourcecodehierarchy` {
	`codetypeobjectid`: 4,
	`codetypename`: "Lorem",
	`codetypesequencenumber`: 57,
	`codetypeissecure`: "L",
	`parentcodevalueobjectid`: -72,
	`parentcodevaluename`: "Lorem",
	`parentcodevalueshortname`: "Lorem",
	`parentcodevaluesequencenumber`: 54,
	`childcodevalueobjectid`: -41,
	`childcodevaluename`: "Lorem",
	`childcodevalueshortname`: "Lorem",
	`childcodevaluesequencenumber`: -63,
	`parentlevelsbelowroot`: -25,
	`childlevelsbelowroot`: 61,
	`levelsbetween`: 99,
	`childhaschildren`: "L",
	`fullpathname`: "Lorem"
}),

(`resourcehierarchy`:`resourcehierarchy` {
	`parentobjectid`: 11,
	`parentsequencenumber`: 42,
	`parentname`: "Lorem",
	`parentid`: "Lorem",
	`childobjectid`: -15,
	`childsequencenumber`: 57,
	`childname`: "Lorem",
	`childid`: "Lorem",
	`parentlevelsbelowroot`: -91,
	`childlevelsbelowroot`: -52,
	`levelsbetween`: -21,
	`childhaschildren`: "L",
	`fullpathname`: "Lorem"
}),

(`resourcelimit`:`resourcelimit` {
	`rsrc_id`: -11,
	`startdate`: "Lorem",
	`enddate`: "Lorem",
	`limit`: 77
}),

(`rfolio`:`rfolio` {
	`rfolio_id`: -81,
	`user_id`: -73,
	`rfolio_name`: "Lorem",
	`rfolio_type`: "Lorem",
	`rfolio_descr`: "Lorem",
	`team_capacity_pct`: 51,
	`parent_rfolio_id`: -89,
	`rfolio_data`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 40,
	`delete_date`: "Lorem"
}),

(`rfoliox`:`rfoliox` {
	`rfolio_id`: 97,
	`username`: "Lorem",
	`create_date`: "sysdate",
	`update_date`: "sysdate"
}),

(`risk`:`risk` {
	`risk_id`: -28,
	`proj_id`: 3,
	`id`: "Lorem",
	`name`: "Lorem",
	`total_cost`: 58,
	`rsrc_id`: -8,
	`type`: "Lorem",
	`status`: "Lorem",
	`category_id`: 70,
	`description`: "Lorem",
	`cause`: "Lorem",
	`effect`: "Lorem",
	`note`: "Lorem",
	`identified_by_id`: -96,
	`identified_date`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -52,
	`delete_date`: "Lorem"
}),

(`riskctrl`:`riskctrl` {
	`risk_id`: -84,
	`proj_id`: -54,
	`risk_control`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 59,
	`delete_date`: "Lorem"
}),

(`riskimpact`:`riskimpact` {
	`risk_id`: -57,
	`scoretype_id`: 62,
	`proj_id`: -44,
	`threshold_id`: -75,
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -56,
	`delete_date`: "Lorem"
}),

(`riskmit`:`riskmit` {
	`mitigation_id`: 4,
	`id`: "Lorem",
	`response_id`: 28,
	`proj_id`: -79,
	`task_id`: -48,
	`rsrc_id`: -79,
	`name`: "Lorem",
	`start_date`: "Lorem",
	`finish_date`: "Lorem",
	`base_start_date`: "Lorem",
	`base_finish_date`: "Lorem",
	`remaining_cost`: -4,
	`actual_cost`: 38,
	`budget_cost`: -91,
	`status`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -27,
	`delete_date`: "Lorem"
}),

(`riskmitimp`:`riskmitimp` {
	`mitigation_id`: 35,
	`scoretype_id`: -13,
	`proj_id`: 18,
	`threshold_id`: 44,
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 94,
	`delete_date`: "Lorem"
}),

(`riskmitx`:`riskmitx` {
	`mitigation_id`: -79,
	`score`: 78,
	`scoretext`: "Lorem",
	`scorecolor`: "Lorem",
	`physicalstartdate`: "Lorem",
	`physicalfinishdate`: "Lorem",
	`physicalbasestartdate`: "Lorem",
	`physicalbasefinishdate`: "Lorem",
	`remainingcost`: 35,
	`actualcost`: -72,
	`plannedcost`: -41,
	`create_date`: "sysdate",
	`update_date`: "sysdate"
}),

(`riskmtxscr`:`riskmtxscr` {
	`score_id`: -86,
	`matrix_id`: 14,
	`probability_threshold_level`: 38,
	`severity1`: -24,
	`severity1label`: "Lorem",
	`severity2`: -67,
	`severity2label`: "Lorem",
	`severity3`: 71,
	`severity3label`: "Lorem",
	`severity4`: 39,
	`severity4label`: "Lorem",
	`severity5`: -4,
	`severity5label`: "Lorem",
	`severity6`: -66,
	`severity6label`: "Lorem",
	`severity7`: 40,
	`severity7label`: "Lorem",
	`severity8`: -22,
	`severity8label`: "Lorem",
	`severity9`: -37,
	`severity9label`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -75,
	`delete_date`: "Lorem"
}),

(`riskrsppln`:`riskrsppln` {
	`response_id`: 25,
	`id`: "Lorem",
	`risk_id`: 78,
	`proj_id`: 84,
	`name`: "Lorem",
	`used`: "L",
	`type`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -86,
	`delete_date`: "Lorem"
}),

(`riskrspplnx`:`riskrspplnx` {
	`response_id`: -73,
	`actualcost`: -18,
	`remainingcost`: 21,
	`plannedcost`: 93,
	`startdate`: "Lorem",
	`finishdate`: "Lorem",
	`plannedstartdate`: "Lorem",
	`plannedfinishdate`: "Lorem",
	`score`: -12,
	`scoretext`: "Lorem",
	`scorecolor`: "Lorem",
	`create_date`: "sysdate",
	`update_date`: "sysdate"
}),

(`riskscrmtx`:`riskscrmtx` {
	`matrix_id`: -29,
	`name`: "Lorem",
	`description`: "Lorem",
	`method`: "Lorem",
	`impact_levels`: 94,
	`probability_levels`: 43,
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 36,
	`delete_date`: "Lorem"
}),

(`riskscrthr`:`riskscrthr` {
	`threshold_id`: 31,
	`scoretype_id`: 95,
	`short_name`: "Lorem",
	`full_name`: "Lorem",
	`color`: "Lorem",
	`lvl`: 26,
	`value`: "Lorem",
	`probability_value`: 83,
	`tolerance_value`: -100,
	`schedule_value`: -34,
	`cost_value`: 12,
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -76,
	`delete_date`: "Lorem"
}),

(`riskscrtyp`:`riskscrtyp` {
	`scoretype_id`: 54,
	`name`: "Lorem",
	`type`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -35,
	`delete_date`: "Lorem"
}),

(`risktype`:`risktype` {
	`risk_type_id`: -41,
	`seq_num`: -72,
	`risk_type`: "Lorem",
	`parent_risk_type_id`: -49,
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -12,
	`delete_date`: "Lorem"
}),

(`riskx`:`riskx` {
	`risk_id`: -75,
	`score`: 40,
	`scoretext`: "Lorem",
	`scorecolor`: "Lorem",
	`exposure`: -73,
	`identifiedbyresourceid`: "Lorem",
	`identifiedbyresourcename`: "Lorem",
	`exposurestartdate`: "Lorem",
	`exposurefinishdate`: "Lorem",
	`create_date`: "sysdate",
	`update_date`: "sysdate"
}),

(`rlfolio`:`rlfolio` {
	`rlfolio_id`: 34,
	`user_id`: -73,
	`rlfolio_name`: "Lorem",
	`rlfolio_type`: "Lorem",
	`rlfolio_descr`: "Lorem",
	`rlfolio_data`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -6,
	`delete_date`: "Lorem"
}),

(`rlfoliox`:`rlfoliox` {
	`rlfolio_id`: 1,
	`username`: "Lorem",
	`create_date`: "sysdate",
	`update_date`: "sysdate"
}),

(`rolelimit`:`rolelimit` {
	`rolelimit_id`: -18,
	`role_id`: -83,
	`start_date`: "Lorem",
	`max_qty_per_hr`: 44,
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 75,
	`delete_date`: "Lorem"
}),

(`rolerate`:`rolerate` {
	`role_rate_id`: 71,
	`role_id`: 99,
	`cost_per_qty`: 38,
	`cost_per_qty2`: -85,
	`cost_per_qty3`: -54,
	`cost_per_qty4`: -27,
	`cost_per_qty5`: 4,
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -79,
	`delete_date`: "Lorem"
}),

(`roleratex`:`roleratex` {
	`role_rate_id`: 26,
	`roleid`: "Lorem",
	`rolename`: "Lorem",
	`create_date`: "sysdate",
	`update_date`: "sysdate"
}),

(`roles`:`roles` {
	`role_id`: -78,
	`role_short_name`: "Lorem",
	`role_name`: "Lorem",
	`seq_num`: -31,
	`parent_role_id`: 4,
	`def_cost_qty_link_flag`: "L",
	`cost_qty_type`: "&apos;QT_Hour&apos;",
	`pobs_id`: 53,
	`role_descr`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -38,
	`delete_date`: "Lorem"
}),

(`rolfolio`:`rolfolio` {
	`rlfolio_id`: 17,
	`role_id`: 69,
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -97,
	`delete_date`: "Lorem"
}),

(`rpt`:`rpt` {
	`rpt_id`: 48,
	`global_flag`: "&apos;N&apos;",
	`rpt_type`: "Lorem",
	`rpt_name`: "Lorem",
	`rpt_area`: "&apos;Unknown&apos;",
	`rpt_group_id`: -33,
	`proj_id`: 91,
	`rpt_state`: "Lorem",
	`rpt_data`: "Lorem",
	`last_run_date`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -79,
	`delete_date`: "Lorem"
}),

(`rptbatch`:`rptbatch` {
	`rpt_batch_id`: 94,
	`rpt_batch_name`: "Lorem",
	`proj_id`: 32,
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -96,
	`delete_date`: "Lorem"
}),

(`rptgroup`:`rptgroup` {
	`rpt_group_id`: 96,
	`rpt_group_seq_num`: 28,
	`rpt_group_name`: "Lorem",
	`parent_group_id`: -48,
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 63,
	`delete_date`: "Lorem"
}),

(`rptlist`:`rptlist` {
	`rpt_batch_id`: -31,
	`rpt_id`: 74,
	`seq_num`: -59,
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 97,
	`delete_date`: "Lorem"
}),

(`rsrc`:`rsrc` {
	`rsrc_id`: 86,
	`clndr_id`: -75,
	`rsrc_seq_num`: -48,
	`timesheet_flag`: "&apos;Y&apos;",
	`active_flag`: "&apos;Y&apos;",
	`rsrc_type`: "&apos;RT_Labor&apos;",
	`auto_compute_act_flag`: "&apos;N&apos;",
	`ot_flag`: "&apos;N&apos;",
	`def_cost_qty_link_flag`: "&apos;N&apos;",
	`rsrc_short_name`: "Lorem",
	`rsrc_name`: "Lorem",
	`parent_rsrc_id`: 84,
	`xfer_complete_day_cnt`: -52,
	`xfer_notstart_day_cnt`: -59,
	`ts_approve_user_id`: 5,
	`user_id`: 7,
	`role_id`: 49,
	`curr_id`: 1,
	`last_checksum`: -13,
	`shift_id`: 25,
	`ot_factor`: -65,
	`def_qty_per_hr`: -25,
	`guid`: "Lorem",
	`cost_qty_type`: "Lorem",
	`office_phone`: "Lorem",
	`other_phone`: "Lorem",
	`employee_code`: "Lorem",
	`rsrc_title_name`: "Lorem",
	`email_addr`: "Lorem",
	`unit_id`: 75,
	`pobs_id`: 11,
	`rsrc_notes`: "Lorem",
	`intg_type`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -38,
	`delete_date`: "Lorem"
}),

(`rsrcandash`:`rsrcandash` {
	`dashboard_id`: 22,
	`rsrcan_view_id`: -27,
	`seq_num`: -54,
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 53,
	`delete_date`: "Lorem"
}),

(`rsrcanview`:`rsrcanview` {
	`rsrcan_view_id`: -79,
	`rsrcan_view_name`: "Lorem",
	`user_id`: -84,
	`rsrcan_view_type`: "Lorem",
	`rsrcan_view_data`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 69,
	`delete_date`: "Lorem"
}),

(`rsrccurv`:`rsrccurv` {
	`curv_id`: -17,
	`curv_name`: "Lorem",
	`default_flag`: "&apos;N&apos;",
	`curv_data`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 39,
	`delete_date`: "Lorem"
}),

(`rsrccurvx`:`rsrccurvx` {
	`curv_id`: 66,
	`value0`: 47,
	`value5`: -88,
	`value10`: -29,
	`value15`: 36,
	`value20`: -29,
	`value25`: -35,
	`value30`: 10,
	`value35`: 37,
	`value40`: 82,
	`value45`: 88,
	`value50`: 28,
	`value55`: 28,
	`value60`: 52,
	`value65`: -100,
	`value70`: -76,
	`value75`: -49,
	`value80`: 56,
	`value85`: -80,
	`value90`: -73,
	`value95`: -9,
	`value100`: -21,
	`create_date`: "sysdate",
	`update_date`: "sysdate"
}),

(`rsrchour`:`rsrchour` {
	`rsrc_hr_id`: -62,
	`rsrc_id`: 2,
	`ts_id`: 4,
	`task_ts_flag`: "&apos;N&apos;",
	`taskrsrc_id`: 93,
	`nonwork_type_id`: -7,
	`proj_id`: 31,
	`pend_hr_cnt`: -59,
	`hr_cnt`: 95,
	`pend_ot_hr_cnt`: -74,
	`ot_hr_cnt`: 33,
	`work_date`: "Lorem",
	`status_code`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 30,
	`delete_date`: "Lorem"
}),

(`rsrchourx`:`rsrchourx` {
	`rsrc_hr_id`: -61,
	`projectid`: "Lorem",
	`projectname`: "Lorem",
	`resourceid`: "Lorem",
	`resourcename`: "Lorem",
	`create_date`: "sysdate",
	`update_date`: "sysdate"
}),

(`rsrcprop`:`rsrcprop` {
	`rsrc_id`: -35,
	`prop_name`: "Lorem",
	`prop_value`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 34,
	`delete_date`: "Lorem"
}),

(`rsrcrate`:`rsrcrate` {
	`rsrc_rate_id`: -14,
	`rsrc_id`: -78,
	`start_date`: "Lorem",
	`shift_period_id`: -21,
	`max_qty_per_hr`: -90,
	`cost_per_qty`: 77,
	`cost_per_qty2`: 39,
	`cost_per_qty3`: -65,
	`cost_per_qty4`: 97,
	`cost_per_qty5`: 1,
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -33,
	`delete_date`: "Lorem"
}),

(`rsrcratex`:`rsrcratex` {
	`rsrc_rate_id`: -16,
	`resourceid`: "Lorem",
	`resourcename`: "Lorem",
	`create_date`: "sysdate",
	`update_date`: "sysdate"
}),

(`rsrcrcat`:`rsrcrcat` {
	`rsrc_id`: -86,
	`rsrc_catg_type_id`: -22,
	`rsrc_catg_id`: -72,
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -31,
	`delete_date`: "Lorem"
}),

(`rsrcrcatx`:`rsrcrcatx` {
	`rsrc_id`: 2,
	`rsrc_catg_type_id`: 36,
	`resourcecodedescription`: "Lorem",
	`resourcecodetypename`: "Lorem",
	`resourcecodevalue`: "Lorem",
	`resourceid`: "Lorem",
	`resourcename`: "Lorem",
	`issecurecode`: "L",
	`create_date`: "sysdate",
	`update_date`: "sysdate"
}),

(`rsrcrole`:`rsrcrole` {
	`rsrc_id`: 54,
	`role_id`: 21,
	`skill_level`: 93,
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 93,
	`delete_date`: "Lorem"
}),

(`rsrcrolex`:`rsrcrolex` {
	`rsrc_id`: 6,
	`role_id`: -97,
	`proficiency`: "Lorem",
	`resourceid`: "Lorem",
	`resourcename`: "Lorem",
	`roleid`: "Lorem",
	`rolename`: "Lorem",
	`create_date`: "sysdate",
	`update_date`: "sysdate"
}),

(`rsrcsec`:`rsrcsec` {
	`user_id`: 26,
	`rsrc_id`: -74,
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -79,
	`delete_date`: "Lorem"
}),

(`rsrcsecx`:`rsrcsecx` {
	`user_id`: 71,
	`rsrc_id`: 33,
	`resourceid`: "Lorem",
	`resourcename`: "Lorem",
	`username`: "Lorem",
	`create_date`: "sysdate",
	`update_date`: "sysdate"
}),

(`rsrcx`:`rsrcx` {
	`rsrc_id`: -15,
	`calendarname`: "Lorem",
	`currencyid`: "Lorem",
	`currencyname`: "Lorem",
	`primaryroleid`: "Lorem",
	`primaryrolename`: "Lorem",
	`timesheetapprovalmanager`: "Lorem",
	`username`: "Lorem",
	`create_date`: "sysdate",
	`update_date`: "sysdate"
}),

(`rsrfolio`:`rsrfolio` {
	`rfolio_id`: 66,
	`rsrc_id`: 28,
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 53,
	`delete_date`: "Lorem"
}),

(`scenario`:`scenario` {
	`scenario_id`: -4,
	`scenario_name`: "Lorem",
	`user_id`: -42,
	`table_name`: "Lorem",
	`fk_id`: 96,
	`scenario_type`: "Lorem",
	`view_pref_id`: 81,
	`view_type`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 48,
	`delete_date`: "Lorem"
}),

(`scenproj`:`scenproj` {
	`scenario_id`: -72,
	`proj_id`: -1,
	`selected_flag`: "&apos;N&apos;",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 23,
	`delete_date`: "Lorem"
}),

(`scenrole`:`scenrole` {
	`scenario_id`: 95,
	`role_id`: 17,
	`selected_flag`: "&apos;N&apos;",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 52,
	`delete_date`: "Lorem"
}),

(`scenuser`:`scenuser` {
	`scenario_id`: -49,
	`user_id`: -54,
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 10,
	`delete_date`: "Lorem"
}),

(`settings`:`settings` {
	`namespace`: "Lorem",
	`setting_name`: "Lorem",
	`setting_value`: "Lorem",
	`user_id`: 21,
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -73,
	`delete_date`: "Lorem"
}),

(`shift`:`shift` {
	`shift_id`: -96,
	`shift_name`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 96,
	`delete_date`: "Lorem"
}),

(`shiftper`:`shiftper` {
	`shift_period_id`: 81,
	`shift_id`: 55,
	`shift_start_hr_num`: 95,
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -98,
	`delete_date`: "Lorem"
}),

(`spidmap`:`spidmap` {
	`spid`: -95,
	`user_id`: 52,
	`user_name`: "Lorem",
	`app_name`: "Lorem",
	`audit_info_extended`: "Lorem"
}),

(`sumprojcost`:`sumprojcost` {
	`proj_id`: 27,
	`wbs_id`: -40,
	`cost_type_id`: 99,
	`start_date`: "Lorem",
	`end_date`: "Lorem",
	`spread_type`: "Lorem",
	`act_cost`: 67,
	`remain_cost`: 35,
	`target_cost`: -62,
	`total_cost`: 54
}),

(`sumtask`:`sumtask` {
	`proj_id`: 46,
	`wbs_id`: 14,
	`bcwp`: 53,
	`bcws`: 84,
	`eac`: -23,
	`eac_work_qty`: 8,
	`etc`: -23,
	`etc_work_qty`: -62,
	`perfm_work_qty`: -5,
	`sched_work_qty`: 76,
	`complete_cnt`: -67,
	`active_cnt`: 61,
	`notstarted_cnt`: -68,
	`base_complete_cnt`: 3,
	`base_active_cnt`: 34,
	`base_notstarted_cnt`: 60,
	`act_drtn_hr_cnt`: 92,
	`total_drtn_hr_cnt`: -73,
	`base_drtn_hr_cnt`: 25,
	`remain_drtn_hr_cnt`: 89,
	`total_float_hr_cnt`: 96,
	`act_end_date`: "Lorem",
	`act_start_date`: "Lorem",
	`base_end_date`: "Lorem",
	`base_start_date`: "Lorem",
	`reend_date`: "Lorem",
	`restart_date`: "Lorem",
	`act_this_per_work_cost`: -58,
	`act_this_per_work_qty`: -51,
	`act_this_per_equip_cost`: 61,
	`act_this_per_equip_qty`: 92,
	`act_this_per_mat_cost`: -15,
	`act_cost`: 15,
	`act_equip_cost`: -54,
	`act_expense_cost`: -95,
	`act_mat_cost`: -50,
	`act_work_cost`: 43,
	`act_equip_qty`: 88,
	`act_work_qty`: -10,
	`base_cost`: -95,
	`base_equip_cost`: 39,
	`base_expense_cost`: 43,
	`base_mat_cost`: -23,
	`base_work_cost`: 29,
	`base_equip_qty`: 47,
	`base_work_qty`: 20,
	`remain_cost`: -15,
	`remain_equip_cost`: -42,
	`remain_expense_cost`: -30,
	`remain_mat_cost`: -16,
	`remain_work_cost`: -42,
	`remain_equip_qty`: -77,
	`remain_work_qty`: 96,
	`target_cost`: -92,
	`target_equip_cost`: -19,
	`target_expense_cost`: -26,
	`target_mat_cost`: -97,
	`target_work_cost`: 32,
	`target_equip_qty`: -40,
	`target_work_qty`: -74,
	`total_cost`: 25,
	`total_equip_cost`: -34,
	`total_expense_cost`: 97,
	`total_mat_cost`: 37,
	`total_work_cost`: -51,
	`total_equip_qty`: 4,
	`total_work_qty`: -37,
	`target_start_date`: "Lorem",
	`target_end_date`: "Lorem",
	`target_drtn_hr_cnt`: -73
}),

(`sumtaskspread`:`sumtaskspread` {
	`proj_id`: 56,
	`wbs_id`: 95,
	`start_date`: "Lorem",
	`end_date`: "Lorem",
	`spread_type`: "Lorem",
	`act_cost`: -71,
	`act_equip_cost`: 50,
	`act_expense_cost`: 89,
	`act_mat_cost`: -25,
	`act_work_cost`: 13,
	`act_equip_qty`: -26,
	`act_work_qty`: -71,
	`base_cost`: -7,
	`base_equip_cost`: 67,
	`base_expense_cost`: -69,
	`base_mat_cost`: 52,
	`base_work_cost`: -21,
	`base_equip_qty`: -69,
	`base_work_qty`: -5,
	`late_remain_cost`: 69,
	`late_remain_equip_cost`: -67,
	`late_remain_expense_cost`: 55,
	`late_remain_mat_cost`: -81,
	`late_remain_work_cost`: -50,
	`late_remain_equip_qty`: -24,
	`late_remain_work_qty`: 7,
	`remain_cost`: 42,
	`remain_equip_cost`: 1,
	`remain_expense_cost`: 32,
	`remain_mat_cost`: 58,
	`remain_work_cost`: 89,
	`remain_equip_qty`: -75,
	`remain_work_qty`: -14,
	`target_cost`: 4,
	`target_equip_cost`: 82,
	`target_expense_cost`: 61,
	`target_mat_cost`: -61,
	`target_work_cost`: -43,
	`target_equip_qty`: 28,
	`target_work_qty`: 85,
	`total_cost`: -100,
	`total_equip_cost`: -43,
	`total_expense_cost`: -48,
	`total_mat_cost`: -47,
	`total_work_cost`: 62,
	`total_equip_qty`: -99,
	`total_work_qty`: -14,
	`bcwp`: 24,
	`bcws`: -52,
	`eac`: 0,
	`eac_work_qty`: 31,
	`etc`: -77,
	`etc_work_qty`: -46,
	`perfm_work_qty`: 85,
	`sched_work_qty`: -87,
	`fin_period_act_work_qty`: 46,
	`fin_period_act_work_cost`: 37,
	`fin_period_act_equip_qty`: -30,
	`fin_period_act_equip_cost`: -79,
	`fin_period_act_mat_cost`: -6,
	`fin_period_act_expense_cost`: -47,
	`fin_period_total_work_qty`: -68,
	`fin_period_total_work_cost`: 92,
	`fin_period_total_equip_qty`: -83,
	`fin_period_total_equip_cost`: -92,
	`fin_period_total_mat_cost`: 34,
	`fin_period_total_expense_cost`: -35,
	`fin_period_total_cost`: 91,
	`fin_period_act_cost`: 60,
	`fin_period_bcwp`: -56,
	`fin_period_perfm_work_qty`: 84,
	`fin_period_eac`: 1,
	`fin_period_eac_work_qty`: -58,
	`fin_period_bcws`: 67,
	`fin_period_sched_work_qty`: -65
}),

(`sumtrsrc`:`sumtrsrc` {
	`sumtrsrc_id`: 32,
	`proj_id`: -58,
	`wbs_id`: -96,
	`start_date`: "Lorem",
	`end_date`: "Lorem",
	`spread_type`: "Lorem",
	`rsrc_id`: 11,
	`role_id`: 49,
	`act_start_date`: "Lorem",
	`act_end_date`: "Lorem",
	`remain_start_date`: "Lorem",
	`remain_end_date`: "Lorem",
	`overalloc_date`: "Lorem",
	`staffed_act_qty`: -26,
	`unstaffed_act_qty`: 12,
	`staffed_act_cost`: -27,
	`unstaffed_act_cost`: -63,
	`staffed_act_ot_qty`: 9,
	`unstaffed_act_ot_qty`: 61,
	`staffed_act_ot_cost`: -68,
	`unstaffed_act_ot_cost`: 61,
	`staffed_act_reg_cost`: -23,
	`unstaffed_act_reg_cost`: -71,
	`staffed_act_reg_qty`: 7,
	`unstaffed_act_reg_qty`: 52,
	`staffed_late_remain_qty`: -69,
	`unstaffed_late_remain_qty`: 52,
	`staffed_late_remain_cost`: -75,
	`unstaffed_late_remain_cost`: -44,
	`staffed_remain_qty`: -17,
	`unstaffed_remain_qty`: 14,
	`staffed_remain_cost`: 48,
	`unstaffed_remain_cost`: 96,
	`staffed_target_qty`: 0,
	`unstaffed_target_qty`: 38,
	`staffed_target_cost`: 57,
	`unstaffed_target_cost`: 95,
	`staffed_total_qty`: -77,
	`unstaffed_total_qty`: 40,
	`staffed_total_cost`: -89,
	`unstaffed_total_cost`: 98,
	`fin_period_act_qty`: -31,
	`fin_period_act_cost`: -7,
	`fin_period_total_qty`: -88,
	`fin_period_total_cost`: -34
}),

(`task`:`task` {
	`task_id`: 12,
	`proj_id`: 6,
	`wbs_id`: 65,
	`clndr_id`: 30,
	`est_wt`: 68,
	`phys_complete_pct`: 0,
	`rev_fdbk_flag`: "&apos;N&apos;",
	`lock_plan_flag`: "&apos;N&apos;",
	`auto_compute_act_flag`: "&apos;N&apos;",
	`complete_pct_type`: "&apos;CP_Drtn&apos;",
	`task_type`: "Lorem",
	`duration_type`: "Lorem",
	`review_type`: "&apos;RV_OK&apos;",
	`status_code`: "Lorem",
	`task_code`: "Lorem",
	`task_name`: "Lorem",
	`rsrc_id`: 50,
	`total_float_hr_cnt`: -23,
	`free_float_hr_cnt`: -61,
	`remain_drtn_hr_cnt`: -85,
	`act_work_qty`: 77,
	`remain_work_qty`: -100,
	`target_work_qty`: 50,
	`target_drtn_hr_cnt`: -21,
	`target_equip_qty`: -93,
	`act_equip_qty`: 36,
	`remain_equip_qty`: -27,
	`cstr_date`: "Lorem",
	`act_start_date`: "Lorem",
	`act_end_date`: "Lorem",
	`late_start_date`: "Lorem",
	`late_end_date`: "Lorem",
	`expect_end_date`: "Lorem",
	`early_start_date`: "Lorem",
	`early_end_date`: "Lorem",
	`restart_date`: "Lorem",
	`reend_date`: "Lorem",
	`target_start_date`: "Lorem",
	`target_end_date`: "Lorem",
	`review_end_date`: "Lorem",
	`rem_late_start_date`: "Lorem",
	`rem_late_end_date`: "Lorem",
	`cstr_type`: "Lorem",
	`priority_type`: "Lorem",
	`guid`: "Lorem",
	`tmpl_guid`: "Lorem",
	`cstr_date2`: "Lorem",
	`cstr_type2`: "Lorem",
	`float_path`: 9,
	`float_path_order`: -23,
	`act_this_per_work_qty`: -63,
	`act_this_per_equip_qty`: 1,
	`driving_path_flag`: "&apos;N&apos;",
	`suspend_date`: "Lorem",
	`resume_date`: "Lorem",
	`external_early_start_date`: "Lorem",
	`external_late_end_date`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 36,
	`delete_date`: "Lorem"
}),

(`taskactv`:`taskactv` {
	`task_id`: 8,
	`actv_code_type_id`: -35,
	`actv_code_id`: 36,
	`proj_id`: 22,
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 42,
	`delete_date`: "Lorem"
}),

(`taskactvx`:`taskactvx` {
	`task_id`: 71,
	`actv_code_type_id`: 32,
	`activitycodedescription`: "Lorem",
	`activitycodetypename`: "Lorem",
	`activitycodetypescope`: "Lorem",
	`activitycodevalue`: "Lorem",
	`activityid`: "Lorem",
	`activityname`: "Lorem",
	`issecurecode`: "L",
	`create_date`: "sysdate",
	`update_date`: "sysdate"
}),

(`taskdoc`:`taskdoc` {
	`taskdoc_id`: 95,
	`doc_id`: 31,
	`proj_id`: 19,
	`wbs_id`: -45,
	`wp_flag`: "&apos;N&apos;",
	`task_id`: 59,
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -7,
	`delete_date`: "Lorem"
}),

(`taskdocx`:`taskdocx` {
	`taskdoc_id`: 71,
	`activityid`: "Lorem",
	`activityname`: "Lorem",
	`documenttitle`: "Lorem",
	`projectid`: "Lorem",
	`wbscode`: "Lorem",
	`wbsname`: "Lorem",
	`create_date`: "sysdate",
	`update_date`: "sysdate"
}),

(`taskfdbk`:`taskfdbk` {
	`task_id`: 80,
	`proj_id`: 5,
	`task_fdbk`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -86,
	`delete_date`: "Lorem"
}),

(`taskfin`:`taskfin` {
	`fin_dates_id`: 35,
	`task_id`: -92,
	`proj_id`: -61,
	`act_work_qty`: 46,
	`act_work_cost`: 77,
	`act_equip_qty`: 31,
	`act_equip_cost`: -52,
	`act_mat_cost`: -21,
	`act_expense_cost`: 86,
	`bcwp`: -83,
	`sched_work_qty`: -99,
	`bcws`: -70,
	`perfm_work_qty`: -96,
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 82,
	`delete_date`: "Lorem"
}),

(`taskfinx`:`taskfinx` {
	`fin_dates_id`: 41,
	`task_id`: -23,
	`wbsobjectid`: 35,
	`create_date`: "sysdate",
	`update_date`: "sysdate"
}),

(`taskmemo`:`taskmemo` {
	`memo_id`: -20,
	`task_id`: 8,
	`memo_type_id`: -46,
	`proj_id`: 75,
	`task_memo`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -26,
	`delete_date`: "Lorem"
}),

(`taskmemox`:`taskmemox` {
	`memo_id`: 59,
	`activityid`: "Lorem",
	`activityname`: "Lorem",
	`notebooktopicname`: "Lorem",
	`projectid`: "Lorem",
	`rawtextnote`: "Lorem",
	`wbsobjectid`: 8,
	`create_date`: "sysdate",
	`update_date`: "sysdate"
}),

(`tasknote`:`tasknote` {
	`task_id`: 42,
	`proj_id`: 72,
	`task_notes`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 20,
	`delete_date`: "Lorem"
}),

(`taskpred`:`taskpred` {
	`task_pred_id`: 11,
	`task_id`: -88,
	`pred_task_id`: 46,
	`proj_id`: 36,
	`pred_proj_id`: -31,
	`pred_type`: "Lorem",
	`lag_hr_cnt`: -93,
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 46,
	`delete_date`: "Lorem"
}),

(`taskpredx`:`taskpredx` {
	`task_pred_id`: 94,
	`predecessoractivityid`: "Lorem",
	`predecessoractivityname`: "Lorem",
	`predecessorprojectid`: "Lorem",
	`successoractivityid`: "Lorem",
	`successoractivityname`: "Lorem",
	`successorprojectid`: "Lorem",
	`create_date`: "sysdate",
	`update_date`: "sysdate"
}),

(`taskproc`:`taskproc` {
	`proc_id`: -68,
	`task_id`: 21,
	`seq_num`: -10,
	`proj_id`: 86,
	`complete_flag`: "&apos;N&apos;",
	`proc_name`: "Lorem",
	`proc_wt`: 74,
	`complete_pct`: -88,
	`proc_descr`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -89,
	`delete_date`: "Lorem"
}),

(`taskprocx`:`taskprocx` {
	`proc_id`: 22,
	`activityid`: "Lorem",
	`activityname`: "Lorem",
	`projectid`: "Lorem",
	`wbsobjectid`: -54,
	`weightpercent`: 85,
	`create_date`: "sysdate",
	`update_date`: "sysdate"
}),

(`taskrisk`:`taskrisk` {
	`task_id`: -74,
	`risk_id`: 62,
	`proj_id`: 14,
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 35,
	`delete_date`: "Lorem"
}),

(`taskriskx`:`taskriskx` {
	`task_id`: 81,
	`risk_id`: -88,
	`projectid`: "Lorem",
	`projectname`: "Lorem",
	`activityid`: "Lorem",
	`activityname`: "Lorem",
	`riskname`: "Lorem",
	`create_date`: "sysdate",
	`update_date`: "sysdate"
}),

(`taskrsrc`:`taskrsrc` {
	`taskrsrc_id`: 19,
	`task_id`: 83,
	`proj_id`: -25,
	`rsrc_type`: "&apos;RT_Labor&apos;",
	`cost_qty_link_flag`: "&apos;N&apos;",
	`role_id`: 89,
	`acct_id`: 98,
	`rsrc_id`: 2,
	`pobs_id`: 26,
	`skill_level`: -60,
	`pend_complete_pct`: -36,
	`remain_qty`: 87,
	`pend_remain_qty`: 83,
	`target_qty`: -93,
	`remain_qty_per_hr`: 21,
	`pend_act_reg_qty`: 45,
	`target_lag_drtn_hr_cnt`: -32,
	`target_qty_per_hr`: 69,
	`act_ot_qty`: 77,
	`pend_act_ot_qty`: 6,
	`act_reg_qty`: 15,
	`relag_drtn_hr_cnt`: -56,
	`ot_factor`: 63,
	`cost_per_qty`: 29,
	`target_cost`: -14,
	`act_reg_cost`: -47,
	`act_ot_cost`: -14,
	`remain_cost`: -43,
	`act_start_date`: "Lorem",
	`act_end_date`: "Lorem",
	`restart_date`: "Lorem",
	`reend_date`: "Lorem",
	`target_start_date`: "Lorem",
	`target_end_date`: "Lorem",
	`rem_late_start_date`: "Lorem",
	`rem_late_end_date`: "Lorem",
	`guid`: "Lorem",
	`rate_type`: "&apos;COST_PER_QTY&apos;",
	`act_this_per_cost`: 96,
	`act_this_per_qty`: -68,
	`curv_id`: -63,
	`rollup_dates_flag`: "&apos;Y&apos;",
	`cost_per_qty_source_type`: "&apos;ST_Rsrc&apos;",
	`remain_crv`: "Lorem",
	`target_crv`: "Lorem",
	`actual_crv`: "Lorem",
	`rsrc_request_data`: "Lorem",
	`ts_pend_act_end_flag`: "&apos;N&apos;",
	`prior_ts_act_reg_qty`: -81,
	`prior_ts_act_ot_qty`: 21,
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 43,
	`delete_date`: "Lorem"
}),

(`taskrsrcx`:`taskrsrcx` {
	`taskrsrc_id`: -8,
	`proficiency`: "Lorem",
	`remaininglag`: -70,
	`activityid`: "Lorem",
	`activityname`: "Lorem",
	`actualcost`: 14,
	`actualduration`: 86,
	`actualunits`: -48,
	`atcompletioncost`: 28,
	`atcompletionduration`: -87,
	`atcompletionunits`: -49,
	`autocomputeactuals`: "L",
	`calendarname`: "Lorem",
	`calendarobjectid`: 37,
	`costaccountid`: "Lorem",
	`costaccountname`: "Lorem",
	`finishdate`: "Lorem",
	`isactive`: "L",
	`isovertimeallowed`: "L",
	`isprimaryresource`: "L",
	`plannedduration`: -74,
	`priceperunit`: -69,
	`projectid`: "Lorem",
	`remainingduration`: 2,
	`resourcecalendarname`: "Lorem",
	`resourcecurvename`: "Lorem",
	`resourceid`: "Lorem",
	`resourcename`: "Lorem",
	`roleid`: "Lorem",
	`rolename`: "Lorem",
	`staffedremainingcost`: -98,
	`staffedremainingunits`: 83,
	`startdate`: "Lorem",
	`unitspercentcomplete`: -38,
	`unstaffedremainingcost`: 0,
	`unstaffedremainingunits`: -100,
	`wbsobjectid`: -62,
	`create_date`: "sysdate",
	`update_date`: "sysdate"
}),

(`tasksum`:`tasksum` {
	`task_sum_id`: -100,
	`wbs_id`: -62,
	`proj_id`: 47,
	`complete_cnt`: 90,
	`active_cnt`: 23,
	`notstarted_cnt`: 29,
	`base_complete_cnt`: -38,
	`base_active_cnt`: -40,
	`base_notstarted_cnt`: -59,
	`act_drtn_hr_cnt`: 98,
	`act_equip_qty`: 79,
	`act_work_qty`: -1,
	`total_drtn_hr_cnt`: -42,
	`base_drtn_hr_cnt`: -77,
	`base_work_qty`: 83,
	`base_equip_qty`: -77,
	`etc_work_qty`: -37,
	`remain_drtn_hr_cnt`: -97,
	`remain_work_qty`: 34,
	`remain_equip_qty`: -26,
	`total_float_hr_cnt`: 86,
	`act_expense_cost`: -64,
	`act_work_cost`: -74,
	`act_equip_cost`: 55,
	`base_expense_cost`: -2,
	`base_work_cost`: -73,
	`base_equip_cost`: 50,
	`bcwp`: 90,
	`etc`: 57,
	`bcws`: -52,
	`remain_expense_cost`: -86,
	`remain_work_cost`: 14,
	`remain_equip_cost`: -5,
	`perfm_work_qty`: -90,
	`sched_work_qty`: -59,
	`act_end_date`: "Lorem",
	`act_start_date`: "Lorem",
	`base_end_date`: "Lorem",
	`base_start_date`: "Lorem",
	`reend_date`: "Lorem",
	`restart_date`: "Lorem",
	`act_this_per_work_cost`: 8,
	`act_this_per_work_qty`: 46,
	`act_this_per_equip_cost`: -6,
	`act_this_per_equip_qty`: -4,
	`base_mat_cost`: -11,
	`remain_mat_cost`: 46,
	`act_mat_cost`: -73,
	`act_this_per_mat_cost`: -16,
	`spread_data`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -75,
	`delete_date`: "Lorem"
}),

(`tasksumfin`:`tasksumfin` {
	`task_sum_fin_id`: -57,
	`fin_dates_id`: -26,
	`wbs_id`: 0,
	`proj_id`: 31,
	`task_sum_id`: 67,
	`act_work_qty`: 78,
	`act_work_cost`: -84,
	`act_equip_qty`: -51,
	`act_equip_cost`: -13,
	`act_mat_cost`: 1,
	`act_expense_cost`: -42,
	`total_work_qty`: 30,
	`total_work_cost`: 30,
	`total_equip_qty`: -99,
	`total_equip_cost`: 82,
	`total_mat_cost`: 9,
	`total_expense_cost`: -40,
	`total_cost`: 32,
	`act_cost`: 32,
	`bcwp`: -96,
	`perfm_work_qty`: 85,
	`etc`: -9,
	`etc_work_qty`: 36,
	`eac`: -71,
	`eac_work`: -26,
	`bcws`: 77,
	`acwp`: -55,
	`sched_work_qty`: 81,
	`base_cost`: 83,
	`base_work_qty`: 19,
	`base_work_cost`: -43,
	`base_mat_cost`: -69,
	`base_equip_cost`: 96,
	`base_equip_qty`: 69,
	`base_expense_cost`: 81,
	`remain_cost`: -29,
	`remain_work_qty`: -55,
	`remain_work_cost`: -91,
	`remain_mat_cost`: 83,
	`remain_equip_cost`: -76,
	`remain_equip_qty`: -36,
	`remain_expense_cost`: 34,
	`target_cost`: -30,
	`target_equip_cost`: -95,
	`target_equip_qty`: 41,
	`target_expense_cost`: -43,
	`target_mat_cost`: -65,
	`target_work_cost`: 76,
	`target_work_qty`: 7,
	`late_remain_work_qty`: -53,
	`late_remain_work_cost`: 60,
	`late_remain_equip_cost`: -72,
	`late_remain_equip_qty`: -54,
	`late_remain_cost`: -78,
	`late_remain_mat_cost`: 18,
	`late_remain_expense_cost`: -6,
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 42,
	`delete_date`: "Lorem"
}),

(`taskuser`:`taskuser` {
	`task_id`: 68,
	`user_id`: -93,
	`proj_id`: 7,
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 55,
	`delete_date`: "Lorem"
}),

(`taskwksp`:`taskwksp` {
	`workspace_id`: 90,
	`task_id`: -15,
	`proj_id`: 56,
	`cr_external_key`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -52,
	`delete_date`: "Lorem"
}),

(`taskx`:`taskx` {
	`task_id`: 99,
	`accountingvariance`: 46,
	`accountingvariancelaborunits`: -8,
	`actualduration`: 15,
	`actualexpensecost`: 49,
	`actuallaborcost`: 73,
	`actualmaterialcost`: -56,
	`actualnonlaborcost`: -25,
	`actualthisperiodlaborcost`: -73,
	`actualthisperiodmaterialcost`: -1,
	`actualthisperiodnonlaborcost`: -1,
	`actualtotalcost`: 71,
	`actualtotalunits`: 51,
	`atcompletionduration`: 75,
	`atcompletionexpensecost`: -53,
	`atcompletionlaborcost`: -53,
	`atcompletionlaborunits`: 18,
	`atcompletionlaborunitsvariance`: -1,
	`atcompletionmaterialcost`: 59,
	`atcompletionnonlaborcost`: 10,
	`atcompletionnonlaborunits`: 41,
	`atcompletiontotalcost`: -66,
	`atcompletiontotalunits`: -36,
	`atcompletionvariance`: 96,
	`baselineduration`: -17,
	`baselinefinishdate`: "Lorem",
	`baselineplannedduration`: 3,
	`baselineplannedexpensecost`: -56,
	`baselineplannedlaborcost`: 80,
	`baselineplannedlaborunits`: 82,
	`baselineplannedmaterialcost`: 18,
	`baselineplannednonlaborcost`: 68,
	`baselineplannednonlaborunits`: -34,
	`baselineplannedtotalcost`: -68,
	`baselinestartdate`: "Lorem",
	`budgetatcompletion`: 70,
	`calendarname`: "Lorem",
	`costpercentcomplete`: 38,
	`costpercentofplanned`: -37,
	`costperformanceindex`: -75,
	`costperformanceindexlaborunits`: -99,
	`costvariance`: 63,
	`costvarianceindex`: -84,
	`costvarianceindexlaborunits`: -80,
	`costvariancelaborunits`: 61,
	`datadate`: "Lorem",
	`duration1variance`: -82,
	`durationpercentcomplete`: 44,
	`durationpercentofplanned`: -9,
	`durationvariance`: -77,
	`earnedvaluecost`: 59,
	`earnedvaluelaborunits`: -5,
	`estimateatcompletioncost`: -70,
	`estimateatcompletionlaborunits`: 46,
	`estimatetocomplete`: -94,
	`estimatetocompletelaborunits`: -56,
	`expensecost1variance`: 30,
	`expensecostpercentcomplete`: 69,
	`expensecostvariance`: 81,
	`finishdate`: "Lorem",
	`finishdate1variance`: 5,
	`finishdatevariance`: 36,
	`iscritical`: "L",
	`laborcost1variance`: 7,
	`laborcostpercentcomplete`: -15,
	`laborcostvariance`: 64,
	`laborunits1variance`: -91,
	`laborunitspercentcomplete`: -12,
	`laborunitsvariance`: -91,
	`materialcost1variance`: -5,
	`materialcostpercentcomplete`: 52,
	`materialcostvariance`: -67,
	`nonlaborcost1variance`: -10,
	`nonlaborcostpercentcomplete`: -82,
	`nonlaborcostvariance`: -81,
	`nonlaborunits1variance`: -58,
	`nonlaborunitspercentcomplete`: -27,
	`nonlaborunitsvariance`: 0,
	`percentcomplete`: 31,
	`performancepercentcomplete`: 66,
	`physicalpercentcomplete`: -90,
	`plannedexpensecost`: 74,
	`plannedlaborcost`: -95,
	`plannedmaterialcost`: -69,
	`plannednonlaborcost`: -38,
	`plannedtotalcost`: 26,
	`plannedtotalunits`: 60,
	`plannedvaluecost`: -69,
	`plannedvaluelaborunits`: -83,
	`primaryresourceid`: "Lorem",
	`primaryresourcename`: "Lorem",
	`remainingexpensecost`: -79,
	`remainingfloat`: 78,
	`remaininglaborcost`: -58,
	`remainingmaterialcost`: -51,
	`remainingnonlaborcost`: 13,
	`remainingtotalcost`: 1,
	`remainingtotalunits`: 63,
	`schedulepercentcomplete`: -21,
	`scheduleperfindexlaborunits`: 9,
	`scheduleperformanceindex`: -98,
	`schedulevariance`: -67,
	`schedulevarianceindex`: 63,
	`schedulevariancelaborunits`: 90,
	`schedulevarindexlaborunits`: -86,
	`startdate`: "Lorem",
	`startdate1variance`: 38,
	`startdatevariance`: -25,
	`tocompleteperformanceindex`: 76,
	`totalcost1variance`: -14,
	`totalcostvariance`: -67,
	`unitspercentcomplete`: -76,
	`wbscode`: "Lorem",
	`wbsname`: "Lorem",
	`activityownerobjectid`: -39,
	`activityowner`: "Lorem",
	`actualprogressdate`: "Lorem",
	`create_date`: "sysdate",
	`update_date`: "sysdate"
}),

(`tempkeys`:`tempkeys` {
	`pk1`: 40,
	`pk2`: 14
}),

(`thrsparm`:`thrsparm` {
	`thresh_parm_id`: -30,
	`seq_num`: -14,
	`wbs_flag`: "&apos;N&apos;",
	`task_flag`: "&apos;N&apos;",
	`rsrc_flag`: "&apos;N&apos;",
	`thresh_parm_type`: "Lorem",
	`thresh_parm_name`: "Lorem",
	`thresh_field_name`: "Lorem",
	`thresh_short_name`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 85,
	`delete_date`: "Lorem"
}),

(`timesht`:`timesht` {
	`ts_id`: -47,
	`rsrc_id`: -85,
	`daily_flag`: "&apos;Y&apos;",
	`status_code`: "Lorem",
	`user_id`: 78,
	`last_recv_date`: "Lorem",
	`status_date`: "Lorem",
	`ts_notes`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 76,
	`delete_date`: "Lorem"
}),

(`timeshtx`:`timeshtx` {
	`ts_id`: -49,
	`rsrc_id`: -73,
	`resourceid`: "Lorem",
	`resourcename`: "Lorem",
	`create_date`: "sysdate",
	`update_date`: "sysdate"
}),

(`tmplcatg`:`tmplcatg` {
	`tmplcatg_catg_id`: 93,
	`catg_name`: "Lorem",
	`project_flag`: "L",
	`process_flag`: "L",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -17,
	`delete_date`: "Lorem"
}),

(`tprojmap`:`tprojmap` {
	`session_id`: 89,
	`context_id`: 31,
	`source_proj_id`: 95,
	`target_proj_id`: 88,
	`target_wbs_id`: -48
}),

(`trakview`:`trakview` {
	`track_view_id`: 71,
	`display_type`: "Lorem",
	`track_view_name`: "Lorem",
	`web_view_flag`: "&apos;N&apos;",
	`user_id`: 24,
	`track_view_data`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 96,
	`delete_date`: "Lorem"
}),

(`trsrcfin`:`trsrcfin` {
	`fin_dates_id`: -31,
	`taskrsrc_id`: 7,
	`task_id`: 93,
	`proj_id`: -70,
	`act_qty`: 54,
	`act_cost`: -45,
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -36,
	`delete_date`: "Lorem"
}),

(`trsrcfinx`:`trsrcfinx` {
	`fin_dates_id`: 67,
	`taskrsrc_id`: 93,
	`resourcetype`: "Lorem",
	`wbsobjectid`: 45,
	`create_date`: "sysdate",
	`update_date`: "sysdate"
}),

(`trsrcsum`:`trsrcsum` {
	`taskrsrc_sum_id`: -12,
	`proj_id`: -93,
	`rsrc_id`: -17,
	`role_id`: -75,
	`skill_level`: 40,
	`overalloc_date`: "Lorem",
	`spread_data`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -97,
	`delete_date`: "Lorem"
}),

(`trsrcsumfn`:`trsrcsumfn` {
	`trsrc_sum_fin_id`: 3,
	`fin_dates_id`: -23,
	`proj_id`: 60,
	`rsrc_id`: 34,
	`role_id`: -74,
	`taskrsrc_sum_id`: -75,
	`act_qty`: -44,
	`act_cost`: 63,
	`act_ot_qty`: 94,
	`act_reg_qty`: 77,
	`act_ot_cost`: -14,
	`act_reg_cost`: -6,
	`total_qty`: 32,
	`total_cost`: -82,
	`remain_qty`: -44,
	`remain_cost`: -83,
	`target_qty`: 30,
	`target_cost`: 94,
	`staffed_remain_qty`: -46,
	`unstaffed_remain_qty`: 18,
	`staffed_remain_cost`: -46,
	`unstaffed_remain_cost`: 91,
	`staffed_late_remain_qty`: 48,
	`unstaffed_late_remain_qty`: -87,
	`staffed_late_remain_cost`: -28,
	`unstaffed_late_remain_cost`: 36,
	`late_remain_qty`: -28,
	`late_remain_cost`: -24,
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 39,
	`delete_date`: "Lorem"
}),

(`tsaudit`:`tsaudit` {
	`ts_audit_id`: 82,
	`audit_date`: "Lorem",
	`rsrc_id`: -52,
	`rsrc_short_name`: "Lorem",
	`rsrc_name`: "Lorem",
	`ts_status_code`: "Lorem",
	`reg_hrs`: 84,
	`reg_ot_hrs`: -52,
	`pend_reg_hrs`: -50,
	`pend_reg_ot_hrs`: 67,
	`oh_hrs`: -62,
	`oh_ot_hrs`: -76,
	`pend_oh_hrs`: -4,
	`pend_oh_ot_hrs`: 19,
	`ts_id`: 52,
	`ts_start_date`: "Lorem",
	`ts_end_date`: "Lorem",
	`proj_id`: -40,
	`proj_short_name`: "Lorem",
	`ts_task_status`: "Lorem",
	`user_id`: -12,
	`user_name`: "Lorem",
	`approving_as`: "Lorem"
}),

(`tsdates`:`tsdates` {
	`ts_id`: -31,
	`start_date`: "Lorem",
	`end_date`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -18,
	`delete_date`: "Lorem"
}),

(`tsdelegate`:`tsdelegate` {
	`ts_delegate_id`: -10,
	`user_id`: -74,
	`ts_delegate_user_id`: 48,
	`proj_id`: 34,
	`active_flag`: "&apos;N&apos;",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 18,
	`delete_date`: "Lorem"
}),

(`uaccess`:`uaccess` {
	`user_id`: 28,
	`proj_id`: -78,
	`access_flag`: "&apos;Y&apos;",
	`wbs_id`: -85,
	`parent_wbs_id`: -47
}),

(`udfcode`:`udfcode` {
	`udf_code_id`: 58,
	`udf_type_id`: 49,
	`seq_num`: -34,
	`short_name`: "Lorem",
	`udf_code_name`: "Lorem",
	`parent_udf_code_id`: -73,
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -48,
	`delete_date`: "Lorem"
}),

(`udfcodex`:`udfcodex` {
	`udf_code_id`: -8,
	`codetypetitle`: "Lorem",
	`issecurecode`: "L",
	`create_date`: "sysdate",
	`update_date`: "sysdate"
}),

(`udftype`:`udftype` {
	`udf_type_id`: -58,
	`table_name`: "Lorem",
	`udf_type_name`: "Lorem",
	`udf_type_label`: "Lorem",
	`logical_data_type`: "Lorem",
	`super_flag`: "&apos;N&apos;",
	`udf_code_short_len`: 29,
	`formula`: "Lorem",
	`indicator_expression`: "Lorem",
	`disp_data_flag`: "&apos;Y&apos;",
	`disp_indicator_flag`: "&apos;Y&apos;",
	`summary_indicator_expression`: "Lorem",
	`summary_method`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 20,
	`delete_date`: "Lorem"
}),

(`udfvalue`:`udfvalue` {
	`udf_type_id`: -42,
	`fk_id`: -54,
	`proj_id`: -49,
	`udf_date`: "Lorem",
	`udf_text`: "Lorem",
	`udf_number`: -32,
	`udf_code_id`: -9,
	`table_name`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -47,
	`delete_date`: "Lorem"
}),

(`udfvaluex`:`udfvaluex` {
	`udf_type_id`: -61,
	`fk_id`: -77,
	`subjectarea`: "Lorem",
	`datatype`: "Lorem",
	`issecurecode`: "L",
	`create_date`: "sysdate",
	`update_date`: "sysdate"
}),

(`uevntreg`:`uevntreg` {
	`user_id`: 46,
	`app_name`: "Lorem",
	`operation_name`: "Lorem",
	`action_name`: "Lorem",
	`action_level`: -53,
	`user_name`: "Lorem",
	`event_reg_data`: "Lorem"
}),

(`umeasure`:`umeasure` {
	`unit_id`: -15,
	`seq_num`: -75,
	`unit_name`: "Lorem",
	`unit_abbrev`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -89,
	`delete_date`: "Lorem"
}),

(`upklist`:`upklist` {
	`session_id`: 69,
	`context_id`: 28,
	`pk_id`: -66,
	`pk2_id`: 78
}),

(`usercol`:`usercol` {
	`user_col_id`: -10,
	`table_name`: "Lorem",
	`logical_data_type`: "Lorem",
	`user_col_name`: "Lorem",
	`user_col_label`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 90,
	`delete_date`: "Lorem"
}),

(`userdata`:`userdata` {
	`user_data_id`: 14,
	`user_id`: -42,
	`topic_name`: "Lorem",
	`user_data`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 52,
	`delete_date`: "Lorem"
}),

(`usereng`:`usereng` {
	`user_eng_id`: 29,
	`user_id`: 16,
	`db_engine_type`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 81,
	`delete_date`: "Lorem"
}),

(`userobs`:`userobs` {
	`user_id`: -46,
	`obs_id`: -43,
	`prof_id`: 18,
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 95,
	`delete_date`: "Lorem"
}),

(`userobsx`:`userobsx` {
	`user_id`: -49,
	`obs_id`: 38,
	`obsname`: "Lorem",
	`profilename`: "Lorem",
	`username`: "Lorem",
	`create_date`: "sysdate",
	`update_date`: "sysdate"
}),

(`useropen`:`useropen` {
	`user_open_id`: 50,
	`user_open_name`: "Lorem",
	`user_id`: -26,
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -85,
	`delete_date`: "Lorem"
}),

(`users`:`users` {
	`user_id`: 31,
	`global_flag`: "&apos;N&apos;",
	`email_type`: "&apos;ET_Internet&apos;",
	`user_name`: "Lorem",
	`prof_id`: -46,
	`curr_id`: 1,
	`all_rsrc_access_flag`: "&apos;N&apos;",
	`report_user_flag`: "&apos;N&apos;",
	`guid`: "Lorem",
	`email_srv_user_name`: "Lorem",
	`office_phone`: "Lorem",
	`actual_name`: "Lorem",
	`email_send_server`: "Lorem",
	`email_addr`: "Lorem",
	`email_srv_passwd`: "Lorem",
	`passwd`: "Lorem",
	`notify_prefs`: "Lorem",
	`navi_view_id`: 0,
	`override_naviview_flag`: "L",
	`ui_view_pref_id`: -62,
	`cr_external_key`: "Lorem",
	`cr_user_name`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -52,
	`delete_date`: "Lorem",
	`failed_login_attempts_cnt`: 0
}),

(`userset`:`userset` {
	`namespace`: "Lorem",
	`setting_name`: "Lorem",
	`setting_value`: "Lorem",
	`user_id`: -36,
	`userset_blob`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -94,
	`delete_date`: "Lorem"
}),

(`usersx`:`usersx` {
	`user_id`: -73,
	`respectactivitydurationtype`: "Lorem",
	`assignmentstaffingpreference`: "Lorem",
	`currencyid`: "Lorem",
	`currencyname`: "Lorem",
	`financialperiodendobjectid`: 93,
	`financialperiodstartobjectid`: -36,
	`newprojectdurationtype`: "Lorem",
	`ratesourcepreference`: "Lorem",
	`lastprojectsecuritydate`: "Lorem",
	`lastresourcesecuritydate`: "Lorem",
	`lastglobalsecuritydate`: "Lorem",
	`create_date`: "sysdate",
	`update_date`: "sysdate"
}),

(`userwksp`:`userwksp` {
	`user_id`: 19,
	`workspace_id`: 64,
	`proj_id`: -43,
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -36,
	`delete_date`: "Lorem"
}),

(`usessaud`:`usessaud` {
	`session_id`: -95,
	`login_date`: "Lorem",
	`logout_date`: "Lorem",
	`last_active_time`: "Lorem",
	`user_name`: "Lorem",
	`user_id`: -52,
	`host_name`: "Lorem",
	`app_name`: "Lorem",
	`hard_drive_code`: "Lorem",
	`db_engine_type`: "Lorem",
	`os_user_name`: "Lorem"
}),

(`usession`:`usession` {
	`session_id`: -24,
	`login_time`: "Lorem",
	`last_active_time`: "Lorem",
	`host_name`: "Lorem",
	`user_id`: -100,
	`process_num`: -7,
	`app_name`: "Lorem",
	`hard_drive_code`: "Lorem",
	`db_engine_type`: "Lorem",
	`os_user_name`: "Lorem",
	`vdb_instance_guid`: "Lorem",
	`spid`: 72,
	`operation_name`: "Lorem",
	`operation_start_date`: "Lorem",
	`long_operation_flag`: "&apos;N&apos;",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -66,
	`delete_date`: "Lorem"
}),

(`usropnval`:`usropnval` {
	`user_open_id`: -3,
	`pk_id`: 63,
	`usropn_type`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 50,
	`delete_date`: "Lorem"
}),

(`viewpref`:`viewpref` {
	`view_pref_id`: -71,
	`view_pref_name`: "Lorem",
	`view_pref_type`: "Lorem",
	`user_id`: 17,
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -66,
	`delete_date`: "Lorem"
}),

(`viewprop`:`viewprop` {
	`view_id`: 22,
	`view_name`: "Lorem",
	`user_id`: 20,
	`proj_id`: 91,
	`view_type`: "Lorem",
	`view_data`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -5,
	`delete_date`: "Lorem"
}),

(`vwprefdash`:`vwprefdash` {
	`dashboard_id`: -35,
	`view_pref_id`: 75,
	`seq_num`: -84,
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 26,
	`delete_date`: "Lorem"
}),

(`vwprefdata`:`vwprefdata` {
	`view_pref_id`: -86,
	`view_pref_key`: "Lorem",
	`view_pref_value`: "Lorem",
	`view_pref_value_blob`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -86,
	`delete_date`: "Lorem"
}),

(`vwprefuser`:`vwprefuser` {
	`view_pref_id`: -45,
	`user_id`: -12,
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 51,
	`delete_date`: "Lorem"
}),

(`wbrscat`:`wbrscat` {
	`wbrs_cat_id`: 32,
	`wbrs_cat_name`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -30,
	`delete_date`: "Lorem"
}),

(`wbsbudg`:`wbsbudg` {
	`wbs_budg_id`: 8,
	`proj_id`: -23,
	`wbs_id`: 94,
	`start_date`: "Lorem",
	`spend_cost`: 33,
	`benefit_cost`: -96,
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 51,
	`delete_date`: "Lorem"
}),

(`wbsbudgx`:`wbsbudgx` {
	`wbs_budg_id`: -66,
	`epsid`: "Lorem",
	`epsname`: "Lorem",
	`epsobjectid`: 22,
	`projectid`: "Lorem",
	`wbscode`: "Lorem",
	`wbsname`: "Lorem",
	`create_date`: "sysdate",
	`update_date`: "sysdate"
}),

(`wbshierarchy`:`wbshierarchy` {
	`parentobjectid`: -56,
	`parentprojectid`: 15,
	`parentsequencenumber`: -4,
	`parentname`: "Lorem",
	`parentid`: "Lorem",
	`childobjectid`: -39,
	`childprojectid`: -16,
	`childsequencenumber`: -78,
	`childname`: "Lorem",
	`childid`: "Lorem",
	`parentlevelsbelowroot`: -70,
	`childlevelsbelowroot`: -39,
	`levelsbetween`: 77,
	`childhaschildren`: "L",
	`fullpathname`: "Lorem"
}),

(`wbsmemo`:`wbsmemo` {
	`wbs_memo_id`: -32,
	`proj_id`: 11,
	`wbs_id`: 46,
	`memo_type_id`: 20,
	`wbs_memo`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -42,
	`delete_date`: "Lorem"
}),

(`wbsmemox`:`wbsmemox` {
	`wbs_memo_id`: -91,
	`epsid`: "Lorem",
	`epsname`: "Lorem",
	`epsobjectid`: -100,
	`notebooktopicname`: "Lorem",
	`projectid`: "Lorem",
	`rawtextnote`: "Lorem",
	`wbscode`: "Lorem",
	`wbsname`: "Lorem",
	`create_date`: "sysdate",
	`update_date`: "sysdate"
}),

(`wbsrsrc`:`wbsrsrc` {
	`wbsrsrc_id`: 62,
	`wbs_id`: 31,
	`rsrc_id`: -66,
	`proj_id`: -97,
	`committed_flag`: "&apos;Y&apos;",
	`start_date`: "Lorem",
	`end_date`: "Lorem",
	`auto_compute_dates_flag`: "&apos;N&apos;",
	`role_id`: 13,
	`rsrc_request_data`: "Lorem",
	`allocation_pct`: -32,
	`wbrs_cat_id`: -1,
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -16,
	`delete_date`: "Lorem"
}),

(`wbsrsrc_qty`:`wbsrsrc_qty` {
	`wbsrsrc_id`: -69,
	`week_start`: "Lorem",
	`month_start`: "Lorem",
	`qty`: 45,
	`fin_dates_id1`: -91,
	`fin_qty1`: -17,
	`fin_dates_id2`: 47,
	`fin_qty2`: -32,
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -19,
	`delete_date`: "Lorem"
}),

(`wbsrsrc_qtyx`:`wbsrsrc_qtyx` {
	`wbsrsrc_id`: 4,
	`week_start`: "Lorem",
	`month_start`: "Lorem",
	`committedflag`: "L",
	`projectobjectid`: -72,
	`resourceobjectid`: -9,
	`wbsobjectid`: 48,
	`create_date`: "sysdate",
	`update_date`: "sysdate"
}),

(`wbsrsrcx`:`wbsrsrcx` {
	`wbsrsrc_id`: -43,
	`projectid`: "Lorem",
	`resourcename`: "Lorem",
	`rolename`: "Lorem",
	`status`: "Lorem",
	`wbscode`: "Lorem",
	`create_date`: "sysdate",
	`update_date`: "sysdate"
}),

(`wbsspread`:`wbsspread` {
	`objectid`: 25,
	`parentobjectid`: 63,
	`code`: "Lorem",
	`name`: "Lorem",
	`projectobjectid`: -89,
	`obsobjectid`: 0,
	`obsname`: "Lorem",
	`startdate`: "Lorem",
	`enddate`: "Lorem",
	`actuallaborunits`: 99,
	`actualnonlaborunits`: 27,
	`atcompletionlaborunits`: 23,
	`atcompletionnonlaborunits`: -80,
	`baselineplannedlaborunits`: 82,
	`baselineplannednonlaborunits`: 59,
	`earnedvaluelaborunits`: 21,
	`estimateatcompletionlaborunits`: 45,
	`estimatetocompletelaborunits`: -6,
	`plannedlaborunits`: -92,
	`plannednonlaborunits`: 34,
	`plannedvaluelaborunits`: -35,
	`remaininglaborunits`: 91,
	`remainingnonlaborunits`: -68,
	`actualcost`: 61,
	`actualexpensecost`: -11,
	`actuallaborcost`: -82,
	`actualmaterialcost`: 56,
	`actualnonlaborcost`: -6,
	`actualtotalcost`: -39,
	`atcompletionexpensecost`: 66,
	`atcompletionlaborcost`: 33,
	`atcompletionmaterialcost`: -82,
	`atcompletionnonlaborcost`: 77,
	`atcompletiontotalcost`: 50,
	`baselineplannedexpensecost`: 88,
	`baselineplannedlaborcost`: -26,
	`baselineplannedmaterialcost`: 13,
	`baselineplannednonlaborcost`: -26,
	`baselineplannedtotalcost`: 50,
	`earnedvaluecost`: 88,
	`estimateatcompletioncost`: -26,
	`estimatetocompletecost`: 12,
	`plannedexpensecost`: -27,
	`plannedlaborcost`: -63,
	`plannedmaterialcost`: 8,
	`plannednonlaborcost`: 61,
	`plannedtotalcost`: -68,
	`plannedvaluecost`: 61,
	`remainingexpensecost`: -23,
	`remaininglaborcost`: 53,
	`remainingmaterialcost`: -83,
	`remainingnonlaborcost`: -23,
	`remainingtotalcost`: 41
}),

(`wbsstep`:`wbsstep` {
	`wbs_step_id`: -75,
	`proj_id`: -44,
	`wbs_id`: -18,
	`seq_num`: 13,
	`complete_flag`: "&apos;N&apos;",
	`step_name`: "Lorem",
	`step_wt`: 83,
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 12,
	`delete_date`: "Lorem"
}),

(`wbsstepx`:`wbsstepx` {
	`wbs_step_id`: 31,
	`projectid`: "Lorem",
	`wbscode`: "Lorem",
	`wbsname`: "Lorem",
	`create_date`: "sysdate",
	`update_date`: "sysdate"
}),

(`wkfltmpl`:`wkfltmpl` {
	`wkfl_tmpl_id`: 46,
	`template_name`: "Lorem",
	`project_flag`: "L",
	`wk_external_key`: "Lorem",
	`tmplcatg_catg_id`: -95,
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: 47,
	`delete_date`: "Lorem"
}),

(`wkfluser`:`wkfluser` {
	`work_flow_id`: -50,
	`user_id`: -24,
	`stage_num`: -41,
	`comments`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -39,
	`delete_date`: "Lorem"
}),

(`workflow`:`workflow` {
	`work_flow_id`: -35,
	`proj_id`: 97,
	`workflow_name`: "Lorem",
	`external_key`: "Lorem",
	`stage_num`: 63,
	`status`: "Lorem",
	`existing_project_flag`: "&apos;N&apos;",
	`stage_name`: "Lorem",
	`stage_modified_flag`: "&apos;N&apos;",
	`initiated_date`: "sysdate",
	`workspace_id`: 23,
	`user_id`: -88,
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -64,
	`delete_date`: "Lorem"
}),

(`workspace`:`workspace` {
	`workspace_id`: 5,
	`workspace_type`: "Lorem",
	`proj_id`: 85,
	`workspace_name`: "Lorem",
	`workspace_prefs`: "Lorem",
	`cr_external_key`: "Lorem",
	`update_date`: "Lorem",
	`update_user`: "Lorem",
	`create_date`: "Lorem",
	`create_user`: "Lorem",
	`delete_session_id`: -65,
	`delete_date`: "Lorem"
}),

(`wrk_log_results`:`wrk_log_results` {
	`spid`: -54,
	`seq_num`: -2,
	`log_message`: "Lorem"
}),

(`account`)-[:`account to projcost` {}]->(`projcost`),

(`account`)-[:`account to project` {}]->(`project`),

(`account`)-[:`account to taskrsrc` {}]->(`taskrsrc`),

(`actvcode`)-[:`actvcode to taskactv` {}]->(`taskactv`),

(`actvtype`)-[:`actvtype to actvcode` {}]->(`actvcode`),

(`actvtype`)-[:`actvtype to taskactv` {}]->(`taskactv`),

(`alert`)-[:`alert to alertparam` {}]->(`alertparam`),

(`basetype`)-[:`basetype to project` {}]->(`project`),

(`calendar`)-[:`calendar to rsrc` {}]->(`rsrc`),

(`calendar`)-[:`calendar to task` {}]->(`task`),

(`costtype`)-[:`costtype to projcost` {}]->(`projcost`),

(`costtype`)-[:`costtype to sumprojcost` {}]->(`sumprojcost`),

(`currtype`)-[:`currtype to prefer` {}]->(`prefer`),

(`currtype`)-[:`currtype to rsrc` {}]->(`rsrc`),

(`currtype`)-[:`currtype to users` {}]->(`users`),

(`dashboard`)-[:`dashboard to dashuser` {}]->(`dashuser`),

(`dashboard`)-[:`dashboard to rsrcandash` {}]->(`rsrcandash`),

(`dashboard`)-[:`dashboard to vwprefdash` {}]->(`vwprefdash`),

(`doccatg`)-[:`doccatg to document` {}]->(`document`),

(`docreview`)-[:`docreview to docreviewtask` {}]->(`docreviewtask`),

(`docstat`)-[:`docstat to document` {}]->(`document`),

(`document`)-[:`document to docreview` {}]->(`docreview`),

(`document`)-[:`document to taskdoc` {}]->(`taskdoc`),

(`factor`)-[:`factor to factval` {}]->(`factval`),

(`findates`)-[:`findates to project` {}]->(`project`),

(`findates`)-[:`findates to taskfin` {}]->(`taskfin`),

(`findates`)-[:`findates to trsrcfin` {}]->(`trsrcfin`),

(`findates`)-[:`findates to wbsrsrc_qty` {}]->(`wbsrsrc_qty`),

(`findates`)-[:`findates to wbsrsrc_qty(1)` {}]->(`wbsrsrc_qty`),

(`formcatg`)-[:`formcatg to formtmpl` {}]->(`formtmpl`),

(`formtmpl`)-[:`formtmpl to formproj` {}]->(`formproj`),

(`fundsrc`)-[:`fundsrc to projfund` {}]->(`projfund`),

(`iteration`)-[:`iteration to iterdays` {}]->(`iterdays`),

(`iteration`)-[:`iteration to itergoal` {}]->(`itergoal`),

(`iteration`)-[:`iteration to projwbs` {}]->(`projwbs`),

(`jobsvc`)-[:`jobsvc to joblog` {}]->(`joblog`),

(`jobsvc`)-[:`jobsvc to jobrpt` {}]->(`jobrpt`),

(`jobsvc`)-[:`jobsvc to jobset` {}]->(`jobset`),

(`memotype`)-[:`memotype to taskmemo` {}]->(`taskmemo`),

(`memotype`)-[:`memotype to wbsmemo` {}]->(`wbsmemo`),

(`nonwork`)-[:`nonwork to rsrchour` {}]->(`rsrchour`),

(`obs`)-[:`obs to obsproj` {}]->(`obsproj`),

(`obs`)-[:`obs to projissu` {}]->(`projissu`),

(`obs`)-[:`obs to projthrs` {}]->(`projthrs`),

(`obs`)-[:`obs to projwbs` {}]->(`projwbs`),

(`obs`)-[:`obs to userobs` {}]->(`userobs`),

(`pcattype`)-[:`pcattype to pcatval` {}]->(`pcatval`),

(`pcattype`)-[:`pcattype to projpcat` {}]->(`projpcat`),

(`pcatval`)-[:`pcatval to pcatuser` {}]->(`pcatuser`),

(`pcatval`)-[:`pcatval to projpcat` {}]->(`projpcat`),

(`pfolio`)-[:`pfolio to prpfolio` {}]->(`prpfolio`),

(`phase`)-[:`phase to projwbs` {}]->(`projwbs`),

(`pobs`)-[:`pobs to projcost` {}]->(`projcost`),

(`pobs`)-[:`pobs to roles` {}]->(`roles`),

(`pobs`)-[:`pobs to rsrc` {}]->(`rsrc`),

(`pobs`)-[:`pobs to taskrsrc` {}]->(`taskrsrc`),

(`procgroup`)-[:`procgroup to procitem` {}]->(`procitem`),

(`profile`)-[:`profile to profpriv` {}]->(`profpriv`),

(`profile`)-[:`profile to userobs` {}]->(`userobs`),

(`profile`)-[:`profile to users` {}]->(`users`),

(`project`)-[:`project to actvtype` {}]->(`actvtype`),

(`project`)-[:`project to budgchng` {}]->(`budgchng`),

(`project`)-[:`project to calendar` {}]->(`calendar`),

(`project`)-[:`project to document` {}]->(`document`),

(`project`)-[:`project to expproj` {}]->(`expproj`),

(`project`)-[:`project to extapp` {}]->(`extapp`),

(`project`)-[:`project to formproj` {}]->(`formproj`),

(`project`)-[:`project to issuhist` {}]->(`issuhist`),

(`project`)-[:`project to iterdays` {}]->(`iterdays`),

(`project`)-[:`project to obsproj` {}]->(`obsproj`),

(`project`)-[:`project to projcost` {}]->(`projcost`),

(`project`)-[:`project to projest` {}]->(`projest`),

(`project`)-[:`project to projfund` {}]->(`projfund`),

(`project`)-[:`project to projissu` {}]->(`projissu`),

(`project`)-[:`project to projpcat` {}]->(`projpcat`),

(`project`)-[:`project to projprop` {}]->(`projprop`),

(`project`)-[:`project to projshar` {}]->(`projshar`),

(`project`)-[:`project to projthrs` {}]->(`projthrs`),

(`project`)-[:`project to projwbs` {}]->(`projwbs`),

(`project`)-[:`project to projwsrpt` {}]->(`projwsrpt`),

(`project`)-[:`project to release` {}]->(`release`),

(`project`)-[:`project to relitems` {}]->(`relitems`),

(`project`)-[:`project to risk` {}]->(`risk`),

(`project`)-[:`project to riskimpact` {}]->(`riskimpact`),

(`project`)-[:`project to riskmit` {}]->(`riskmit`),

(`project`)-[:`project to riskmitimp` {}]->(`riskmitimp`),

(`project`)-[:`project to riskrsppln` {}]->(`riskrsppln`),

(`project`)-[:`project to rpt` {}]->(`rpt`),

(`project`)-[:`project to rptbatch` {}]->(`rptbatch`),

(`project`)-[:`project to scenproj` {}]->(`scenproj`),

(`project`)-[:`project to sumprojcost` {}]->(`sumprojcost`),

(`project`)-[:`project to sumtask` {}]->(`sumtask`),

(`project`)-[:`project to sumtaskspread` {}]->(`sumtaskspread`),

(`project`)-[:`project to sumtrsrc` {}]->(`sumtrsrc`),

(`project`)-[:`project to task` {}]->(`task`),

(`project`)-[:`project to taskactv` {}]->(`taskactv`),

(`project`)-[:`project to taskdoc` {}]->(`taskdoc`),

(`project`)-[:`project to taskfdbk` {}]->(`taskfdbk`),

(`project`)-[:`project to taskfin` {}]->(`taskfin`),

(`project`)-[:`project to taskmemo` {}]->(`taskmemo`),

(`project`)-[:`project to tasknote` {}]->(`tasknote`),

(`project`)-[:`project to taskpred` {}]->(`taskpred`),

(`project`)-[:`project to taskpred(1)` {}]->(`taskpred`),

(`project`)-[:`project to taskproc` {}]->(`taskproc`),

(`project`)-[:`project to taskrisk` {}]->(`taskrisk`),

(`project`)-[:`project to taskrsrc` {}]->(`taskrsrc`),

(`project`)-[:`project to taskuser` {}]->(`taskuser`),

(`project`)-[:`project to taskwksp` {}]->(`taskwksp`),

(`project`)-[:`project to trsrcfin` {}]->(`trsrcfin`),

(`project`)-[:`project to tsdelegate` {}]->(`tsdelegate`),

(`project`)-[:`project to udfvalue` {}]->(`udfvalue`),

(`project`)-[:`project to userwksp` {}]->(`userwksp`),

(`project`)-[:`project to viewprop` {}]->(`viewprop`),

(`project`)-[:`project to wbsbudg` {}]->(`wbsbudg`),

(`project`)-[:`project to wbsmemo` {}]->(`wbsmemo`),

(`project`)-[:`project to wbsrsrc` {}]->(`wbsrsrc`),

(`project`)-[:`project to wbsstep` {}]->(`wbsstep`),

(`project`)-[:`project to workflow` {}]->(`workflow`),

(`project`)-[:`project to workspace` {}]->(`workspace`),

(`projissu`)-[:`projissu to issuhist` {}]->(`issuhist`),

(`projthrs`)-[:`projthrs to projissu` {}]->(`projissu`),

(`projwbs`)-[:`projwbs to budgchng` {}]->(`budgchng`),

(`projwbs`)-[:`projwbs to projest` {}]->(`projest`),

(`projwbs`)-[:`projwbs to projissu` {}]->(`projissu`),

(`projwbs`)-[:`projwbs to projthrs` {}]->(`projthrs`),

(`projwbs`)-[:`projwbs to prpfolio` {}]->(`prpfolio`),

(`projwbs`)-[:`projwbs to sumprojcost` {}]->(`sumprojcost`),

(`projwbs`)-[:`projwbs to sumtask` {}]->(`sumtask`),

(`projwbs`)-[:`projwbs to sumtaskspread` {}]->(`sumtaskspread`),

(`projwbs`)-[:`projwbs to sumtrsrc` {}]->(`sumtrsrc`),

(`projwbs`)-[:`projwbs to task` {}]->(`task`),

(`projwbs`)-[:`projwbs to taskdoc` {}]->(`taskdoc`),

(`projwbs`)-[:`projwbs to wbsbudg` {}]->(`wbsbudg`),

(`projwbs`)-[:`projwbs to wbsmemo` {}]->(`wbsmemo`),

(`projwbs`)-[:`projwbs to wbsrsrc` {}]->(`wbsrsrc`),

(`projwbs`)-[:`projwbs to wbsstep` {}]->(`wbsstep`),

(`rcattype`)-[:`rcattype to rcatval` {}]->(`rcatval`),

(`rcattype`)-[:`rcattype to rsrcrcat` {}]->(`rsrcrcat`),

(`rcatval`)-[:`rcatval to rsrcrcat` {}]->(`rsrcrcat`),

(`reittype`)-[:`reittype to relitems` {}]->(`relitems`),

(`reittype`)-[:`reittype to relitems(1)` {}]->(`relitems`),

(`release`)-[:`release to iteration` {}]->(`iteration`),

(`rfolio`)-[:`rfolio to itergoal` {}]->(`itergoal`),

(`rfolio`)-[:`rfolio to projwbs` {}]->(`projwbs`),

(`rfolio`)-[:`rfolio to release` {}]->(`release`),

(`rfolio`)-[:`rfolio to rsrfolio` {}]->(`rsrfolio`),

(`risk`)-[:`risk to riskimpact` {}]->(`riskimpact`),

(`risk`)-[:`risk to riskrsppln` {}]->(`riskrsppln`),

(`risk`)-[:`risk to taskrisk` {}]->(`taskrisk`),

(`riskmit`)-[:`riskmit to riskmitimp` {}]->(`riskmitimp`),

(`riskrsppln`)-[:`riskrsppln to riskmit` {}]->(`riskmit`),

(`riskscrmtx`)-[:`riskscrmtx to mtxscrtyp` {}]->(`mtxscrtyp`),

(`riskscrmtx`)-[:`riskscrmtx to project` {}]->(`project`),

(`riskscrmtx`)-[:`riskscrmtx to riskmtxscr` {}]->(`riskmtxscr`),

(`riskscrtyp`)-[:`riskscrtyp to mtxscrtyp` {}]->(`mtxscrtyp`),

(`riskscrtyp`)-[:`riskscrtyp to riskimpact` {}]->(`riskimpact`),

(`riskscrtyp`)-[:`riskscrtyp to riskmitimp` {}]->(`riskmitimp`),

(`riskscrtyp`)-[:`riskscrtyp to riskscrthr` {}]->(`riskscrthr`),

(`rlfolio`)-[:`rlfolio to rolfolio` {}]->(`rolfolio`),

(`roles`)-[:`roles to rolelimit` {}]->(`rolelimit`),

(`roles`)-[:`roles to rolerate` {}]->(`rolerate`),

(`roles`)-[:`roles to rolfolio` {}]->(`rolfolio`),

(`roles`)-[:`roles to rsrc` {}]->(`rsrc`),

(`roles`)-[:`roles to rsrcrole` {}]->(`rsrcrole`),

(`roles`)-[:`roles to scenrole` {}]->(`scenrole`),

(`roles`)-[:`roles to taskrsrc` {}]->(`taskrsrc`),

(`roles`)-[:`roles to wbsrsrc` {}]->(`wbsrsrc`),

(`rpt`)-[:`rpt to jobrpt` {}]->(`jobrpt`),

(`rpt`)-[:`rpt to projwsrpt` {}]->(`projwsrpt`),

(`rpt`)-[:`rpt to rptlist` {}]->(`rptlist`),

(`rptbatch`)-[:`rptbatch to rptlist` {}]->(`rptlist`),

(`rptgroup`)-[:`rptgroup to rpt` {}]->(`rpt`),

(`rsrc`)-[:`rsrc to document` {}]->(`document`),

(`rsrc`)-[:`rsrc to prefer` {}]->(`prefer`),

(`rsrc`)-[:`rsrc to projest` {}]->(`projest`),

(`rsrc`)-[:`rsrc to projissu` {}]->(`projissu`),

(`rsrc`)-[:`rsrc to risk` {}]->(`risk`),

(`rsrc`)-[:`rsrc to rsrchour` {}]->(`rsrchour`),

(`rsrc`)-[:`rsrc to rsrcprop` {}]->(`rsrcprop`),

(`rsrc`)-[:`rsrc to rsrcrate` {}]->(`rsrcrate`),

(`rsrc`)-[:`rsrc to rsrcrcat` {}]->(`rsrcrcat`),

(`rsrc`)-[:`rsrc to rsrcrole` {}]->(`rsrcrole`),

(`rsrc`)-[:`rsrc to rsrcsec` {}]->(`rsrcsec`),

(`rsrc`)-[:`rsrc to rsrfolio` {}]->(`rsrfolio`),

(`rsrc`)-[:`rsrc to task` {}]->(`task`),

(`rsrc`)-[:`rsrc to taskrsrc` {}]->(`taskrsrc`),

(`rsrc`)-[:`rsrc to timesht` {}]->(`timesht`),

(`rsrc`)-[:`rsrc to wbsrsrc` {}]->(`wbsrsrc`),

(`rsrcanview`)-[:`rsrcanview to rsrcandash` {}]->(`rsrcandash`),

(`rsrccurv`)-[:`rsrccurv to taskrsrc` {}]->(`taskrsrc`),

(`scenario`)-[:`scenario to scenproj` {}]->(`scenproj`),

(`scenario`)-[:`scenario to scenrole` {}]->(`scenrole`),

(`scenario`)-[:`scenario to scenuser` {}]->(`scenuser`),

(`shift`)-[:`shift to rsrc` {}]->(`rsrc`),

(`shift`)-[:`shift to shiftper` {}]->(`shiftper`),

(`shiftper`)-[:`shiftper to rsrcrate` {}]->(`rsrcrate`),

(`task`)-[:`task to iterdays` {}]->(`iterdays`),

(`task`)-[:`task to projcost` {}]->(`projcost`),

(`task`)-[:`task to projissu` {}]->(`projissu`),

(`task`)-[:`task to riskmit` {}]->(`riskmit`),

(`task`)-[:`task to taskactv` {}]->(`taskactv`),

(`task`)-[:`task to taskdoc` {}]->(`taskdoc`),

(`task`)-[:`task to taskfdbk` {}]->(`taskfdbk`),

(`task`)-[:`task to taskfin` {}]->(`taskfin`),

(`task`)-[:`task to taskmemo` {}]->(`taskmemo`),

(`task`)-[:`task to tasknote` {}]->(`tasknote`),

(`task`)-[:`task to taskpred` {}]->(`taskpred`),

(`task`)-[:`task to taskpred(1)` {}]->(`taskpred`),

(`task`)-[:`task to taskproc` {}]->(`taskproc`),

(`task`)-[:`task to taskrisk` {}]->(`taskrisk`),

(`task`)-[:`task to taskrsrc` {}]->(`taskrsrc`),

(`task`)-[:`task to taskuser` {}]->(`taskuser`),

(`task`)-[:`task to taskwksp` {}]->(`taskwksp`),

(`task`)-[:`task to trsrcfin` {}]->(`trsrcfin`),

(`taskrsrc`)-[:`taskrsrc to rsrchour` {}]->(`rsrchour`),

(`taskrsrc`)-[:`taskrsrc to trsrcfin` {}]->(`trsrcfin`),

(`thrsparm`)-[:`thrsparm to projissu` {}]->(`projissu`),

(`thrsparm`)-[:`thrsparm to projthrs` {}]->(`projthrs`),

(`timesht`)-[:`timesht to rsrchour` {}]->(`rsrchour`),

(`timesht`)-[:`timesht to rsrchour(1)` {}]->(`rsrchour`),

(`tmplcatg`)-[:`tmplcatg to wkfltmpl` {}]->(`wkfltmpl`),

(`trakview`)-[:`trakview to projissu` {}]->(`projissu`),

(`trakview`)-[:`trakview to projthrs` {}]->(`projthrs`),

(`tsdates`)-[:`tsdates to timesht` {}]->(`timesht`),

(`udfcode`)-[:`udfcode to udfvalue` {}]->(`udfvalue`),

(`udftype`)-[:`udftype to udfcode` {}]->(`udfcode`),

(`udftype`)-[:`udftype to udfvalue` {}]->(`udfvalue`),

(`umeasure`)-[:`umeasure to rsrc` {}]->(`rsrc`),

(`useropen`)-[:`useropen to usropnval` {}]->(`usropnval`),

(`users`)-[:`users to alert` {}]->(`alert`),

(`users`)-[:`users to dashboard` {}]->(`dashboard`),

(`users`)-[:`users to dashuser` {}]->(`dashuser`),

(`users`)-[:`users to docreview` {}]->(`docreview`),

(`users`)-[:`users to docreviewtask` {}]->(`docreviewtask`),

(`users`)-[:`users to filtprop` {}]->(`filtprop`),

(`users`)-[:`users to gchange` {}]->(`gchange`),

(`users`)-[:`users to jobsvc` {}]->(`jobsvc`),

(`users`)-[:`users to pcatuser` {}]->(`pcatuser`),

(`users`)-[:`users to pfolio` {}]->(`pfolio`),

(`users`)-[:`users to prefer` {}]->(`prefer`),

(`users`)-[:`users to project` {}]->(`project`),

(`users`)-[:`users to rfolio` {}]->(`rfolio`),

(`users`)-[:`users to rlfolio` {}]->(`rlfolio`),

(`users`)-[:`users to rsrc` {}]->(`rsrc`),

(`users`)-[:`users to rsrcanview` {}]->(`rsrcanview`),

(`users`)-[:`users to rsrcsec` {}]->(`rsrcsec`),

(`users`)-[:`users to scenario` {}]->(`scenario`),

(`users`)-[:`users to scenuser` {}]->(`scenuser`),

(`users`)-[:`users to taskuser` {}]->(`taskuser`),

(`users`)-[:`users to trakview` {}]->(`trakview`),

(`users`)-[:`users to tsdelegate` {}]->(`tsdelegate`),

(`users`)-[:`users to tsdelegate(1)` {}]->(`tsdelegate`),

(`users`)-[:`users to uaccess` {}]->(`uaccess`),

(`users`)-[:`users to uevntreg` {}]->(`uevntreg`),

(`users`)-[:`users to userdata` {}]->(`userdata`),

(`users`)-[:`users to usereng` {}]->(`usereng`),

(`users`)-[:`users to userobs` {}]->(`userobs`),

(`users`)-[:`users to useropen` {}]->(`useropen`),

(`users`)-[:`users to userset` {}]->(`userset`),

(`users`)-[:`users to userwksp` {}]->(`userwksp`),

(`users`)-[:`users to usession` {}]->(`usession`),

(`users`)-[:`users to viewpref` {}]->(`viewpref`),

(`users`)-[:`users to viewprop` {}]->(`viewprop`),

(`users`)-[:`users to vwprefuser` {}]->(`vwprefuser`),

(`users`)-[:`users to wkfluser` {}]->(`wkfluser`),

(`users`)-[:`users to workflow` {}]->(`workflow`),

(`usession`)-[:`usession to hqdata` {}]->(`hqdata`),

(`usession`)-[:`usession to hquery` {}]->(`hquery`),

(`usession`)-[:`usession to projshar` {}]->(`projshar`),

(`usession`)-[:`usession to upklist` {}]->(`upklist`),

(`viewpref`)-[:`viewpref to scenario` {}]->(`scenario`),

(`viewpref`)-[:`viewpref to vwprefdash` {}]->(`vwprefdash`),

(`viewpref`)-[:`viewpref to vwprefdata` {}]->(`vwprefdata`),

(`viewpref`)-[:`viewpref to vwprefuser` {}]->(`vwprefuser`),

(`wbrscat`)-[:`wbrscat to wbsrsrc` {}]->(`wbsrsrc`),

(`wbsrsrc`)-[:`wbsrsrc to wbsrsrc_qty` {}]->(`wbsrsrc_qty`),

(`workflow`)-[:`workflow to wkfluser` {}]->(`wkfluser`),

(`workspace`)-[:`workspace to projissu` {}]->(`projissu`),

(`workspace`)-[:`workspace to taskwksp` {}]->(`taskwksp`),

(`workspace`)-[:`workspace to userwksp` {}]->(`userwksp`),

(`workspace`)-[:`workspace to workflow` {}]->(`workflow`)
 RETURN `account`,`activitycodehierarchy`,`activitycodetypesecurity`,`activityspread`,`actvcode`,`actvcodex`,`actvtype`,`admin_config`,`alert`,`alertparam`,`basetype`,`bgplog`,`bre_registry`,`budgchng`,`budgchngx`,`calendar`,`calendarx`,`costaccounthierarchy`,`costsecurity`,`costtype`,`currtype`,`currtypex`,`dashboard`,`dashuser`,`dltacct`,`dltactv`,`dltobs`,`dltrole`,`dltrsrc`,`dltrsrl`,`dltuser`,`doccatg`,`docreview`,`docreviewtask`,`docstat`,`document`,`documentx`,`epshierarchy`,`epsspread`,`expproj`,`extapp`,`factor`,`factval`,`filtprop`,`findates`,`formcatg`,`formproj`,`formtmpl`,`fundsrc`,`gchange`,`globalsecurity`,`hqdata`,`hquery`,`issuhist`,`iteration`,`iterdays`,`itergoal`,`joblog`,`jobrpt`,`jobset`,`jobsvc`,`memotype`,`mtxscrtyp`,`nextkey`,`nonwork`,`note`,`obs`,`obsproj`,`pcattype`,`pcatuser`,`pcatuserx`,`pcatval`,`pcatvalx`,`pfolio`,`pfoliox`,`phase`,`pkxref`,`plprojref`,`pobs`,`prefer`,`prmaudit`,`prmqueue`,`procgroup`,`procitem`,`profile`,`profpriv`,`profprivx`,`projcost`,`projcostx`,`project`,`projectcodehierarchy`,`projectsecurity`,`projectspread`,`projectx`,`projest`,`projfund`,`projfundx`,`projissu`,`projissux`,`projpcat`,`projpcatx`,`projprop`,`projrisk`,`projshar`,`projthrs`,`projwbs`,`projwbsx`,`projwsrpt`,`prpfolio`,`pubuser`,`querylib`,`rcattype`,`rcatval`,`rcatvalx`,`refrdel`,`reittype`,`release`,`relitems`,`reportdate`,`reporttime`,`resourceassignmentspread`,`resourcecodehierarchy`,`resourcehierarchy`,`resourcelimit`,`rfolio`,`rfoliox`,`risk`,`riskctrl`,`riskimpact`,`riskmit`,`riskmitimp`,`riskmitx`,`riskmtxscr`,`riskrsppln`,`riskrspplnx`,`riskscrmtx`,`riskscrthr`,`riskscrtyp`,`risktype`,`riskx`,`rlfolio`,`rlfoliox`,`rolelimit`,`rolerate`,`roleratex`,`roles`,`rolfolio`,`rpt`,`rptbatch`,`rptgroup`,`rptlist`,`rsrc`,`rsrcandash`,`rsrcanview`,`rsrccurv`,`rsrccurvx`,`rsrchour`,`rsrchourx`,`rsrcprop`,`rsrcrate`,`rsrcratex`,`rsrcrcat`,`rsrcrcatx`,`rsrcrole`,`rsrcrolex`,`rsrcsec`,`rsrcsecx`,`rsrcx`,`rsrfolio`,`scenario`,`scenproj`,`scenrole`,`scenuser`,`settings`,`shift`,`shiftper`,`spidmap`,`sumprojcost`,`sumtask`,`sumtaskspread`,`sumtrsrc`,`task`,`taskactv`,`taskactvx`,`taskdoc`,`taskdocx`,`taskfdbk`,`taskfin`,`taskfinx`,`taskmemo`,`taskmemox`,`tasknote`,`taskpred`,`taskpredx`,`taskproc`,`taskprocx`,`taskrisk`,`taskriskx`,`taskrsrc`,`taskrsrcx`,`tasksum`,`tasksumfin`,`taskuser`,`taskwksp`,`taskx`,`tempkeys`,`thrsparm`,`timesht`,`timeshtx`,`tmplcatg`,`tprojmap`,`trakview`,`trsrcfin`,`trsrcfinx`,`trsrcsum`,`trsrcsumfn`,`tsaudit`,`tsdates`,`tsdelegate`,`uaccess`,`udfcode`,`udfcodex`,`udftype`,`udfvalue`,`udfvaluex`,`uevntreg`,`umeasure`,`upklist`,`usercol`,`userdata`,`usereng`,`userobs`,`userobsx`,`useropen`,`users`,`userset`,`usersx`,`userwksp`,`usessaud`,`usession`,`usropnval`,`viewpref`,`viewprop`,`vwprefdash`,`vwprefdata`,`vwprefuser`,`wbrscat`,`wbsbudg`,`wbsbudgx`,`wbshierarchy`,`wbsmemo`,`wbsmemox`,`wbsrsrc`,`wbsrsrc_qty`,`wbsrsrc_qtyx`,`wbsrsrcx`,`wbsspread`,`wbsstep`,`wbsstepx`,`wkfltmpl`,`wkfluser`,`workflow`,`workspace`,`wrk_log_results`;
:commit
:begin
CREATE CONSTRAINT ON (`account`:`account`) ASSERT exists(`account`.`acct_id`);
CREATE CONSTRAINT ON (`account`:`account`) ASSERT exists(`account`.`acct_seq_num`);
CREATE CONSTRAINT ON (`account`:`account`) ASSERT exists(`account`.`acct_short_name`);
CREATE CONSTRAINT ON (`account`:`account`) ASSERT exists(`account`.`acct_name`);
CREATE CONSTRAINT ON (`activitycodehierarchy`:`activitycodehierarchy`) ASSERT exists(`activitycodehierarchy`.`codetypeobjectid`);
CREATE CONSTRAINT ON (`activityspread`:`activityspread`) ASSERT exists(`activityspread`.`activityobjectid`);
CREATE CONSTRAINT ON (`activityspread`:`activityspread`) ASSERT exists(`activityspread`.`startdate`);
CREATE CONSTRAINT ON (`activityspread`:`activityspread`) ASSERT exists(`activityspread`.`enddate`);
CREATE CONSTRAINT ON (`activityspread`:`activityspread`) ASSERT exists(`activityspread`.`wbsobjectid`);
CREATE CONSTRAINT ON (`activityspread`:`activityspread`) ASSERT exists(`activityspread`.`projectobjectid`);
CREATE CONSTRAINT ON (`actvcode`:`actvcode`) ASSERT exists(`actvcode`.`actv_code_id`);
CREATE CONSTRAINT ON (`actvcode`:`actvcode`) ASSERT exists(`actvcode`.`actv_code_type_id`);
CREATE CONSTRAINT ON (`actvcode`:`actvcode`) ASSERT exists(`actvcode`.`seq_num`);
CREATE CONSTRAINT ON (`actvcode`:`actvcode`) ASSERT exists(`actvcode`.`short_name`);
CREATE CONSTRAINT ON (`actvcodex`:`actvcodex`) ASSERT exists(`actvcodex`.`actv_code_id`);
CREATE CONSTRAINT ON (`actvtype`:`actvtype`) ASSERT exists(`actvtype`.`actv_code_type_id`);
CREATE CONSTRAINT ON (`actvtype`:`actvtype`) ASSERT exists(`actvtype`.`actv_short_len`);
CREATE CONSTRAINT ON (`actvtype`:`actvtype`) ASSERT exists(`actvtype`.`seq_num`);
CREATE CONSTRAINT ON (`actvtype`:`actvtype`) ASSERT exists(`actvtype`.`actv_code_type`);
CREATE CONSTRAINT ON (`actvtype`:`actvtype`) ASSERT exists(`actvtype`.`actv_code_type_scope`);
CREATE CONSTRAINT ON (`actvtype`:`actvtype`) ASSERT exists(`actvtype`.`super_flag`);
CREATE CONSTRAINT ON (`admin_config`:`admin_config`) ASSERT exists(`admin_config`.`config_name`);
CREATE CONSTRAINT ON (`admin_config`:`admin_config`) ASSERT exists(`admin_config`.`last_change_date`);
CREATE CONSTRAINT ON (`alert`:`alert`) ASSERT exists(`alert`.`alert_id`);
CREATE CONSTRAINT ON (`alert`:`alert`) ASSERT exists(`alert`.`user_id`);
CREATE CONSTRAINT ON (`alertparam`:`alertparam`) ASSERT exists(`alertparam`.`alert_id`);
CREATE CONSTRAINT ON (`alertparam`:`alertparam`) ASSERT exists(`alertparam`.`setting_id`);
CREATE CONSTRAINT ON (`basetype`:`basetype`) ASSERT exists(`basetype`.`base_type_id`);
CREATE CONSTRAINT ON (`basetype`:`basetype`) ASSERT exists(`basetype`.`base_type_seq_num`);
CREATE CONSTRAINT ON (`basetype`:`basetype`) ASSERT exists(`basetype`.`base_type`);
CREATE CONSTRAINT ON (`bre_registry`:`bre_registry`) ASSERT exists(`bre_registry`.`bre_registry_id`);
CREATE CONSTRAINT ON (`bre_registry`:`bre_registry`) ASSERT exists(`bre_registry`.`ip_address`);
CREATE CONSTRAINT ON (`bre_registry`:`bre_registry`) ASSERT exists(`bre_registry`.`start_time`);
CREATE CONSTRAINT ON (`bre_registry`:`bre_registry`) ASSERT exists(`bre_registry`.`status_code`);
CREATE CONSTRAINT ON (`bre_registry`:`bre_registry`) ASSERT exists(`bre_registry`.`config_name`);
CREATE CONSTRAINT ON (`budgchng`:`budgchng`) ASSERT exists(`budgchng`.`budg_chng_id`);
CREATE CONSTRAINT ON (`budgchng`:`budgchng`) ASSERT exists(`budgchng`.`proj_id`);
CREATE CONSTRAINT ON (`budgchng`:`budgchng`) ASSERT exists(`budgchng`.`wbs_id`);
CREATE CONSTRAINT ON (`budgchng`:`budgchng`) ASSERT exists(`budgchng`.`chng_date`);
CREATE CONSTRAINT ON (`budgchng`:`budgchng`) ASSERT exists(`budgchng`.`chng_short_name`);
CREATE CONSTRAINT ON (`budgchngx`:`budgchngx`) ASSERT exists(`budgchngx`.`budg_chng_id`);
CREATE CONSTRAINT ON (`calendar`:`calendar`) ASSERT exists(`calendar`.`clndr_id`);
CREATE CONSTRAINT ON (`calendar`:`calendar`) ASSERT exists(`calendar`.`default_flag`);
CREATE CONSTRAINT ON (`calendar`:`calendar`) ASSERT exists(`calendar`.`rsrc_private`);
CREATE CONSTRAINT ON (`calendar`:`calendar`) ASSERT exists(`calendar`.`clndr_name`);
CREATE CONSTRAINT ON (`calendarx`:`calendarx`) ASSERT exists(`calendarx`.`clndr_id`);
CREATE CONSTRAINT ON (`calendarx`:`calendarx`) ASSERT exists(`calendarx`.`daydate`);
CREATE CONSTRAINT ON (`costaccounthierarchy`:`costaccounthierarchy`) ASSERT exists(`costaccounthierarchy`.`parentlevelsbelowroot`);
CREATE CONSTRAINT ON (`costaccounthierarchy`:`costaccounthierarchy`) ASSERT exists(`costaccounthierarchy`.`childlevelsbelowroot`);
CREATE CONSTRAINT ON (`costaccounthierarchy`:`costaccounthierarchy`) ASSERT exists(`costaccounthierarchy`.`levelsbetween`);
CREATE CONSTRAINT ON (`costtype`:`costtype`) ASSERT exists(`costtype`.`cost_type_id`);
CREATE CONSTRAINT ON (`costtype`:`costtype`) ASSERT exists(`costtype`.`seq_num`);
CREATE CONSTRAINT ON (`costtype`:`costtype`) ASSERT exists(`costtype`.`cost_type`);
CREATE CONSTRAINT ON (`currtype`:`currtype`) ASSERT exists(`currtype`.`curr_id`);
CREATE CONSTRAINT ON (`currtype`:`currtype`) ASSERT exists(`currtype`.`decimal_digit_cnt`);
CREATE CONSTRAINT ON (`currtype`:`currtype`) ASSERT exists(`currtype`.`curr_symbol`);
CREATE CONSTRAINT ON (`currtype`:`currtype`) ASSERT exists(`currtype`.`decimal_symbol`);
CREATE CONSTRAINT ON (`currtype`:`currtype`) ASSERT exists(`currtype`.`digit_group_symbol`);
CREATE CONSTRAINT ON (`currtype`:`currtype`) ASSERT exists(`currtype`.`pos_curr_fmt_type`);
CREATE CONSTRAINT ON (`currtype`:`currtype`) ASSERT exists(`currtype`.`neg_curr_fmt_type`);
CREATE CONSTRAINT ON (`currtype`:`currtype`) ASSERT exists(`currtype`.`curr_type`);
CREATE CONSTRAINT ON (`currtype`:`currtype`) ASSERT exists(`currtype`.`curr_short_name`);
CREATE CONSTRAINT ON (`currtype`:`currtype`) ASSERT exists(`currtype`.`group_digit_cnt`);
CREATE CONSTRAINT ON (`currtype`:`currtype`) ASSERT exists(`currtype`.`base_exch_rate`);
CREATE CONSTRAINT ON (`currtypex`:`currtypex`) ASSERT exists(`currtypex`.`curr_id`);
CREATE CONSTRAINT ON (`dashboard`:`dashboard`) ASSERT exists(`dashboard`.`dashboard_id`);
CREATE CONSTRAINT ON (`dashboard`:`dashboard`) ASSERT exists(`dashboard`.`dashboard_name`);
CREATE CONSTRAINT ON (`dashboard`:`dashboard`) ASSERT exists(`dashboard`.`lock_filter_flag`);
CREATE CONSTRAINT ON (`dashuser`:`dashuser`) ASSERT exists(`dashuser`.`dashboard_id`);
CREATE CONSTRAINT ON (`dashuser`:`dashuser`) ASSERT exists(`dashuser`.`user_id`);
CREATE CONSTRAINT ON (`dltacct`:`dltacct`) ASSERT exists(`dltacct`.`session_id`);
CREATE CONSTRAINT ON (`dltacct`:`dltacct`) ASSERT exists(`dltacct`.`acct_id`);
CREATE CONSTRAINT ON (`dltactv`:`dltactv`) ASSERT exists(`dltactv`.`session_id`);
CREATE CONSTRAINT ON (`dltactv`:`dltactv`) ASSERT exists(`dltactv`.`actv_code_id`);
CREATE CONSTRAINT ON (`dltobs`:`dltobs`) ASSERT exists(`dltobs`.`session_id`);
CREATE CONSTRAINT ON (`dltobs`:`dltobs`) ASSERT exists(`dltobs`.`obs_id`);
CREATE CONSTRAINT ON (`dltrole`:`dltrole`) ASSERT exists(`dltrole`.`session_id`);
CREATE CONSTRAINT ON (`dltrole`:`dltrole`) ASSERT exists(`dltrole`.`role_id`);
CREATE CONSTRAINT ON (`dltrsrc`:`dltrsrc`) ASSERT exists(`dltrsrc`.`session_id`);
CREATE CONSTRAINT ON (`dltrsrc`:`dltrsrc`) ASSERT exists(`dltrsrc`.`rsrc_id`);
CREATE CONSTRAINT ON (`dltrsrl`:`dltrsrl`) ASSERT exists(`dltrsrl`.`session_id`);
CREATE CONSTRAINT ON (`dltrsrl`:`dltrsrl`) ASSERT exists(`dltrsrl`.`rsrc_id`);
CREATE CONSTRAINT ON (`dltrsrl`:`dltrsrl`) ASSERT exists(`dltrsrl`.`role_id`);
CREATE CONSTRAINT ON (`dltuser`:`dltuser`) ASSERT exists(`dltuser`.`session_id`);
CREATE CONSTRAINT ON (`dltuser`:`dltuser`) ASSERT exists(`dltuser`.`user_id`);
CREATE CONSTRAINT ON (`doccatg`:`doccatg`) ASSERT exists(`doccatg`.`doc_catg_id`);
CREATE CONSTRAINT ON (`doccatg`:`doccatg`) ASSERT exists(`doccatg`.`seq_num`);
CREATE CONSTRAINT ON (`doccatg`:`doccatg`) ASSERT exists(`doccatg`.`doc_catg_name`);
CREATE CONSTRAINT ON (`docreview`:`docreview`) ASSERT exists(`docreview`.`doc_review_id`);
CREATE CONSTRAINT ON (`docreview`:`docreview`) ASSERT exists(`docreview`.`doc_id`);
CREATE CONSTRAINT ON (`docreviewtask`:`docreviewtask`) ASSERT exists(`docreviewtask`.`review_task_id`);
CREATE CONSTRAINT ON (`docreviewtask`:`docreviewtask`) ASSERT exists(`docreviewtask`.`doc_review_id`);
CREATE CONSTRAINT ON (`docstat`:`docstat`) ASSERT exists(`docstat`.`doc_status_id`);
CREATE CONSTRAINT ON (`docstat`:`docstat`) ASSERT exists(`docstat`.`seq_num`);
CREATE CONSTRAINT ON (`docstat`:`docstat`) ASSERT exists(`docstat`.`doc_status_code`);
CREATE CONSTRAINT ON (`document`:`document`) ASSERT exists(`document`.`doc_id`);
CREATE CONSTRAINT ON (`document`:`document`) ASSERT exists(`document`.`doc_seq_num`);
CREATE CONSTRAINT ON (`document`:`document`) ASSERT exists(`document`.`deliv_flag`);
CREATE CONSTRAINT ON (`document`:`document`) ASSERT exists(`document`.`doc_name`);
CREATE CONSTRAINT ON (`document`:`document`) ASSERT exists(`document`.`version_name`);
CREATE CONSTRAINT ON (`document`:`document`) ASSERT exists(`document`.`doc_mgmt_type`);
CREATE CONSTRAINT ON (`documentx`:`documentx`) ASSERT exists(`documentx`.`doc_id`);
CREATE CONSTRAINT ON (`epshierarchy`:`epshierarchy`) ASSERT exists(`epshierarchy`.`parentlevelsbelowroot`);
CREATE CONSTRAINT ON (`epshierarchy`:`epshierarchy`) ASSERT exists(`epshierarchy`.`childlevelsbelowroot`);
CREATE CONSTRAINT ON (`epshierarchy`:`epshierarchy`) ASSERT exists(`epshierarchy`.`levelsbetween`);
CREATE CONSTRAINT ON (`expproj`:`expproj`) ASSERT exists(`expproj`.`proj_id`);
CREATE CONSTRAINT ON (`expproj`:`expproj`) ASSERT exists(`expproj`.`exp_group`);
CREATE CONSTRAINT ON (`expproj`:`expproj`) ASSERT exists(`expproj`.`exp_proj_name`);
CREATE CONSTRAINT ON (`expproj`:`expproj`) ASSERT exists(`expproj`.`login_supplied_flag`);
CREATE CONSTRAINT ON (`extapp`:`extapp`) ASSERT exists(`extapp`.`app_id`);
CREATE CONSTRAINT ON (`extapp`:`extapp`) ASSERT exists(`extapp`.`login_supply_flag`);
CREATE CONSTRAINT ON (`extapp`:`extapp`) ASSERT exists(`extapp`.`app_name`);
CREATE CONSTRAINT ON (`extapp`:`extapp`) ASSERT exists(`extapp`.`app_exe_name`);
CREATE CONSTRAINT ON (`factor`:`factor`) ASSERT exists(`factor`.`fact_id`);
CREATE CONSTRAINT ON (`factor`:`factor`) ASSERT exists(`factor`.`fact_seq_num`);
CREATE CONSTRAINT ON (`factor`:`factor`) ASSERT exists(`factor`.`fact_type`);
CREATE CONSTRAINT ON (`factor`:`factor`) ASSERT exists(`factor`.`fact_name`);
CREATE CONSTRAINT ON (`factval`:`factval`) ASSERT exists(`factval`.`fact_val_id`);
CREATE CONSTRAINT ON (`factval`:`factval`) ASSERT exists(`factval`.`fact_id`);
CREATE CONSTRAINT ON (`factval`:`factval`) ASSERT exists(`factval`.`fact_value`);
CREATE CONSTRAINT ON (`filtprop`:`filtprop`) ASSERT exists(`filtprop`.`filter_id`);
CREATE CONSTRAINT ON (`filtprop`:`filtprop`) ASSERT exists(`filtprop`.`table_name`);
CREATE CONSTRAINT ON (`filtprop`:`filtprop`) ASSERT exists(`filtprop`.`filter_type`);
CREATE CONSTRAINT ON (`filtprop`:`filtprop`) ASSERT exists(`filtprop`.`filter_name`);
CREATE CONSTRAINT ON (`findates`:`findates`) ASSERT exists(`findates`.`fin_dates_id`);
CREATE CONSTRAINT ON (`findates`:`findates`) ASSERT exists(`findates`.`fin_dates_name`);
CREATE CONSTRAINT ON (`findates`:`findates`) ASSERT exists(`findates`.`start_date`);
CREATE CONSTRAINT ON (`findates`:`findates`) ASSERT exists(`findates`.`end_date`);
CREATE CONSTRAINT ON (`formcatg`:`formcatg`) ASSERT exists(`formcatg`.`form_catg_id`);
CREATE CONSTRAINT ON (`formcatg`:`formcatg`) ASSERT exists(`formcatg`.`form_catg_name`);
CREATE CONSTRAINT ON (`formproj`:`formproj`) ASSERT exists(`formproj`.`form_tmpl_id`);
CREATE CONSTRAINT ON (`formproj`:`formproj`) ASSERT exists(`formproj`.`proj_id`);
CREATE CONSTRAINT ON (`formtmpl`:`formtmpl`) ASSERT exists(`formtmpl`.`form_tmpl_id`);
CREATE CONSTRAINT ON (`formtmpl`:`formtmpl`) ASSERT exists(`formtmpl`.`form_tmpl_name`);
CREATE CONSTRAINT ON (`fundsrc`:`fundsrc`) ASSERT exists(`fundsrc`.`fund_id`);
CREATE CONSTRAINT ON (`fundsrc`:`fundsrc`) ASSERT exists(`fundsrc`.`seq_num`);
CREATE CONSTRAINT ON (`fundsrc`:`fundsrc`) ASSERT exists(`fundsrc`.`fund_name`);
CREATE CONSTRAINT ON (`gchange`:`gchange`) ASSERT exists(`gchange`.`gchange_id`);
CREATE CONSTRAINT ON (`gchange`:`gchange`) ASSERT exists(`gchange`.`gchange_name`);
CREATE CONSTRAINT ON (`gchange`:`gchange`) ASSERT exists(`gchange`.`table_name`);
CREATE CONSTRAINT ON (`hqdata`:`hqdata`) ASSERT exists(`hqdata`.`session_id`);
CREATE CONSTRAINT ON (`hqdata`:`hqdata`) ASSERT exists(`hqdata`.`context_id`);
CREATE CONSTRAINT ON (`hqdata`:`hqdata`) ASSERT exists(`hqdata`.`fk_id`);
CREATE CONSTRAINT ON (`hqdata`:`hqdata`) ASSERT exists(`hqdata`.`value`);
CREATE CONSTRAINT ON (`hquery`:`hquery`) ASSERT exists(`hquery`.`session_id`);
CREATE CONSTRAINT ON (`hquery`:`hquery`) ASSERT exists(`hquery`.`context_id`);
CREATE CONSTRAINT ON (`hquery`:`hquery`) ASSERT exists(`hquery`.`fk_id`);
CREATE CONSTRAINT ON (`issuhist`:`issuhist`) ASSERT exists(`issuhist`.`issue_id`);
CREATE CONSTRAINT ON (`issuhist`:`issuhist`) ASSERT exists(`issuhist`.`proj_id`);
CREATE CONSTRAINT ON (`iteration`:`iteration`) ASSERT exists(`iteration`.`iteration_id`);
CREATE CONSTRAINT ON (`iteration`:`iteration`) ASSERT exists(`iteration`.`release_id`);
CREATE CONSTRAINT ON (`iteration`:`iteration`) ASSERT exists(`iteration`.`iteration_name`);
CREATE CONSTRAINT ON (`iterdays`:`iterdays`) ASSERT exists(`iterdays`.`task_id`);
CREATE CONSTRAINT ON (`iterdays`:`iterdays`) ASSERT exists(`iterdays`.`day_number`);
CREATE CONSTRAINT ON (`iterdays`:`iterdays`) ASSERT exists(`iterdays`.`proj_id`);
CREATE CONSTRAINT ON (`iterdays`:`iterdays`) ASSERT exists(`iterdays`.`iteration_id`);
CREATE CONSTRAINT ON (`itergoal`:`itergoal`) ASSERT exists(`itergoal`.`iter_goal_id`);
CREATE CONSTRAINT ON (`itergoal`:`itergoal`) ASSERT exists(`itergoal`.`iteration_id`);
CREATE CONSTRAINT ON (`itergoal`:`itergoal`) ASSERT exists(`itergoal`.`goal_name`);
CREATE CONSTRAINT ON (`itergoal`:`itergoal`) ASSERT exists(`itergoal`.`goal_descr`);
CREATE CONSTRAINT ON (`itergoal`:`itergoal`) ASSERT exists(`itergoal`.`status_code`);
CREATE CONSTRAINT ON (`itergoal`:`itergoal`) ASSERT exists(`itergoal`.`rfolio_id`);
CREATE CONSTRAINT ON (`joblog`:`joblog`) ASSERT exists(`joblog`.`job_id`);
CREATE CONSTRAINT ON (`jobrpt`:`jobrpt`) ASSERT exists(`jobrpt`.`job_id`);
CREATE CONSTRAINT ON (`jobrpt`:`jobrpt`) ASSERT exists(`jobrpt`.`rpt_id`);
CREATE CONSTRAINT ON (`jobrpt`:`jobrpt`) ASSERT exists(`jobrpt`.`personal_portal_flag`);
CREATE CONSTRAINT ON (`jobset`:`jobset`) ASSERT exists(`jobset`.`job_id`);
CREATE CONSTRAINT ON (`jobset`:`jobset`) ASSERT exists(`jobset`.`setting_name`);
CREATE CONSTRAINT ON (`jobsvc`:`jobsvc`) ASSERT exists(`jobsvc`.`job_id`);
CREATE CONSTRAINT ON (`jobsvc`:`jobsvc`) ASSERT exists(`jobsvc`.`seq_num`);
CREATE CONSTRAINT ON (`jobsvc`:`jobsvc`) ASSERT exists(`jobsvc`.`audit_flag`);
CREATE CONSTRAINT ON (`jobsvc`:`jobsvc`) ASSERT exists(`jobsvc`.`job_type`);
CREATE CONSTRAINT ON (`jobsvc`:`jobsvc`) ASSERT exists(`jobsvc`.`job_name`);
CREATE CONSTRAINT ON (`jobsvc`:`jobsvc`) ASSERT exists(`jobsvc`.`status_code`);
CREATE CONSTRAINT ON (`memotype`:`memotype`) ASSERT exists(`memotype`.`memo_type_id`);
CREATE CONSTRAINT ON (`memotype`:`memotype`) ASSERT exists(`memotype`.`seq_num`);
CREATE CONSTRAINT ON (`memotype`:`memotype`) ASSERT exists(`memotype`.`eps_flag`);
CREATE CONSTRAINT ON (`memotype`:`memotype`) ASSERT exists(`memotype`.`proj_flag`);
CREATE CONSTRAINT ON (`memotype`:`memotype`) ASSERT exists(`memotype`.`wbs_flag`);
CREATE CONSTRAINT ON (`memotype`:`memotype`) ASSERT exists(`memotype`.`task_flag`);
CREATE CONSTRAINT ON (`memotype`:`memotype`) ASSERT exists(`memotype`.`memo_type`);
CREATE CONSTRAINT ON (`mtxscrtyp`:`mtxscrtyp`) ASSERT exists(`mtxscrtyp`.`matrix_id`);
CREATE CONSTRAINT ON (`mtxscrtyp`:`mtxscrtyp`) ASSERT exists(`mtxscrtyp`.`scoretype_id`);
CREATE CONSTRAINT ON (`nextkey`:`nextkey`) ASSERT exists(`nextkey`.`key_name`);
CREATE CONSTRAINT ON (`nextkey`:`nextkey`) ASSERT exists(`nextkey`.`key_seq_num`);
CREATE CONSTRAINT ON (`nonwork`:`nonwork`) ASSERT exists(`nonwork`.`nonwork_type_id`);
CREATE CONSTRAINT ON (`nonwork`:`nonwork`) ASSERT exists(`nonwork`.`seq_num`);
CREATE CONSTRAINT ON (`nonwork`:`nonwork`) ASSERT exists(`nonwork`.`nonwork_code`);
CREATE CONSTRAINT ON (`nonwork`:`nonwork`) ASSERT exists(`nonwork`.`nonwork_type`);
CREATE CONSTRAINT ON (`note`:`note`) ASSERT exists(`note`.`note_id`);
CREATE CONSTRAINT ON (`note`:`note`) ASSERT exists(`note`.`table_name`);
CREATE CONSTRAINT ON (`note`:`note`) ASSERT exists(`note`.`type_name`);
CREATE CONSTRAINT ON (`note`:`note`) ASSERT exists(`note`.`fk_id`);
CREATE CONSTRAINT ON (`note`:`note`) ASSERT exists(`note`.`note_date`);
CREATE CONSTRAINT ON (`note`:`note`) ASSERT exists(`note`.`user_name`);
CREATE CONSTRAINT ON (`obs`:`obs`) ASSERT exists(`obs`.`obs_id`);
CREATE CONSTRAINT ON (`obs`:`obs`) ASSERT exists(`obs`.`seq_num`);
CREATE CONSTRAINT ON (`obs`:`obs`) ASSERT exists(`obs`.`obs_name`);
CREATE CONSTRAINT ON (`obsproj`:`obsproj`) ASSERT exists(`obsproj`.`obs_id`);
CREATE CONSTRAINT ON (`obsproj`:`obsproj`) ASSERT exists(`obsproj`.`proj_id`);
CREATE CONSTRAINT ON (`obsproj`:`obsproj`) ASSERT exists(`obsproj`.`wbs_id`);
CREATE CONSTRAINT ON (`pcattype`:`pcattype`) ASSERT exists(`pcattype`.`proj_catg_type_id`);
CREATE CONSTRAINT ON (`pcattype`:`pcattype`) ASSERT exists(`pcattype`.`seq_num`);
CREATE CONSTRAINT ON (`pcattype`:`pcattype`) ASSERT exists(`pcattype`.`proj_catg_short_len`);
CREATE CONSTRAINT ON (`pcattype`:`pcattype`) ASSERT exists(`pcattype`.`proj_catg_type`);
CREATE CONSTRAINT ON (`pcattype`:`pcattype`) ASSERT exists(`pcattype`.`super_flag`);
CREATE CONSTRAINT ON (`pcatuser`:`pcatuser`) ASSERT exists(`pcatuser`.`proj_catg_id`);
CREATE CONSTRAINT ON (`pcatuser`:`pcatuser`) ASSERT exists(`pcatuser`.`user_id`);
CREATE CONSTRAINT ON (`pcatuserx`:`pcatuserx`) ASSERT exists(`pcatuserx`.`proj_catg_id`);
CREATE CONSTRAINT ON (`pcatuserx`:`pcatuserx`) ASSERT exists(`pcatuserx`.`user_id`);
CREATE CONSTRAINT ON (`pcatval`:`pcatval`) ASSERT exists(`pcatval`.`proj_catg_id`);
CREATE CONSTRAINT ON (`pcatval`:`pcatval`) ASSERT exists(`pcatval`.`proj_catg_type_id`);
CREATE CONSTRAINT ON (`pcatval`:`pcatval`) ASSERT exists(`pcatval`.`seq_num`);
CREATE CONSTRAINT ON (`pcatval`:`pcatval`) ASSERT exists(`pcatval`.`proj_catg_short_name`);
CREATE CONSTRAINT ON (`pcatvalx`:`pcatvalx`) ASSERT exists(`pcatvalx`.`proj_catg_id`);
CREATE CONSTRAINT ON (`pfolio`:`pfolio`) ASSERT exists(`pfolio`.`pfolio_id`);
CREATE CONSTRAINT ON (`pfolio`:`pfolio`) ASSERT exists(`pfolio`.`closed_proj_flag`);
CREATE CONSTRAINT ON (`pfolio`:`pfolio`) ASSERT exists(`pfolio`.`whatif_proj_flag`);
CREATE CONSTRAINT ON (`pfolio`:`pfolio`) ASSERT exists(`pfolio`.`pfolio_type`);
CREATE CONSTRAINT ON (`pfolio`:`pfolio`) ASSERT exists(`pfolio`.`pfolio_name`);
CREATE CONSTRAINT ON (`pfoliox`:`pfoliox`) ASSERT exists(`pfoliox`.`pfolio_id`);
CREATE CONSTRAINT ON (`phase`:`phase`) ASSERT exists(`phase`.`phase_id`);
CREATE CONSTRAINT ON (`phase`:`phase`) ASSERT exists(`phase`.`seq_num`);
CREATE CONSTRAINT ON (`phase`:`phase`) ASSERT exists(`phase`.`phase_name`);
CREATE CONSTRAINT ON (`plprojref`:`plprojref`) ASSERT exists(`plprojref`.`proj_id`);
CREATE CONSTRAINT ON (`plprojref`:`plprojref`) ASSERT exists(`plprojref`.`ref_cnt`);
CREATE CONSTRAINT ON (`pobs`:`pobs`) ASSERT exists(`pobs`.`pobs_id`);
CREATE CONSTRAINT ON (`pobs`:`pobs`) ASSERT exists(`pobs`.`seq_num`);
CREATE CONSTRAINT ON (`pobs`:`pobs`) ASSERT exists(`pobs`.`pobs_name`);
CREATE CONSTRAINT ON (`prefer`:`prefer`) ASSERT exists(`prefer`.`prefer_id`);
CREATE CONSTRAINT ON (`prefer`:`prefer`) ASSERT exists(`prefer`.`hr_decimal_cnt`);
CREATE CONSTRAINT ON (`prefer`:`prefer`) ASSERT exists(`prefer`.`xfer_complete_day_cnt`);
CREATE CONSTRAINT ON (`prefer`:`prefer`) ASSERT exists(`prefer`.`xfer_notstart_day_cnt`);
CREATE CONSTRAINT ON (`prefer`:`prefer`) ASSERT exists(`prefer`.`max_wbs_level_cnt`);
CREATE CONSTRAINT ON (`prefer`:`prefer`) ASSERT exists(`prefer`.`max_rsrc_level_cnt`);
CREATE CONSTRAINT ON (`prefer`:`prefer`) ASSERT exists(`prefer`.`max_acct_level_cnt`);
CREATE CONSTRAINT ON (`prefer`:`prefer`) ASSERT exists(`prefer`.`max_task_actv_type_cnt`);
CREATE CONSTRAINT ON (`prefer`:`prefer`) ASSERT exists(`prefer`.`future_ts_cnt`);
CREATE CONSTRAINT ON (`prefer`:`prefer`) ASSERT exists(`prefer`.`max_obs_level_cnt`);
CREATE CONSTRAINT ON (`prefer`:`prefer`) ASSERT exists(`prefer`.`week_start_day_num`);
CREATE CONSTRAINT ON (`prefer`:`prefer`) ASSERT exists(`prefer`.`ts_approval_level`);
CREATE CONSTRAINT ON (`prefer`:`prefer`) ASSERT exists(`prefer`.`task_code_len`);
CREATE CONSTRAINT ON (`prefer`:`prefer`) ASSERT exists(`prefer`.`proj_short_len`);
CREATE CONSTRAINT ON (`prefer`:`prefer`) ASSERT exists(`prefer`.`wbs_short_len`);
CREATE CONSTRAINT ON (`prefer`:`prefer`) ASSERT exists(`prefer`.`rsrc_short_len`);
CREATE CONSTRAINT ON (`prefer`:`prefer`) ASSERT exists(`prefer`.`acct_short_len`);
CREATE CONSTRAINT ON (`prefer`:`prefer`) ASSERT exists(`prefer`.`role_short_len`);
CREATE CONSTRAINT ON (`prefer`:`prefer`) ASSERT exists(`prefer`.`max_base_cnt`);
CREATE CONSTRAINT ON (`prefer`:`prefer`) ASSERT exists(`prefer`.`def_target_drtn_hr_cnt`);
CREATE CONSTRAINT ON (`prefer`:`prefer`) ASSERT exists(`prefer`.`day_hr_cnt`);
CREATE CONSTRAINT ON (`prefer`:`prefer`) ASSERT exists(`prefer`.`week_hr_cnt`);
CREATE CONSTRAINT ON (`prefer`:`prefer`) ASSERT exists(`prefer`.`year_hr_cnt`);
CREATE CONSTRAINT ON (`prefer`:`prefer`) ASSERT exists(`prefer`.`month_hr_cnt`);
CREATE CONSTRAINT ON (`prefer`:`prefer`) ASSERT exists(`prefer`.`max_actv_level_cnt`);
CREATE CONSTRAINT ON (`prefer`:`prefer`) ASSERT exists(`prefer`.`max_eps_level_cnt`);
CREATE CONSTRAINT ON (`prefer`:`prefer`) ASSERT exists(`prefer`.`max_pcat_level_cnt`);
CREATE CONSTRAINT ON (`prefer`:`prefer`) ASSERT exists(`prefer`.`max_rcat_level_cnt`);
CREATE CONSTRAINT ON (`prefer`:`prefer`) ASSERT exists(`prefer`.`complete_task_hrs_flag`);
CREATE CONSTRAINT ON (`prefer`:`prefer`) ASSERT exists(`prefer`.`default_timesheet_flag`);
CREATE CONSTRAINT ON (`prefer`:`prefer`) ASSERT exists(`prefer`.`future_ts_hrs_flag`);
CREATE CONSTRAINT ON (`prefer`:`prefer`) ASSERT exists(`prefer`.`ev_fix_cost_flag`);
CREATE CONSTRAINT ON (`prefer`:`prefer`) ASSERT exists(`prefer`.`ts_daily_flag`);
CREATE CONSTRAINT ON (`prefer`:`prefer`) ASSERT exists(`prefer`.`notstart_task_hrs_flag`);
CREATE CONSTRAINT ON (`prefer`:`prefer`) ASSERT exists(`prefer`.`prestart_task_hrs_flag`);
CREATE CONSTRAINT ON (`prefer`:`prefer`) ASSERT exists(`prefer`.`postend_task_hrs_flag`);
CREATE CONSTRAINT ON (`prefer`:`prefer`) ASSERT exists(`prefer`.`ermm_enabled_flag`);
CREATE CONSTRAINT ON (`prefer`:`prefer`) ASSERT exists(`prefer`.`name_sep_char`);
CREATE CONSTRAINT ON (`prefer`:`prefer`) ASSERT exists(`prefer`.`year_char`);
CREATE CONSTRAINT ON (`prefer`:`prefer`) ASSERT exists(`prefer`.`month_char`);
CREATE CONSTRAINT ON (`prefer`:`prefer`) ASSERT exists(`prefer`.`week_char`);
CREATE CONSTRAINT ON (`prefer`:`prefer`) ASSERT exists(`prefer`.`day_char`);
CREATE CONSTRAINT ON (`prefer`:`prefer`) ASSERT exists(`prefer`.`hour_char`);
CREATE CONSTRAINT ON (`prefer`:`prefer`) ASSERT exists(`prefer`.`minute_char`);
CREATE CONSTRAINT ON (`prefer`:`prefer`) ASSERT exists(`prefer`.`ts_approval_type`);
CREATE CONSTRAINT ON (`prefer`:`prefer`) ASSERT exists(`prefer`.`db_name`);
CREATE CONSTRAINT ON (`prefer`:`prefer`) ASSERT exists(`prefer`.`tasksum_period_type`);
CREATE CONSTRAINT ON (`prefer`:`prefer`) ASSERT exists(`prefer`.`trsrcsum_period_type`);
CREATE CONSTRAINT ON (`prefer`:`prefer`) ASSERT exists(`prefer`.`database_version`);
CREATE CONSTRAINT ON (`prefer`:`prefer`) ASSERT exists(`prefer`.`phase_label`);
CREATE CONSTRAINT ON (`prefer`:`prefer`) ASSERT exists(`prefer`.`curr_id`);
CREATE CONSTRAINT ON (`prefer`:`prefer`) ASSERT exists(`prefer`.`max_role_level_cnt`);
CREATE CONSTRAINT ON (`prefer`:`prefer`) ASSERT exists(`prefer`.`past_ts_cnt`);
CREATE CONSTRAINT ON (`prefer`:`prefer`) ASSERT exists(`prefer`.`projinit_admin_user_id`);
CREATE CONSTRAINT ON (`prefer`:`prefer`) ASSERT exists(`prefer`.`allow_user_time_period_flag`);
CREATE CONSTRAINT ON (`prefer`:`prefer`) ASSERT exists(`prefer`.`ts_rsrc_def_asgn_actv_flag`);
CREATE CONSTRAINT ON (`prmqueue`:`prmqueue`) ASSERT exists(`prmqueue`.`queue_name`);
CREATE CONSTRAINT ON (`prmqueue`:`prmqueue`) ASSERT exists(`prmqueue`.`msg_key`);
CREATE CONSTRAINT ON (`prmqueue`:`prmqueue`) ASSERT exists(`prmqueue`.`enqueue_date`);
CREATE CONSTRAINT ON (`procgroup`:`procgroup`) ASSERT exists(`procgroup`.`proc_group_id`);
CREATE CONSTRAINT ON (`procgroup`:`procgroup`) ASSERT exists(`procgroup`.`seq_num`);
CREATE CONSTRAINT ON (`procgroup`:`procgroup`) ASSERT exists(`procgroup`.`proc_group_name`);
CREATE CONSTRAINT ON (`procitem`:`procitem`) ASSERT exists(`procitem`.`proc_item_id`);
CREATE CONSTRAINT ON (`procitem`:`procitem`) ASSERT exists(`procitem`.`proc_group_id`);
CREATE CONSTRAINT ON (`procitem`:`procitem`) ASSERT exists(`procitem`.`seq_num`);
CREATE CONSTRAINT ON (`procitem`:`procitem`) ASSERT exists(`procitem`.`proc_name`);
CREATE CONSTRAINT ON (`profile`:`profile`) ASSERT exists(`profile`.`prof_id`);
CREATE CONSTRAINT ON (`profile`:`profile`) ASSERT exists(`profile`.`default_flag`);
CREATE CONSTRAINT ON (`profile`:`profile`) ASSERT exists(`profile`.`superuser_flag`);
CREATE CONSTRAINT ON (`profile`:`profile`) ASSERT exists(`profile`.`scope_type`);
CREATE CONSTRAINT ON (`profile`:`profile`) ASSERT exists(`profile`.`prof_name`);
CREATE CONSTRAINT ON (`profpriv`:`profpriv`) ASSERT exists(`profpriv`.`prof_id`);
CREATE CONSTRAINT ON (`profpriv`:`profpriv`) ASSERT exists(`profpriv`.`priv_num`);
CREATE CONSTRAINT ON (`profpriv`:`profpriv`) ASSERT exists(`profpriv`.`allow_flag`);
CREATE CONSTRAINT ON (`profprivx`:`profprivx`) ASSERT exists(`profprivx`.`prof_id`);
CREATE CONSTRAINT ON (`profprivx`:`profprivx`) ASSERT exists(`profprivx`.`priv_num`);
CREATE CONSTRAINT ON (`projcost`:`projcost`) ASSERT exists(`projcost`.`cost_item_id`);
CREATE CONSTRAINT ON (`projcost`:`projcost`) ASSERT exists(`projcost`.`proj_id`);
CREATE CONSTRAINT ON (`projcost`:`projcost`) ASSERT exists(`projcost`.`task_id`);
CREATE CONSTRAINT ON (`projcost`:`projcost`) ASSERT exists(`projcost`.`auto_compute_act_flag`);
CREATE CONSTRAINT ON (`projcost`:`projcost`) ASSERT exists(`projcost`.`cost_load_type`);
CREATE CONSTRAINT ON (`projcost`:`projcost`) ASSERT exists(`projcost`.`target_qty`);
CREATE CONSTRAINT ON (`projcost`:`projcost`) ASSERT exists(`projcost`.`cost_per_qty`);
CREATE CONSTRAINT ON (`projcostx`:`projcostx`) ASSERT exists(`projcostx`.`cost_item_id`);
CREATE CONSTRAINT ON (`project`:`project`) ASSERT exists(`project`.`proj_id`);
CREATE CONSTRAINT ON (`project`:`project`) ASSERT exists(`project`.`fy_start_month_num`);
CREATE CONSTRAINT ON (`project`:`project`) ASSERT exists(`project`.`chng_eff_cmp_pct_flag`);
CREATE CONSTRAINT ON (`project`:`project`) ASSERT exists(`project`.`rsrc_self_add_flag`);
CREATE CONSTRAINT ON (`project`:`project`) ASSERT exists(`project`.`allow_complete_flag`);
CREATE CONSTRAINT ON (`project`:`project`) ASSERT exists(`project`.`rsrc_multi_assign_flag`);
CREATE CONSTRAINT ON (`project`:`project`) ASSERT exists(`project`.`checkout_flag`);
CREATE CONSTRAINT ON (`project`:`project`) ASSERT exists(`project`.`project_flag`);
CREATE CONSTRAINT ON (`project`:`project`) ASSERT exists(`project`.`step_complete_flag`);
CREATE CONSTRAINT ON (`project`:`project`) ASSERT exists(`project`.`cost_qty_recalc_flag`);
CREATE CONSTRAINT ON (`project`:`project`) ASSERT exists(`project`.`sum_only_flag`);
CREATE CONSTRAINT ON (`project`:`project`) ASSERT exists(`project`.`batch_sum_flag`);
CREATE CONSTRAINT ON (`project`:`project`) ASSERT exists(`project`.`name_sep_char`);
CREATE CONSTRAINT ON (`project`:`project`) ASSERT exists(`project`.`def_complete_pct_type`);
CREATE CONSTRAINT ON (`project`:`project`) ASSERT exists(`project`.`proj_short_name`);
CREATE CONSTRAINT ON (`project`:`project`) ASSERT exists(`project`.`add_date`);
CREATE CONSTRAINT ON (`project`:`project`) ASSERT exists(`project`.`act_this_per_link_flag`);
CREATE CONSTRAINT ON (`project`:`project`) ASSERT exists(`project`.`def_task_type`);
CREATE CONSTRAINT ON (`project`:`project`) ASSERT exists(`project`.`act_pct_link_flag`);
CREATE CONSTRAINT ON (`project`:`project`) ASSERT exists(`project`.`add_act_remain_flag`);
CREATE CONSTRAINT ON (`project`:`project`) ASSERT exists(`project`.`critical_path_type`);
CREATE CONSTRAINT ON (`project`:`project`) ASSERT exists(`project`.`task_code_prefix_flag`);
CREATE CONSTRAINT ON (`project`:`project`) ASSERT exists(`project`.`def_rollup_dates_flag`);
CREATE CONSTRAINT ON (`project`:`project`) ASSERT exists(`project`.`rem_target_link_flag`);
CREATE CONSTRAINT ON (`project`:`project`) ASSERT exists(`project`.`reset_planned_flag`);
CREATE CONSTRAINT ON (`project`:`project`) ASSERT exists(`project`.`allow_neg_act_flag`);
CREATE CONSTRAINT ON (`project`:`project`) ASSERT exists(`project`.`msp_managed_flag`);
CREATE CONSTRAINT ON (`project`:`project`) ASSERT exists(`project`.`msp_update_actuals_flag`);
CREATE CONSTRAINT ON (`project`:`project`) ASSERT exists(`project`.`use_project_baseline_flag`);
CREATE CONSTRAINT ON (`project`:`project`) ASSERT exists(`project`.`ts_rsrc_vw_compl_asgn_flag`);
CREATE CONSTRAINT ON (`project`:`project`) ASSERT exists(`project`.`ts_rsrc_mark_act_finish_flag`);
CREATE CONSTRAINT ON (`project`:`project`) ASSERT exists(`project`.`ts_rsrc_vw_inact_actv_flag`);
CREATE CONSTRAINT ON (`project`:`project`) ASSERT exists(`project`.`px_enable_publication_flag`);
CREATE CONSTRAINT ON (`projectcodehierarchy`:`projectcodehierarchy`) ASSERT exists(`projectcodehierarchy`.`codetypeobjectid`);
CREATE CONSTRAINT ON (`projectcodehierarchy`:`projectcodehierarchy`) ASSERT exists(`projectcodehierarchy`.`codetypename`);
CREATE CONSTRAINT ON (`projectcodehierarchy`:`projectcodehierarchy`) ASSERT exists(`projectcodehierarchy`.`codetypesequencenumber`);
CREATE CONSTRAINT ON (`projectcodehierarchy`:`projectcodehierarchy`) ASSERT exists(`projectcodehierarchy`.`codetypeissecure`);
CREATE CONSTRAINT ON (`projectcodehierarchy`:`projectcodehierarchy`) ASSERT exists(`projectcodehierarchy`.`parentlevelsbelowroot`);
CREATE CONSTRAINT ON (`projectcodehierarchy`:`projectcodehierarchy`) ASSERT exists(`projectcodehierarchy`.`childlevelsbelowroot`);
CREATE CONSTRAINT ON (`projectcodehierarchy`:`projectcodehierarchy`) ASSERT exists(`projectcodehierarchy`.`levelsbetween`);
CREATE CONSTRAINT ON (`projectx`:`projectx`) ASSERT exists(`projectx`.`proj_id`);
CREATE CONSTRAINT ON (`projest`:`projest`) ASSERT exists(`projest`.`proj_est_id`);
CREATE CONSTRAINT ON (`projest`:`projest`) ASSERT exists(`projest`.`proj_id`);
CREATE CONSTRAINT ON (`projest`:`projest`) ASSERT exists(`projest`.`wbs_id`);
CREATE CONSTRAINT ON (`projest`:`projest`) ASSERT exists(`projest`.`applied_flag`);
CREATE CONSTRAINT ON (`projest`:`projest`) ASSERT exists(`projest`.`rsrc_type`);
CREATE CONSTRAINT ON (`projest`:`projest`) ASSERT exists(`projest`.`est_type`);
CREATE CONSTRAINT ON (`projest`:`projest`) ASSERT exists(`projest`.`est_name`);
CREATE CONSTRAINT ON (`projfund`:`projfund`) ASSERT exists(`projfund`.`proj_fund_id`);
CREATE CONSTRAINT ON (`projfund`:`projfund`) ASSERT exists(`projfund`.`fund_id`);
CREATE CONSTRAINT ON (`projfund`:`projfund`) ASSERT exists(`projfund`.`proj_id`);
CREATE CONSTRAINT ON (`projfundx`:`projfundx`) ASSERT exists(`projfundx`.`proj_fund_id`);
CREATE CONSTRAINT ON (`projissu`:`projissu`) ASSERT exists(`projissu`.`issue_id`);
CREATE CONSTRAINT ON (`projissu`:`projissu`) ASSERT exists(`projissu`.`proj_id`);
CREATE CONSTRAINT ON (`projissu`:`projissu`) ASSERT exists(`projissu`.`obs_id`);
CREATE CONSTRAINT ON (`projissu`:`projissu`) ASSERT exists(`projissu`.`priority_type`);
CREATE CONSTRAINT ON (`projissu`:`projissu`) ASSERT exists(`projissu`.`status_code`);
CREATE CONSTRAINT ON (`projissu`:`projissu`) ASSERT exists(`projissu`.`issue_name`);
CREATE CONSTRAINT ON (`projissux`:`projissux`) ASSERT exists(`projissux`.`issue_id`);
CREATE CONSTRAINT ON (`projpcat`:`projpcat`) ASSERT exists(`projpcat`.`proj_id`);
CREATE CONSTRAINT ON (`projpcat`:`projpcat`) ASSERT exists(`projpcat`.`proj_catg_type_id`);
CREATE CONSTRAINT ON (`projpcat`:`projpcat`) ASSERT exists(`projpcat`.`proj_catg_id`);
CREATE CONSTRAINT ON (`projpcatx`:`projpcatx`) ASSERT exists(`projpcatx`.`proj_id`);
CREATE CONSTRAINT ON (`projpcatx`:`projpcatx`) ASSERT exists(`projpcatx`.`proj_catg_type_id`);
CREATE CONSTRAINT ON (`projprop`:`projprop`) ASSERT exists(`projprop`.`proj_id`);
CREATE CONSTRAINT ON (`projprop`:`projprop`) ASSERT exists(`projprop`.`prop_name`);
CREATE CONSTRAINT ON (`projrisk`:`projrisk`) ASSERT exists(`projrisk`.`risk_id`);
CREATE CONSTRAINT ON (`projrisk`:`projrisk`) ASSERT exists(`projrisk`.`proj_id`);
CREATE CONSTRAINT ON (`projrisk`:`projrisk`) ASSERT exists(`projrisk`.`wbs_id`);
CREATE CONSTRAINT ON (`projrisk`:`projrisk`) ASSERT exists(`projrisk`.`add_date`);
CREATE CONSTRAINT ON (`projrisk`:`projrisk`) ASSERT exists(`projrisk`.`priority_type`);
CREATE CONSTRAINT ON (`projrisk`:`projrisk`) ASSERT exists(`projrisk`.`status_code`);
CREATE CONSTRAINT ON (`projrisk`:`projrisk`) ASSERT exists(`projrisk`.`risk_name`);
CREATE CONSTRAINT ON (`projshar`:`projshar`) ASSERT exists(`projshar`.`proj_id`);
CREATE CONSTRAINT ON (`projshar`:`projshar`) ASSERT exists(`projshar`.`session_id`);
CREATE CONSTRAINT ON (`projshar`:`projshar`) ASSERT exists(`projshar`.`access_level`);
CREATE CONSTRAINT ON (`projshar`:`projshar`) ASSERT exists(`projshar`.`load_status`);
CREATE CONSTRAINT ON (`projthrs`:`projthrs`) ASSERT exists(`projthrs`.`thresh_id`);
CREATE CONSTRAINT ON (`projthrs`:`projthrs`) ASSERT exists(`projthrs`.`proj_id`);
CREATE CONSTRAINT ON (`projthrs`:`projthrs`) ASSERT exists(`projthrs`.`obs_id`);
CREATE CONSTRAINT ON (`projthrs`:`projthrs`) ASSERT exists(`projthrs`.`thresh_parm_id`);
CREATE CONSTRAINT ON (`projthrs`:`projthrs`) ASSERT exists(`projthrs`.`status_code`);
CREATE CONSTRAINT ON (`projthrs`:`projthrs`) ASSERT exists(`projthrs`.`priority_type`);
CREATE CONSTRAINT ON (`projthrs`:`projthrs`) ASSERT exists(`projthrs`.`thresh_type`);
CREATE CONSTRAINT ON (`projwbs`:`projwbs`) ASSERT exists(`projwbs`.`wbs_id`);
CREATE CONSTRAINT ON (`projwbs`:`projwbs`) ASSERT exists(`projwbs`.`proj_id`);
CREATE CONSTRAINT ON (`projwbs`:`projwbs`) ASSERT exists(`projwbs`.`obs_id`);
CREATE CONSTRAINT ON (`projwbs`:`projwbs`) ASSERT exists(`projwbs`.`seq_num`);
CREATE CONSTRAINT ON (`projwbs`:`projwbs`) ASSERT exists(`projwbs`.`proj_node_flag`);
CREATE CONSTRAINT ON (`projwbs`:`projwbs`) ASSERT exists(`projwbs`.`sum_data_flag`);
CREATE CONSTRAINT ON (`projwbs`:`projwbs`) ASSERT exists(`projwbs`.`status_code`);
CREATE CONSTRAINT ON (`projwbs`:`projwbs`) ASSERT exists(`projwbs`.`wbs_short_name`);
CREATE CONSTRAINT ON (`projwbs`:`projwbs`) ASSERT exists(`projwbs`.`wbs_name`);
CREATE CONSTRAINT ON (`projwbsx`:`projwbsx`) ASSERT exists(`projwbsx`.`wbs_id`);
CREATE CONSTRAINT ON (`projwsrpt`:`projwsrpt`) ASSERT exists(`projwsrpt`.`rpt_id`);
CREATE CONSTRAINT ON (`projwsrpt`:`projwsrpt`) ASSERT exists(`projwsrpt`.`proj_id`);
CREATE CONSTRAINT ON (`prpfolio`:`prpfolio`) ASSERT exists(`prpfolio`.`pfolio_id`);
CREATE CONSTRAINT ON (`prpfolio`:`prpfolio`) ASSERT exists(`prpfolio`.`wbs_id`);
CREATE CONSTRAINT ON (`pubuser`:`pubuser`) ASSERT exists(`pubuser`.`public_group_id`);
CREATE CONSTRAINT ON (`pubuser`:`pubuser`) ASSERT exists(`pubuser`.`private_db_user_name`);
CREATE CONSTRAINT ON (`querylib`:`querylib`) ASSERT exists(`querylib`.`query_lib_id`);
CREATE CONSTRAINT ON (`querylib`:`querylib`) ASSERT exists(`querylib`.`app_name`);
CREATE CONSTRAINT ON (`querylib`:`querylib`) ASSERT exists(`querylib`.`core_flag`);
CREATE CONSTRAINT ON (`querylib`:`querylib`) ASSERT exists(`querylib`.`match_sql`);
CREATE CONSTRAINT ON (`rcattype`:`rcattype`) ASSERT exists(`rcattype`.`rsrc_catg_type_id`);
CREATE CONSTRAINT ON (`rcattype`:`rcattype`) ASSERT exists(`rcattype`.`seq_num`);
CREATE CONSTRAINT ON (`rcattype`:`rcattype`) ASSERT exists(`rcattype`.`rsrc_catg_short_len`);
CREATE CONSTRAINT ON (`rcattype`:`rcattype`) ASSERT exists(`rcattype`.`rsrc_catg_type`);
CREATE CONSTRAINT ON (`rcattype`:`rcattype`) ASSERT exists(`rcattype`.`super_flag`);
CREATE CONSTRAINT ON (`rcatval`:`rcatval`) ASSERT exists(`rcatval`.`rsrc_catg_id`);
CREATE CONSTRAINT ON (`rcatval`:`rcatval`) ASSERT exists(`rcatval`.`rsrc_catg_type_id`);
CREATE CONSTRAINT ON (`rcatval`:`rcatval`) ASSERT exists(`rcatval`.`seq_num`);
CREATE CONSTRAINT ON (`rcatval`:`rcatval`) ASSERT exists(`rcatval`.`rsrc_catg_short_name`);
CREATE CONSTRAINT ON (`rcatvalx`:`rcatvalx`) ASSERT exists(`rcatvalx`.`rsrc_catg_id`);
CREATE CONSTRAINT ON (`refrdel`:`refrdel`) ASSERT exists(`refrdel`.`delete_date`);
CREATE CONSTRAINT ON (`refrdel`:`refrdel`) ASSERT exists(`refrdel`.`table_name`);
CREATE CONSTRAINT ON (`refrdel`:`refrdel`) ASSERT exists(`refrdel`.`pk1`);
CREATE CONSTRAINT ON (`reittype`:`reittype`) ASSERT exists(`reittype`.`related_item_type_id`);
CREATE CONSTRAINT ON (`reittype`:`reittype`) ASSERT exists(`reittype`.`related_item`);
CREATE CONSTRAINT ON (`release`:`release`) ASSERT exists(`release`.`release_id`);
CREATE CONSTRAINT ON (`release`:`release`) ASSERT exists(`release`.`release_name`);
CREATE CONSTRAINT ON (`release`:`release`) ASSERT exists(`release`.`start_date`);
CREATE CONSTRAINT ON (`release`:`release`) ASSERT exists(`release`.`proj_id`);
CREATE CONSTRAINT ON (`relitems`:`relitems`) ASSERT exists(`relitems`.`item_type_id`);
CREATE CONSTRAINT ON (`relitems`:`relitems`) ASSERT exists(`relitems`.`fk_id`);
CREATE CONSTRAINT ON (`relitems`:`relitems`) ASSERT exists(`relitems`.`related_item_type_id`);
CREATE CONSTRAINT ON (`relitems`:`relitems`) ASSERT exists(`relitems`.`related_fk_id`);
CREATE CONSTRAINT ON (`relitems`:`relitems`) ASSERT exists(`relitems`.`proj_id`);
CREATE CONSTRAINT ON (`resourceassignmentspread`:`resourceassignmentspread`) ASSERT exists(`resourceassignmentspread`.`resourceassignmentobjectid`);
CREATE CONSTRAINT ON (`resourceassignmentspread`:`resourceassignmentspread`) ASSERT exists(`resourceassignmentspread`.`startdate`);
CREATE CONSTRAINT ON (`resourceassignmentspread`:`resourceassignmentspread`) ASSERT exists(`resourceassignmentspread`.`enddate`);
CREATE CONSTRAINT ON (`resourceassignmentspread`:`resourceassignmentspread`) ASSERT exists(`resourceassignmentspread`.`activityobjectid`);
CREATE CONSTRAINT ON (`resourceassignmentspread`:`resourceassignmentspread`) ASSERT exists(`resourceassignmentspread`.`wbsobjectid`);
CREATE CONSTRAINT ON (`resourceassignmentspread`:`resourceassignmentspread`) ASSERT exists(`resourceassignmentspread`.`projectobjectid`);
CREATE CONSTRAINT ON (`resourcecodehierarchy`:`resourcecodehierarchy`) ASSERT exists(`resourcecodehierarchy`.`codetypeobjectid`);
CREATE CONSTRAINT ON (`resourcecodehierarchy`:`resourcecodehierarchy`) ASSERT exists(`resourcecodehierarchy`.`codetypename`);
CREATE CONSTRAINT ON (`resourcecodehierarchy`:`resourcecodehierarchy`) ASSERT exists(`resourcecodehierarchy`.`codetypesequencenumber`);
CREATE CONSTRAINT ON (`resourcecodehierarchy`:`resourcecodehierarchy`) ASSERT exists(`resourcecodehierarchy`.`codetypeissecure`);
CREATE CONSTRAINT ON (`resourcecodehierarchy`:`resourcecodehierarchy`) ASSERT exists(`resourcecodehierarchy`.`parentlevelsbelowroot`);
CREATE CONSTRAINT ON (`resourcecodehierarchy`:`resourcecodehierarchy`) ASSERT exists(`resourcecodehierarchy`.`childlevelsbelowroot`);
CREATE CONSTRAINT ON (`resourcecodehierarchy`:`resourcecodehierarchy`) ASSERT exists(`resourcecodehierarchy`.`levelsbetween`);
CREATE CONSTRAINT ON (`resourcehierarchy`:`resourcehierarchy`) ASSERT exists(`resourcehierarchy`.`parentlevelsbelowroot`);
CREATE CONSTRAINT ON (`resourcehierarchy`:`resourcehierarchy`) ASSERT exists(`resourcehierarchy`.`childlevelsbelowroot`);
CREATE CONSTRAINT ON (`resourcehierarchy`:`resourcehierarchy`) ASSERT exists(`resourcehierarchy`.`levelsbetween`);
CREATE CONSTRAINT ON (`resourcelimit`:`resourcelimit`) ASSERT exists(`resourcelimit`.`rsrc_id`);
CREATE CONSTRAINT ON (`resourcelimit`:`resourcelimit`) ASSERT exists(`resourcelimit`.`startdate`);
CREATE CONSTRAINT ON (`resourcelimit`:`resourcelimit`) ASSERT exists(`resourcelimit`.`enddate`);
CREATE CONSTRAINT ON (`rfolio`:`rfolio`) ASSERT exists(`rfolio`.`rfolio_id`);
CREATE CONSTRAINT ON (`rfolio`:`rfolio`) ASSERT exists(`rfolio`.`rfolio_name`);
CREATE CONSTRAINT ON (`rfolio`:`rfolio`) ASSERT exists(`rfolio`.`rfolio_type`);
CREATE CONSTRAINT ON (`rfoliox`:`rfoliox`) ASSERT exists(`rfoliox`.`rfolio_id`);
CREATE CONSTRAINT ON (`risk`:`risk`) ASSERT exists(`risk`.`risk_id`);
CREATE CONSTRAINT ON (`risk`:`risk`) ASSERT exists(`risk`.`proj_id`);
CREATE CONSTRAINT ON (`risk`:`risk`) ASSERT exists(`risk`.`id`);
CREATE CONSTRAINT ON (`risk`:`risk`) ASSERT exists(`risk`.`total_cost`);
CREATE CONSTRAINT ON (`risk`:`risk`) ASSERT exists(`risk`.`type`);
CREATE CONSTRAINT ON (`risk`:`risk`) ASSERT exists(`risk`.`status`);
CREATE CONSTRAINT ON (`riskctrl`:`riskctrl`) ASSERT exists(`riskctrl`.`risk_id`);
CREATE CONSTRAINT ON (`riskctrl`:`riskctrl`) ASSERT exists(`riskctrl`.`proj_id`);
CREATE CONSTRAINT ON (`riskimpact`:`riskimpact`) ASSERT exists(`riskimpact`.`risk_id`);
CREATE CONSTRAINT ON (`riskimpact`:`riskimpact`) ASSERT exists(`riskimpact`.`scoretype_id`);
CREATE CONSTRAINT ON (`riskimpact`:`riskimpact`) ASSERT exists(`riskimpact`.`proj_id`);
CREATE CONSTRAINT ON (`riskimpact`:`riskimpact`) ASSERT exists(`riskimpact`.`threshold_id`);
CREATE CONSTRAINT ON (`riskmit`:`riskmit`) ASSERT exists(`riskmit`.`mitigation_id`);
CREATE CONSTRAINT ON (`riskmit`:`riskmit`) ASSERT exists(`riskmit`.`id`);
CREATE CONSTRAINT ON (`riskmit`:`riskmit`) ASSERT exists(`riskmit`.`response_id`);
CREATE CONSTRAINT ON (`riskmit`:`riskmit`) ASSERT exists(`riskmit`.`proj_id`);
CREATE CONSTRAINT ON (`riskmit`:`riskmit`) ASSERT exists(`riskmit`.`start_date`);
CREATE CONSTRAINT ON (`riskmit`:`riskmit`) ASSERT exists(`riskmit`.`finish_date`);
CREATE CONSTRAINT ON (`riskmit`:`riskmit`) ASSERT exists(`riskmit`.`base_start_date`);
CREATE CONSTRAINT ON (`riskmit`:`riskmit`) ASSERT exists(`riskmit`.`base_finish_date`);
CREATE CONSTRAINT ON (`riskmit`:`riskmit`) ASSERT exists(`riskmit`.`remaining_cost`);
CREATE CONSTRAINT ON (`riskmit`:`riskmit`) ASSERT exists(`riskmit`.`actual_cost`);
CREATE CONSTRAINT ON (`riskmit`:`riskmit`) ASSERT exists(`riskmit`.`budget_cost`);
CREATE CONSTRAINT ON (`riskmit`:`riskmit`) ASSERT exists(`riskmit`.`status`);
CREATE CONSTRAINT ON (`riskmitimp`:`riskmitimp`) ASSERT exists(`riskmitimp`.`mitigation_id`);
CREATE CONSTRAINT ON (`riskmitimp`:`riskmitimp`) ASSERT exists(`riskmitimp`.`scoretype_id`);
CREATE CONSTRAINT ON (`riskmitimp`:`riskmitimp`) ASSERT exists(`riskmitimp`.`proj_id`);
CREATE CONSTRAINT ON (`riskmitimp`:`riskmitimp`) ASSERT exists(`riskmitimp`.`threshold_id`);
CREATE CONSTRAINT ON (`riskmitx`:`riskmitx`) ASSERT exists(`riskmitx`.`mitigation_id`);
CREATE CONSTRAINT ON (`riskmtxscr`:`riskmtxscr`) ASSERT exists(`riskmtxscr`.`score_id`);
CREATE CONSTRAINT ON (`riskmtxscr`:`riskmtxscr`) ASSERT exists(`riskmtxscr`.`matrix_id`);
CREATE CONSTRAINT ON (`riskmtxscr`:`riskmtxscr`) ASSERT exists(`riskmtxscr`.`probability_threshold_level`);
CREATE CONSTRAINT ON (`riskrsppln`:`riskrsppln`) ASSERT exists(`riskrsppln`.`response_id`);
CREATE CONSTRAINT ON (`riskrsppln`:`riskrsppln`) ASSERT exists(`riskrsppln`.`id`);
CREATE CONSTRAINT ON (`riskrsppln`:`riskrsppln`) ASSERT exists(`riskrsppln`.`risk_id`);
CREATE CONSTRAINT ON (`riskrsppln`:`riskrsppln`) ASSERT exists(`riskrsppln`.`proj_id`);
CREATE CONSTRAINT ON (`riskrsppln`:`riskrsppln`) ASSERT exists(`riskrsppln`.`name`);
CREATE CONSTRAINT ON (`riskrsppln`:`riskrsppln`) ASSERT exists(`riskrsppln`.`used`);
CREATE CONSTRAINT ON (`riskrsppln`:`riskrsppln`) ASSERT exists(`riskrsppln`.`type`);
CREATE CONSTRAINT ON (`riskrspplnx`:`riskrspplnx`) ASSERT exists(`riskrspplnx`.`response_id`);
CREATE CONSTRAINT ON (`riskscrmtx`:`riskscrmtx`) ASSERT exists(`riskscrmtx`.`matrix_id`);
CREATE CONSTRAINT ON (`riskscrmtx`:`riskscrmtx`) ASSERT exists(`riskscrmtx`.`name`);
CREATE CONSTRAINT ON (`riskscrmtx`:`riskscrmtx`) ASSERT exists(`riskscrmtx`.`method`);
CREATE CONSTRAINT ON (`riskscrmtx`:`riskscrmtx`) ASSERT exists(`riskscrmtx`.`impact_levels`);
CREATE CONSTRAINT ON (`riskscrmtx`:`riskscrmtx`) ASSERT exists(`riskscrmtx`.`probability_levels`);
CREATE CONSTRAINT ON (`riskscrthr`:`riskscrthr`) ASSERT exists(`riskscrthr`.`threshold_id`);
CREATE CONSTRAINT ON (`riskscrthr`:`riskscrthr`) ASSERT exists(`riskscrthr`.`scoretype_id`);
CREATE CONSTRAINT ON (`riskscrthr`:`riskscrthr`) ASSERT exists(`riskscrthr`.`short_name`);
CREATE CONSTRAINT ON (`riskscrthr`:`riskscrthr`) ASSERT exists(`riskscrthr`.`full_name`);
CREATE CONSTRAINT ON (`riskscrthr`:`riskscrthr`) ASSERT exists(`riskscrthr`.`color`);
CREATE CONSTRAINT ON (`riskscrthr`:`riskscrthr`) ASSERT exists(`riskscrthr`.`lvl`);
CREATE CONSTRAINT ON (`riskscrtyp`:`riskscrtyp`) ASSERT exists(`riskscrtyp`.`scoretype_id`);
CREATE CONSTRAINT ON (`riskscrtyp`:`riskscrtyp`) ASSERT exists(`riskscrtyp`.`name`);
CREATE CONSTRAINT ON (`riskscrtyp`:`riskscrtyp`) ASSERT exists(`riskscrtyp`.`type`);
CREATE CONSTRAINT ON (`risktype`:`risktype`) ASSERT exists(`risktype`.`risk_type_id`);
CREATE CONSTRAINT ON (`risktype`:`risktype`) ASSERT exists(`risktype`.`seq_num`);
CREATE CONSTRAINT ON (`risktype`:`risktype`) ASSERT exists(`risktype`.`risk_type`);
CREATE CONSTRAINT ON (`riskx`:`riskx`) ASSERT exists(`riskx`.`risk_id`);
CREATE CONSTRAINT ON (`rlfolio`:`rlfolio`) ASSERT exists(`rlfolio`.`rlfolio_id`);
CREATE CONSTRAINT ON (`rlfolio`:`rlfolio`) ASSERT exists(`rlfolio`.`rlfolio_name`);
CREATE CONSTRAINT ON (`rlfolio`:`rlfolio`) ASSERT exists(`rlfolio`.`rlfolio_type`);
CREATE CONSTRAINT ON (`rlfoliox`:`rlfoliox`) ASSERT exists(`rlfoliox`.`rlfolio_id`);
CREATE CONSTRAINT ON (`rolelimit`:`rolelimit`) ASSERT exists(`rolelimit`.`rolelimit_id`);
CREATE CONSTRAINT ON (`rolelimit`:`rolelimit`) ASSERT exists(`rolelimit`.`role_id`);
CREATE CONSTRAINT ON (`rolelimit`:`rolelimit`) ASSERT exists(`rolelimit`.`start_date`);
CREATE CONSTRAINT ON (`rolerate`:`rolerate`) ASSERT exists(`rolerate`.`role_rate_id`);
CREATE CONSTRAINT ON (`rolerate`:`rolerate`) ASSERT exists(`rolerate`.`role_id`);
CREATE CONSTRAINT ON (`roleratex`:`roleratex`) ASSERT exists(`roleratex`.`role_rate_id`);
CREATE CONSTRAINT ON (`roles`:`roles`) ASSERT exists(`roles`.`role_id`);
CREATE CONSTRAINT ON (`roles`:`roles`) ASSERT exists(`roles`.`role_short_name`);
CREATE CONSTRAINT ON (`roles`:`roles`) ASSERT exists(`roles`.`role_name`);
CREATE CONSTRAINT ON (`roles`:`roles`) ASSERT exists(`roles`.`seq_num`);
CREATE CONSTRAINT ON (`roles`:`roles`) ASSERT exists(`roles`.`def_cost_qty_link_flag`);
CREATE CONSTRAINT ON (`roles`:`roles`) ASSERT exists(`roles`.`cost_qty_type`);
CREATE CONSTRAINT ON (`rolfolio`:`rolfolio`) ASSERT exists(`rolfolio`.`rlfolio_id`);
CREATE CONSTRAINT ON (`rolfolio`:`rolfolio`) ASSERT exists(`rolfolio`.`role_id`);
CREATE CONSTRAINT ON (`rpt`:`rpt`) ASSERT exists(`rpt`.`rpt_id`);
CREATE CONSTRAINT ON (`rpt`:`rpt`) ASSERT exists(`rpt`.`global_flag`);
CREATE CONSTRAINT ON (`rpt`:`rpt`) ASSERT exists(`rpt`.`rpt_type`);
CREATE CONSTRAINT ON (`rpt`:`rpt`) ASSERT exists(`rpt`.`rpt_name`);
CREATE CONSTRAINT ON (`rpt`:`rpt`) ASSERT exists(`rpt`.`rpt_area`);
CREATE CONSTRAINT ON (`rptbatch`:`rptbatch`) ASSERT exists(`rptbatch`.`rpt_batch_id`);
CREATE CONSTRAINT ON (`rptbatch`:`rptbatch`) ASSERT exists(`rptbatch`.`rpt_batch_name`);
CREATE CONSTRAINT ON (`rptgroup`:`rptgroup`) ASSERT exists(`rptgroup`.`rpt_group_id`);
CREATE CONSTRAINT ON (`rptgroup`:`rptgroup`) ASSERT exists(`rptgroup`.`rpt_group_seq_num`);
CREATE CONSTRAINT ON (`rptgroup`:`rptgroup`) ASSERT exists(`rptgroup`.`rpt_group_name`);
CREATE CONSTRAINT ON (`rptlist`:`rptlist`) ASSERT exists(`rptlist`.`rpt_batch_id`);
CREATE CONSTRAINT ON (`rptlist`:`rptlist`) ASSERT exists(`rptlist`.`rpt_id`);
CREATE CONSTRAINT ON (`rptlist`:`rptlist`) ASSERT exists(`rptlist`.`seq_num`);
CREATE CONSTRAINT ON (`rsrc`:`rsrc`) ASSERT exists(`rsrc`.`rsrc_id`);
CREATE CONSTRAINT ON (`rsrc`:`rsrc`) ASSERT exists(`rsrc`.`clndr_id`);
CREATE CONSTRAINT ON (`rsrc`:`rsrc`) ASSERT exists(`rsrc`.`rsrc_seq_num`);
CREATE CONSTRAINT ON (`rsrc`:`rsrc`) ASSERT exists(`rsrc`.`timesheet_flag`);
CREATE CONSTRAINT ON (`rsrc`:`rsrc`) ASSERT exists(`rsrc`.`active_flag`);
CREATE CONSTRAINT ON (`rsrc`:`rsrc`) ASSERT exists(`rsrc`.`rsrc_type`);
CREATE CONSTRAINT ON (`rsrc`:`rsrc`) ASSERT exists(`rsrc`.`auto_compute_act_flag`);
CREATE CONSTRAINT ON (`rsrc`:`rsrc`) ASSERT exists(`rsrc`.`ot_flag`);
CREATE CONSTRAINT ON (`rsrc`:`rsrc`) ASSERT exists(`rsrc`.`def_cost_qty_link_flag`);
CREATE CONSTRAINT ON (`rsrc`:`rsrc`) ASSERT exists(`rsrc`.`rsrc_short_name`);
CREATE CONSTRAINT ON (`rsrc`:`rsrc`) ASSERT exists(`rsrc`.`rsrc_name`);
CREATE CONSTRAINT ON (`rsrc`:`rsrc`) ASSERT exists(`rsrc`.`curr_id`);
CREATE CONSTRAINT ON (`rsrcandash`:`rsrcandash`) ASSERT exists(`rsrcandash`.`dashboard_id`);
CREATE CONSTRAINT ON (`rsrcandash`:`rsrcandash`) ASSERT exists(`rsrcandash`.`rsrcan_view_id`);
CREATE CONSTRAINT ON (`rsrcandash`:`rsrcandash`) ASSERT exists(`rsrcandash`.`seq_num`);
CREATE CONSTRAINT ON (`rsrcanview`:`rsrcanview`) ASSERT exists(`rsrcanview`.`rsrcan_view_id`);
CREATE CONSTRAINT ON (`rsrcanview`:`rsrcanview`) ASSERT exists(`rsrcanview`.`rsrcan_view_name`);
CREATE CONSTRAINT ON (`rsrccurv`:`rsrccurv`) ASSERT exists(`rsrccurv`.`curv_id`);
CREATE CONSTRAINT ON (`rsrccurv`:`rsrccurv`) ASSERT exists(`rsrccurv`.`curv_name`);
CREATE CONSTRAINT ON (`rsrccurv`:`rsrccurv`) ASSERT exists(`rsrccurv`.`default_flag`);
CREATE CONSTRAINT ON (`rsrccurv`:`rsrccurv`) ASSERT exists(`rsrccurv`.`curv_data`);
CREATE CONSTRAINT ON (`rsrccurvx`:`rsrccurvx`) ASSERT exists(`rsrccurvx`.`curv_id`);
CREATE CONSTRAINT ON (`rsrchour`:`rsrchour`) ASSERT exists(`rsrchour`.`rsrc_hr_id`);
CREATE CONSTRAINT ON (`rsrchour`:`rsrchour`) ASSERT exists(`rsrchour`.`rsrc_id`);
CREATE CONSTRAINT ON (`rsrchour`:`rsrchour`) ASSERT exists(`rsrchour`.`ts_id`);
CREATE CONSTRAINT ON (`rsrchour`:`rsrchour`) ASSERT exists(`rsrchour`.`task_ts_flag`);
CREATE CONSTRAINT ON (`rsrchourx`:`rsrchourx`) ASSERT exists(`rsrchourx`.`rsrc_hr_id`);
CREATE CONSTRAINT ON (`rsrcprop`:`rsrcprop`) ASSERT exists(`rsrcprop`.`rsrc_id`);
CREATE CONSTRAINT ON (`rsrcprop`:`rsrcprop`) ASSERT exists(`rsrcprop`.`prop_name`);
CREATE CONSTRAINT ON (`rsrcrate`:`rsrcrate`) ASSERT exists(`rsrcrate`.`rsrc_rate_id`);
CREATE CONSTRAINT ON (`rsrcrate`:`rsrcrate`) ASSERT exists(`rsrcrate`.`rsrc_id`);
CREATE CONSTRAINT ON (`rsrcrate`:`rsrcrate`) ASSERT exists(`rsrcrate`.`start_date`);
CREATE CONSTRAINT ON (`rsrcratex`:`rsrcratex`) ASSERT exists(`rsrcratex`.`rsrc_rate_id`);
CREATE CONSTRAINT ON (`rsrcrcat`:`rsrcrcat`) ASSERT exists(`rsrcrcat`.`rsrc_id`);
CREATE CONSTRAINT ON (`rsrcrcat`:`rsrcrcat`) ASSERT exists(`rsrcrcat`.`rsrc_catg_type_id`);
CREATE CONSTRAINT ON (`rsrcrcat`:`rsrcrcat`) ASSERT exists(`rsrcrcat`.`rsrc_catg_id`);
CREATE CONSTRAINT ON (`rsrcrcatx`:`rsrcrcatx`) ASSERT exists(`rsrcrcatx`.`rsrc_id`);
CREATE CONSTRAINT ON (`rsrcrcatx`:`rsrcrcatx`) ASSERT exists(`rsrcrcatx`.`rsrc_catg_type_id`);
CREATE CONSTRAINT ON (`rsrcrole`:`rsrcrole`) ASSERT exists(`rsrcrole`.`rsrc_id`);
CREATE CONSTRAINT ON (`rsrcrole`:`rsrcrole`) ASSERT exists(`rsrcrole`.`role_id`);
CREATE CONSTRAINT ON (`rsrcrolex`:`rsrcrolex`) ASSERT exists(`rsrcrolex`.`rsrc_id`);
CREATE CONSTRAINT ON (`rsrcrolex`:`rsrcrolex`) ASSERT exists(`rsrcrolex`.`role_id`);
CREATE CONSTRAINT ON (`rsrcsec`:`rsrcsec`) ASSERT exists(`rsrcsec`.`user_id`);
CREATE CONSTRAINT ON (`rsrcsec`:`rsrcsec`) ASSERT exists(`rsrcsec`.`rsrc_id`);
CREATE CONSTRAINT ON (`rsrcsecx`:`rsrcsecx`) ASSERT exists(`rsrcsecx`.`user_id`);
CREATE CONSTRAINT ON (`rsrcsecx`:`rsrcsecx`) ASSERT exists(`rsrcsecx`.`rsrc_id`);
CREATE CONSTRAINT ON (`rsrcx`:`rsrcx`) ASSERT exists(`rsrcx`.`rsrc_id`);
CREATE CONSTRAINT ON (`rsrfolio`:`rsrfolio`) ASSERT exists(`rsrfolio`.`rfolio_id`);
CREATE CONSTRAINT ON (`rsrfolio`:`rsrfolio`) ASSERT exists(`rsrfolio`.`rsrc_id`);
CREATE CONSTRAINT ON (`scenario`:`scenario`) ASSERT exists(`scenario`.`scenario_id`);
CREATE CONSTRAINT ON (`scenario`:`scenario`) ASSERT exists(`scenario`.`scenario_name`);
CREATE CONSTRAINT ON (`scenproj`:`scenproj`) ASSERT exists(`scenproj`.`scenario_id`);
CREATE CONSTRAINT ON (`scenproj`:`scenproj`) ASSERT exists(`scenproj`.`proj_id`);
CREATE CONSTRAINT ON (`scenproj`:`scenproj`) ASSERT exists(`scenproj`.`selected_flag`);
CREATE CONSTRAINT ON (`scenrole`:`scenrole`) ASSERT exists(`scenrole`.`scenario_id`);
CREATE CONSTRAINT ON (`scenrole`:`scenrole`) ASSERT exists(`scenrole`.`role_id`);
CREATE CONSTRAINT ON (`scenrole`:`scenrole`) ASSERT exists(`scenrole`.`selected_flag`);
CREATE CONSTRAINT ON (`scenuser`:`scenuser`) ASSERT exists(`scenuser`.`scenario_id`);
CREATE CONSTRAINT ON (`scenuser`:`scenuser`) ASSERT exists(`scenuser`.`user_id`);
CREATE CONSTRAINT ON (`settings`:`settings`) ASSERT exists(`settings`.`namespace`);
CREATE CONSTRAINT ON (`settings`:`settings`) ASSERT exists(`settings`.`setting_name`);
CREATE CONSTRAINT ON (`shift`:`shift`) ASSERT exists(`shift`.`shift_id`);
CREATE CONSTRAINT ON (`shift`:`shift`) ASSERT exists(`shift`.`shift_name`);
CREATE CONSTRAINT ON (`shiftper`:`shiftper`) ASSERT exists(`shiftper`.`shift_period_id`);
CREATE CONSTRAINT ON (`shiftper`:`shiftper`) ASSERT exists(`shiftper`.`shift_id`);
CREATE CONSTRAINT ON (`shiftper`:`shiftper`) ASSERT exists(`shiftper`.`shift_start_hr_num`);
CREATE CONSTRAINT ON (`spidmap`:`spidmap`) ASSERT exists(`spidmap`.`spid`);
CREATE CONSTRAINT ON (`sumprojcost`:`sumprojcost`) ASSERT exists(`sumprojcost`.`proj_id`);
CREATE CONSTRAINT ON (`sumprojcost`:`sumprojcost`) ASSERT exists(`sumprojcost`.`wbs_id`);
CREATE CONSTRAINT ON (`sumprojcost`:`sumprojcost`) ASSERT exists(`sumprojcost`.`cost_type_id`);
CREATE CONSTRAINT ON (`sumtask`:`sumtask`) ASSERT exists(`sumtask`.`proj_id`);
CREATE CONSTRAINT ON (`sumtask`:`sumtask`) ASSERT exists(`sumtask`.`wbs_id`);
CREATE CONSTRAINT ON (`sumtaskspread`:`sumtaskspread`) ASSERT exists(`sumtaskspread`.`proj_id`);
CREATE CONSTRAINT ON (`sumtaskspread`:`sumtaskspread`) ASSERT exists(`sumtaskspread`.`wbs_id`);
CREATE CONSTRAINT ON (`sumtaskspread`:`sumtaskspread`) ASSERT exists(`sumtaskspread`.`start_date`);
CREATE CONSTRAINT ON (`sumtaskspread`:`sumtaskspread`) ASSERT exists(`sumtaskspread`.`end_date`);
CREATE CONSTRAINT ON (`sumtaskspread`:`sumtaskspread`) ASSERT exists(`sumtaskspread`.`spread_type`);
CREATE CONSTRAINT ON (`sumtrsrc`:`sumtrsrc`) ASSERT exists(`sumtrsrc`.`sumtrsrc_id`);
CREATE CONSTRAINT ON (`task`:`task`) ASSERT exists(`task`.`task_id`);
CREATE CONSTRAINT ON (`task`:`task`) ASSERT exists(`task`.`proj_id`);
CREATE CONSTRAINT ON (`task`:`task`) ASSERT exists(`task`.`wbs_id`);
CREATE CONSTRAINT ON (`task`:`task`) ASSERT exists(`task`.`clndr_id`);
CREATE CONSTRAINT ON (`task`:`task`) ASSERT exists(`task`.`phys_complete_pct`);
CREATE CONSTRAINT ON (`task`:`task`) ASSERT exists(`task`.`rev_fdbk_flag`);
CREATE CONSTRAINT ON (`task`:`task`) ASSERT exists(`task`.`lock_plan_flag`);
CREATE CONSTRAINT ON (`task`:`task`) ASSERT exists(`task`.`auto_compute_act_flag`);
CREATE CONSTRAINT ON (`task`:`task`) ASSERT exists(`task`.`complete_pct_type`);
CREATE CONSTRAINT ON (`task`:`task`) ASSERT exists(`task`.`task_type`);
CREATE CONSTRAINT ON (`task`:`task`) ASSERT exists(`task`.`duration_type`);
CREATE CONSTRAINT ON (`task`:`task`) ASSERT exists(`task`.`review_type`);
CREATE CONSTRAINT ON (`task`:`task`) ASSERT exists(`task`.`status_code`);
CREATE CONSTRAINT ON (`task`:`task`) ASSERT exists(`task`.`task_code`);
CREATE CONSTRAINT ON (`task`:`task`) ASSERT exists(`task`.`task_name`);
CREATE CONSTRAINT ON (`task`:`task`) ASSERT exists(`task`.`driving_path_flag`);
CREATE CONSTRAINT ON (`taskactv`:`taskactv`) ASSERT exists(`taskactv`.`task_id`);
CREATE CONSTRAINT ON (`taskactv`:`taskactv`) ASSERT exists(`taskactv`.`actv_code_type_id`);
CREATE CONSTRAINT ON (`taskactv`:`taskactv`) ASSERT exists(`taskactv`.`actv_code_id`);
CREATE CONSTRAINT ON (`taskactv`:`taskactv`) ASSERT exists(`taskactv`.`proj_id`);
CREATE CONSTRAINT ON (`taskactvx`:`taskactvx`) ASSERT exists(`taskactvx`.`task_id`);
CREATE CONSTRAINT ON (`taskactvx`:`taskactvx`) ASSERT exists(`taskactvx`.`actv_code_type_id`);
CREATE CONSTRAINT ON (`taskdoc`:`taskdoc`) ASSERT exists(`taskdoc`.`taskdoc_id`);
CREATE CONSTRAINT ON (`taskdoc`:`taskdoc`) ASSERT exists(`taskdoc`.`doc_id`);
CREATE CONSTRAINT ON (`taskdoc`:`taskdoc`) ASSERT exists(`taskdoc`.`proj_id`);
CREATE CONSTRAINT ON (`taskdoc`:`taskdoc`) ASSERT exists(`taskdoc`.`wbs_id`);
CREATE CONSTRAINT ON (`taskdoc`:`taskdoc`) ASSERT exists(`taskdoc`.`wp_flag`);
CREATE CONSTRAINT ON (`taskdocx`:`taskdocx`) ASSERT exists(`taskdocx`.`taskdoc_id`);
CREATE CONSTRAINT ON (`taskfdbk`:`taskfdbk`) ASSERT exists(`taskfdbk`.`task_id`);
CREATE CONSTRAINT ON (`taskfdbk`:`taskfdbk`) ASSERT exists(`taskfdbk`.`proj_id`);
CREATE CONSTRAINT ON (`taskfin`:`taskfin`) ASSERT exists(`taskfin`.`fin_dates_id`);
CREATE CONSTRAINT ON (`taskfin`:`taskfin`) ASSERT exists(`taskfin`.`task_id`);
CREATE CONSTRAINT ON (`taskfin`:`taskfin`) ASSERT exists(`taskfin`.`proj_id`);
CREATE CONSTRAINT ON (`taskfinx`:`taskfinx`) ASSERT exists(`taskfinx`.`fin_dates_id`);
CREATE CONSTRAINT ON (`taskfinx`:`taskfinx`) ASSERT exists(`taskfinx`.`task_id`);
CREATE CONSTRAINT ON (`taskmemo`:`taskmemo`) ASSERT exists(`taskmemo`.`memo_id`);
CREATE CONSTRAINT ON (`taskmemo`:`taskmemo`) ASSERT exists(`taskmemo`.`task_id`);
CREATE CONSTRAINT ON (`taskmemo`:`taskmemo`) ASSERT exists(`taskmemo`.`memo_type_id`);
CREATE CONSTRAINT ON (`taskmemo`:`taskmemo`) ASSERT exists(`taskmemo`.`proj_id`);
CREATE CONSTRAINT ON (`taskmemox`:`taskmemox`) ASSERT exists(`taskmemox`.`memo_id`);
CREATE CONSTRAINT ON (`tasknote`:`tasknote`) ASSERT exists(`tasknote`.`task_id`);
CREATE CONSTRAINT ON (`tasknote`:`tasknote`) ASSERT exists(`tasknote`.`proj_id`);
CREATE CONSTRAINT ON (`taskpred`:`taskpred`) ASSERT exists(`taskpred`.`task_pred_id`);
CREATE CONSTRAINT ON (`taskpred`:`taskpred`) ASSERT exists(`taskpred`.`task_id`);
CREATE CONSTRAINT ON (`taskpred`:`taskpred`) ASSERT exists(`taskpred`.`pred_task_id`);
CREATE CONSTRAINT ON (`taskpred`:`taskpred`) ASSERT exists(`taskpred`.`proj_id`);
CREATE CONSTRAINT ON (`taskpred`:`taskpred`) ASSERT exists(`taskpred`.`pred_proj_id`);
CREATE CONSTRAINT ON (`taskpred`:`taskpred`) ASSERT exists(`taskpred`.`pred_type`);
CREATE CONSTRAINT ON (`taskpredx`:`taskpredx`) ASSERT exists(`taskpredx`.`task_pred_id`);
CREATE CONSTRAINT ON (`taskproc`:`taskproc`) ASSERT exists(`taskproc`.`proc_id`);
CREATE CONSTRAINT ON (`taskproc`:`taskproc`) ASSERT exists(`taskproc`.`task_id`);
CREATE CONSTRAINT ON (`taskproc`:`taskproc`) ASSERT exists(`taskproc`.`seq_num`);
CREATE CONSTRAINT ON (`taskproc`:`taskproc`) ASSERT exists(`taskproc`.`proj_id`);
CREATE CONSTRAINT ON (`taskproc`:`taskproc`) ASSERT exists(`taskproc`.`complete_flag`);
CREATE CONSTRAINT ON (`taskproc`:`taskproc`) ASSERT exists(`taskproc`.`proc_name`);
CREATE CONSTRAINT ON (`taskprocx`:`taskprocx`) ASSERT exists(`taskprocx`.`proc_id`);
CREATE CONSTRAINT ON (`taskrisk`:`taskrisk`) ASSERT exists(`taskrisk`.`task_id`);
CREATE CONSTRAINT ON (`taskrisk`:`taskrisk`) ASSERT exists(`taskrisk`.`risk_id`);
CREATE CONSTRAINT ON (`taskrisk`:`taskrisk`) ASSERT exists(`taskrisk`.`proj_id`);
CREATE CONSTRAINT ON (`taskriskx`:`taskriskx`) ASSERT exists(`taskriskx`.`task_id`);
CREATE CONSTRAINT ON (`taskriskx`:`taskriskx`) ASSERT exists(`taskriskx`.`risk_id`);
CREATE CONSTRAINT ON (`taskrsrc`:`taskrsrc`) ASSERT exists(`taskrsrc`.`taskrsrc_id`);
CREATE CONSTRAINT ON (`taskrsrc`:`taskrsrc`) ASSERT exists(`taskrsrc`.`task_id`);
CREATE CONSTRAINT ON (`taskrsrc`:`taskrsrc`) ASSERT exists(`taskrsrc`.`proj_id`);
CREATE CONSTRAINT ON (`taskrsrc`:`taskrsrc`) ASSERT exists(`taskrsrc`.`rsrc_type`);
CREATE CONSTRAINT ON (`taskrsrc`:`taskrsrc`) ASSERT exists(`taskrsrc`.`cost_qty_link_flag`);
CREATE CONSTRAINT ON (`taskrsrc`:`taskrsrc`) ASSERT exists(`taskrsrc`.`rollup_dates_flag`);
CREATE CONSTRAINT ON (`taskrsrc`:`taskrsrc`) ASSERT exists(`taskrsrc`.`cost_per_qty_source_type`);
CREATE CONSTRAINT ON (`taskrsrc`:`taskrsrc`) ASSERT exists(`taskrsrc`.`ts_pend_act_end_flag`);
CREATE CONSTRAINT ON (`taskrsrcx`:`taskrsrcx`) ASSERT exists(`taskrsrcx`.`taskrsrc_id`);
CREATE CONSTRAINT ON (`tasksum`:`tasksum`) ASSERT exists(`tasksum`.`task_sum_id`);
CREATE CONSTRAINT ON (`tasksum`:`tasksum`) ASSERT exists(`tasksum`.`wbs_id`);
CREATE CONSTRAINT ON (`tasksum`:`tasksum`) ASSERT exists(`tasksum`.`proj_id`);
CREATE CONSTRAINT ON (`tasksumfin`:`tasksumfin`) ASSERT exists(`tasksumfin`.`task_sum_fin_id`);
CREATE CONSTRAINT ON (`tasksumfin`:`tasksumfin`) ASSERT exists(`tasksumfin`.`fin_dates_id`);
CREATE CONSTRAINT ON (`tasksumfin`:`tasksumfin`) ASSERT exists(`tasksumfin`.`wbs_id`);
CREATE CONSTRAINT ON (`tasksumfin`:`tasksumfin`) ASSERT exists(`tasksumfin`.`proj_id`);
CREATE CONSTRAINT ON (`tasksumfin`:`tasksumfin`) ASSERT exists(`tasksumfin`.`task_sum_id`);
CREATE CONSTRAINT ON (`taskuser`:`taskuser`) ASSERT exists(`taskuser`.`task_id`);
CREATE CONSTRAINT ON (`taskuser`:`taskuser`) ASSERT exists(`taskuser`.`user_id`);
CREATE CONSTRAINT ON (`taskwksp`:`taskwksp`) ASSERT exists(`taskwksp`.`workspace_id`);
CREATE CONSTRAINT ON (`taskwksp`:`taskwksp`) ASSERT exists(`taskwksp`.`task_id`);
CREATE CONSTRAINT ON (`taskwksp`:`taskwksp`) ASSERT exists(`taskwksp`.`proj_id`);
CREATE CONSTRAINT ON (`taskx`:`taskx`) ASSERT exists(`taskx`.`task_id`);
CREATE CONSTRAINT ON (`thrsparm`:`thrsparm`) ASSERT exists(`thrsparm`.`thresh_parm_id`);
CREATE CONSTRAINT ON (`thrsparm`:`thrsparm`) ASSERT exists(`thrsparm`.`seq_num`);
CREATE CONSTRAINT ON (`thrsparm`:`thrsparm`) ASSERT exists(`thrsparm`.`wbs_flag`);
CREATE CONSTRAINT ON (`thrsparm`:`thrsparm`) ASSERT exists(`thrsparm`.`task_flag`);
CREATE CONSTRAINT ON (`thrsparm`:`thrsparm`) ASSERT exists(`thrsparm`.`rsrc_flag`);
CREATE CONSTRAINT ON (`thrsparm`:`thrsparm`) ASSERT exists(`thrsparm`.`thresh_parm_type`);
CREATE CONSTRAINT ON (`thrsparm`:`thrsparm`) ASSERT exists(`thrsparm`.`thresh_parm_name`);
CREATE CONSTRAINT ON (`timesht`:`timesht`) ASSERT exists(`timesht`.`ts_id`);
CREATE CONSTRAINT ON (`timesht`:`timesht`) ASSERT exists(`timesht`.`rsrc_id`);
CREATE CONSTRAINT ON (`timesht`:`timesht`) ASSERT exists(`timesht`.`daily_flag`);
CREATE CONSTRAINT ON (`timesht`:`timesht`) ASSERT exists(`timesht`.`status_code`);
CREATE CONSTRAINT ON (`timeshtx`:`timeshtx`) ASSERT exists(`timeshtx`.`ts_id`);
CREATE CONSTRAINT ON (`timeshtx`:`timeshtx`) ASSERT exists(`timeshtx`.`rsrc_id`);
CREATE CONSTRAINT ON (`tmplcatg`:`tmplcatg`) ASSERT exists(`tmplcatg`.`tmplcatg_catg_id`);
CREATE CONSTRAINT ON (`tmplcatg`:`tmplcatg`) ASSERT exists(`tmplcatg`.`catg_name`);
CREATE CONSTRAINT ON (`tmplcatg`:`tmplcatg`) ASSERT exists(`tmplcatg`.`project_flag`);
CREATE CONSTRAINT ON (`tmplcatg`:`tmplcatg`) ASSERT exists(`tmplcatg`.`process_flag`);
CREATE CONSTRAINT ON (`tprojmap`:`tprojmap`) ASSERT exists(`tprojmap`.`session_id`);
CREATE CONSTRAINT ON (`tprojmap`:`tprojmap`) ASSERT exists(`tprojmap`.`context_id`);
CREATE CONSTRAINT ON (`tprojmap`:`tprojmap`) ASSERT exists(`tprojmap`.`source_proj_id`);
CREATE CONSTRAINT ON (`tprojmap`:`tprojmap`) ASSERT exists(`tprojmap`.`target_proj_id`);
CREATE CONSTRAINT ON (`tprojmap`:`tprojmap`) ASSERT exists(`tprojmap`.`target_wbs_id`);
CREATE CONSTRAINT ON (`trakview`:`trakview`) ASSERT exists(`trakview`.`track_view_id`);
CREATE CONSTRAINT ON (`trakview`:`trakview`) ASSERT exists(`trakview`.`display_type`);
CREATE CONSTRAINT ON (`trakview`:`trakview`) ASSERT exists(`trakview`.`track_view_name`);
CREATE CONSTRAINT ON (`trakview`:`trakview`) ASSERT exists(`trakview`.`web_view_flag`);
CREATE CONSTRAINT ON (`trsrcfin`:`trsrcfin`) ASSERT exists(`trsrcfin`.`fin_dates_id`);
CREATE CONSTRAINT ON (`trsrcfin`:`trsrcfin`) ASSERT exists(`trsrcfin`.`taskrsrc_id`);
CREATE CONSTRAINT ON (`trsrcfin`:`trsrcfin`) ASSERT exists(`trsrcfin`.`task_id`);
CREATE CONSTRAINT ON (`trsrcfin`:`trsrcfin`) ASSERT exists(`trsrcfin`.`proj_id`);
CREATE CONSTRAINT ON (`trsrcfinx`:`trsrcfinx`) ASSERT exists(`trsrcfinx`.`fin_dates_id`);
CREATE CONSTRAINT ON (`trsrcfinx`:`trsrcfinx`) ASSERT exists(`trsrcfinx`.`taskrsrc_id`);
CREATE CONSTRAINT ON (`trsrcsum`:`trsrcsum`) ASSERT exists(`trsrcsum`.`taskrsrc_sum_id`);
CREATE CONSTRAINT ON (`trsrcsumfn`:`trsrcsumfn`) ASSERT exists(`trsrcsumfn`.`trsrc_sum_fin_id`);
CREATE CONSTRAINT ON (`trsrcsumfn`:`trsrcsumfn`) ASSERT exists(`trsrcsumfn`.`fin_dates_id`);
CREATE CONSTRAINT ON (`trsrcsumfn`:`trsrcsumfn`) ASSERT exists(`trsrcsumfn`.`taskrsrc_sum_id`);
CREATE CONSTRAINT ON (`tsaudit`:`tsaudit`) ASSERT exists(`tsaudit`.`ts_audit_id`);
CREATE CONSTRAINT ON (`tsdates`:`tsdates`) ASSERT exists(`tsdates`.`ts_id`);
CREATE CONSTRAINT ON (`tsdates`:`tsdates`) ASSERT exists(`tsdates`.`start_date`);
CREATE CONSTRAINT ON (`tsdates`:`tsdates`) ASSERT exists(`tsdates`.`end_date`);
CREATE CONSTRAINT ON (`tsdelegate`:`tsdelegate`) ASSERT exists(`tsdelegate`.`ts_delegate_id`);
CREATE CONSTRAINT ON (`tsdelegate`:`tsdelegate`) ASSERT exists(`tsdelegate`.`user_id`);
CREATE CONSTRAINT ON (`tsdelegate`:`tsdelegate`) ASSERT exists(`tsdelegate`.`ts_delegate_user_id`);
CREATE CONSTRAINT ON (`uaccess`:`uaccess`) ASSERT exists(`uaccess`.`user_id`);
CREATE CONSTRAINT ON (`uaccess`:`uaccess`) ASSERT exists(`uaccess`.`proj_id`);
CREATE CONSTRAINT ON (`uaccess`:`uaccess`) ASSERT exists(`uaccess`.`access_flag`);
CREATE CONSTRAINT ON (`udfcode`:`udfcode`) ASSERT exists(`udfcode`.`udf_code_id`);
CREATE CONSTRAINT ON (`udfcode`:`udfcode`) ASSERT exists(`udfcode`.`udf_type_id`);
CREATE CONSTRAINT ON (`udfcode`:`udfcode`) ASSERT exists(`udfcode`.`seq_num`);
CREATE CONSTRAINT ON (`udfcode`:`udfcode`) ASSERT exists(`udfcode`.`short_name`);
CREATE CONSTRAINT ON (`udfcode`:`udfcode`) ASSERT exists(`udfcode`.`udf_code_name`);
CREATE CONSTRAINT ON (`udfcodex`:`udfcodex`) ASSERT exists(`udfcodex`.`udf_code_id`);
CREATE CONSTRAINT ON (`udftype`:`udftype`) ASSERT exists(`udftype`.`udf_type_id`);
CREATE CONSTRAINT ON (`udftype`:`udftype`) ASSERT exists(`udftype`.`table_name`);
CREATE CONSTRAINT ON (`udftype`:`udftype`) ASSERT exists(`udftype`.`udf_type_name`);
CREATE CONSTRAINT ON (`udftype`:`udftype`) ASSERT exists(`udftype`.`udf_type_label`);
CREATE CONSTRAINT ON (`udftype`:`udftype`) ASSERT exists(`udftype`.`logical_data_type`);
CREATE CONSTRAINT ON (`udftype`:`udftype`) ASSERT exists(`udftype`.`super_flag`);
CREATE CONSTRAINT ON (`udfvalue`:`udfvalue`) ASSERT exists(`udfvalue`.`udf_type_id`);
CREATE CONSTRAINT ON (`udfvalue`:`udfvalue`) ASSERT exists(`udfvalue`.`fk_id`);
CREATE CONSTRAINT ON (`udfvaluex`:`udfvaluex`) ASSERT exists(`udfvaluex`.`udf_type_id`);
CREATE CONSTRAINT ON (`udfvaluex`:`udfvaluex`) ASSERT exists(`udfvaluex`.`fk_id`);
CREATE CONSTRAINT ON (`uevntreg`:`uevntreg`) ASSERT exists(`uevntreg`.`user_id`);
CREATE CONSTRAINT ON (`uevntreg`:`uevntreg`) ASSERT exists(`uevntreg`.`app_name`);
CREATE CONSTRAINT ON (`uevntreg`:`uevntreg`) ASSERT exists(`uevntreg`.`operation_name`);
CREATE CONSTRAINT ON (`uevntreg`:`uevntreg`) ASSERT exists(`uevntreg`.`action_name`);
CREATE CONSTRAINT ON (`umeasure`:`umeasure`) ASSERT exists(`umeasure`.`unit_id`);
CREATE CONSTRAINT ON (`umeasure`:`umeasure`) ASSERT exists(`umeasure`.`seq_num`);
CREATE CONSTRAINT ON (`umeasure`:`umeasure`) ASSERT exists(`umeasure`.`unit_name`);
CREATE CONSTRAINT ON (`umeasure`:`umeasure`) ASSERT exists(`umeasure`.`unit_abbrev`);
CREATE CONSTRAINT ON (`upklist`:`upklist`) ASSERT exists(`upklist`.`session_id`);
CREATE CONSTRAINT ON (`upklist`:`upklist`) ASSERT exists(`upklist`.`pk_id`);
CREATE CONSTRAINT ON (`usercol`:`usercol`) ASSERT exists(`usercol`.`user_col_id`);
CREATE CONSTRAINT ON (`usercol`:`usercol`) ASSERT exists(`usercol`.`table_name`);
CREATE CONSTRAINT ON (`usercol`:`usercol`) ASSERT exists(`usercol`.`logical_data_type`);
CREATE CONSTRAINT ON (`usercol`:`usercol`) ASSERT exists(`usercol`.`user_col_name`);
CREATE CONSTRAINT ON (`usercol`:`usercol`) ASSERT exists(`usercol`.`user_col_label`);
CREATE CONSTRAINT ON (`userdata`:`userdata`) ASSERT exists(`userdata`.`user_data_id`);
CREATE CONSTRAINT ON (`userdata`:`userdata`) ASSERT exists(`userdata`.`user_id`);
CREATE CONSTRAINT ON (`userdata`:`userdata`) ASSERT exists(`userdata`.`topic_name`);
CREATE CONSTRAINT ON (`usereng`:`usereng`) ASSERT exists(`usereng`.`user_eng_id`);
CREATE CONSTRAINT ON (`usereng`:`usereng`) ASSERT exists(`usereng`.`user_id`);
CREATE CONSTRAINT ON (`usereng`:`usereng`) ASSERT exists(`usereng`.`db_engine_type`);
CREATE CONSTRAINT ON (`userobs`:`userobs`) ASSERT exists(`userobs`.`user_id`);
CREATE CONSTRAINT ON (`userobs`:`userobs`) ASSERT exists(`userobs`.`obs_id`);
CREATE CONSTRAINT ON (`userobs`:`userobs`) ASSERT exists(`userobs`.`prof_id`);
CREATE CONSTRAINT ON (`userobsx`:`userobsx`) ASSERT exists(`userobsx`.`user_id`);
CREATE CONSTRAINT ON (`userobsx`:`userobsx`) ASSERT exists(`userobsx`.`obs_id`);
CREATE CONSTRAINT ON (`useropen`:`useropen`) ASSERT exists(`useropen`.`user_open_id`);
CREATE CONSTRAINT ON (`useropen`:`useropen`) ASSERT exists(`useropen`.`user_open_name`);
CREATE CONSTRAINT ON (`users`:`users`) ASSERT exists(`users`.`user_id`);
CREATE CONSTRAINT ON (`users`:`users`) ASSERT exists(`users`.`global_flag`);
CREATE CONSTRAINT ON (`users`:`users`) ASSERT exists(`users`.`email_type`);
CREATE CONSTRAINT ON (`users`:`users`) ASSERT exists(`users`.`user_name`);
CREATE CONSTRAINT ON (`users`:`users`) ASSERT exists(`users`.`curr_id`);
CREATE CONSTRAINT ON (`users`:`users`) ASSERT exists(`users`.`all_rsrc_access_flag`);
CREATE CONSTRAINT ON (`users`:`users`) ASSERT exists(`users`.`report_user_flag`);
CREATE CONSTRAINT ON (`userset`:`userset`) ASSERT exists(`userset`.`namespace`);
CREATE CONSTRAINT ON (`userset`:`userset`) ASSERT exists(`userset`.`setting_name`);
CREATE CONSTRAINT ON (`userset`:`userset`) ASSERT exists(`userset`.`user_id`);
CREATE CONSTRAINT ON (`usersx`:`usersx`) ASSERT exists(`usersx`.`user_id`);
CREATE CONSTRAINT ON (`userwksp`:`userwksp`) ASSERT exists(`userwksp`.`user_id`);
CREATE CONSTRAINT ON (`userwksp`:`userwksp`) ASSERT exists(`userwksp`.`workspace_id`);
CREATE CONSTRAINT ON (`userwksp`:`userwksp`) ASSERT exists(`userwksp`.`proj_id`);
CREATE CONSTRAINT ON (`usession`:`usession`) ASSERT exists(`usession`.`session_id`);
CREATE CONSTRAINT ON (`usession`:`usession`) ASSERT exists(`usession`.`login_time`);
CREATE CONSTRAINT ON (`usession`:`usession`) ASSERT exists(`usession`.`last_active_time`);
CREATE CONSTRAINT ON (`usession`:`usession`) ASSERT exists(`usession`.`host_name`);
CREATE CONSTRAINT ON (`usropnval`:`usropnval`) ASSERT exists(`usropnval`.`user_open_id`);
CREATE CONSTRAINT ON (`usropnval`:`usropnval`) ASSERT exists(`usropnval`.`pk_id`);
CREATE CONSTRAINT ON (`usropnval`:`usropnval`) ASSERT exists(`usropnval`.`usropn_type`);
CREATE CONSTRAINT ON (`viewpref`:`viewpref`) ASSERT exists(`viewpref`.`view_pref_id`);
CREATE CONSTRAINT ON (`viewpref`:`viewpref`) ASSERT exists(`viewpref`.`view_pref_name`);
CREATE CONSTRAINT ON (`viewpref`:`viewpref`) ASSERT exists(`viewpref`.`view_pref_type`);
CREATE CONSTRAINT ON (`viewprop`:`viewprop`) ASSERT exists(`viewprop`.`view_id`);
CREATE CONSTRAINT ON (`viewprop`:`viewprop`) ASSERT exists(`viewprop`.`view_name`);
CREATE CONSTRAINT ON (`vwprefdash`:`vwprefdash`) ASSERT exists(`vwprefdash`.`dashboard_id`);
CREATE CONSTRAINT ON (`vwprefdash`:`vwprefdash`) ASSERT exists(`vwprefdash`.`view_pref_id`);
CREATE CONSTRAINT ON (`vwprefdash`:`vwprefdash`) ASSERT exists(`vwprefdash`.`seq_num`);
CREATE CONSTRAINT ON (`vwprefdata`:`vwprefdata`) ASSERT exists(`vwprefdata`.`view_pref_id`);
CREATE CONSTRAINT ON (`vwprefdata`:`vwprefdata`) ASSERT exists(`vwprefdata`.`view_pref_key`);
CREATE CONSTRAINT ON (`vwprefuser`:`vwprefuser`) ASSERT exists(`vwprefuser`.`view_pref_id`);
CREATE CONSTRAINT ON (`vwprefuser`:`vwprefuser`) ASSERT exists(`vwprefuser`.`user_id`);
CREATE CONSTRAINT ON (`wbrscat`:`wbrscat`) ASSERT exists(`wbrscat`.`wbrs_cat_id`);
CREATE CONSTRAINT ON (`wbrscat`:`wbrscat`) ASSERT exists(`wbrscat`.`wbrs_cat_name`);
CREATE CONSTRAINT ON (`wbsbudg`:`wbsbudg`) ASSERT exists(`wbsbudg`.`wbs_budg_id`);
CREATE CONSTRAINT ON (`wbsbudg`:`wbsbudg`) ASSERT exists(`wbsbudg`.`proj_id`);
CREATE CONSTRAINT ON (`wbsbudg`:`wbsbudg`) ASSERT exists(`wbsbudg`.`wbs_id`);
CREATE CONSTRAINT ON (`wbsbudg`:`wbsbudg`) ASSERT exists(`wbsbudg`.`start_date`);
CREATE CONSTRAINT ON (`wbsbudgx`:`wbsbudgx`) ASSERT exists(`wbsbudgx`.`wbs_budg_id`);
CREATE CONSTRAINT ON (`wbshierarchy`:`wbshierarchy`) ASSERT exists(`wbshierarchy`.`parentlevelsbelowroot`);
CREATE CONSTRAINT ON (`wbshierarchy`:`wbshierarchy`) ASSERT exists(`wbshierarchy`.`childlevelsbelowroot`);
CREATE CONSTRAINT ON (`wbshierarchy`:`wbshierarchy`) ASSERT exists(`wbshierarchy`.`levelsbetween`);
CREATE CONSTRAINT ON (`wbsmemo`:`wbsmemo`) ASSERT exists(`wbsmemo`.`wbs_memo_id`);
CREATE CONSTRAINT ON (`wbsmemo`:`wbsmemo`) ASSERT exists(`wbsmemo`.`proj_id`);
CREATE CONSTRAINT ON (`wbsmemo`:`wbsmemo`) ASSERT exists(`wbsmemo`.`wbs_id`);
CREATE CONSTRAINT ON (`wbsmemo`:`wbsmemo`) ASSERT exists(`wbsmemo`.`memo_type_id`);
CREATE CONSTRAINT ON (`wbsmemox`:`wbsmemox`) ASSERT exists(`wbsmemox`.`wbs_memo_id`);
CREATE CONSTRAINT ON (`wbsrsrc`:`wbsrsrc`) ASSERT exists(`wbsrsrc`.`wbsrsrc_id`);
CREATE CONSTRAINT ON (`wbsrsrc`:`wbsrsrc`) ASSERT exists(`wbsrsrc`.`wbs_id`);
CREATE CONSTRAINT ON (`wbsrsrc`:`wbsrsrc`) ASSERT exists(`wbsrsrc`.`proj_id`);
CREATE CONSTRAINT ON (`wbsrsrc`:`wbsrsrc`) ASSERT exists(`wbsrsrc`.`committed_flag`);
CREATE CONSTRAINT ON (`wbsrsrc`:`wbsrsrc`) ASSERT exists(`wbsrsrc`.`auto_compute_dates_flag`);
CREATE CONSTRAINT ON (`wbsrsrc_qty`:`wbsrsrc_qty`) ASSERT exists(`wbsrsrc_qty`.`wbsrsrc_id`);
CREATE CONSTRAINT ON (`wbsrsrc_qty`:`wbsrsrc_qty`) ASSERT exists(`wbsrsrc_qty`.`week_start`);
CREATE CONSTRAINT ON (`wbsrsrc_qty`:`wbsrsrc_qty`) ASSERT exists(`wbsrsrc_qty`.`month_start`);
CREATE CONSTRAINT ON (`wbsrsrc_qty`:`wbsrsrc_qty`) ASSERT exists(`wbsrsrc_qty`.`qty`);
CREATE CONSTRAINT ON (`wbsrsrc_qtyx`:`wbsrsrc_qtyx`) ASSERT exists(`wbsrsrc_qtyx`.`wbsrsrc_id`);
CREATE CONSTRAINT ON (`wbsrsrc_qtyx`:`wbsrsrc_qtyx`) ASSERT exists(`wbsrsrc_qtyx`.`week_start`);
CREATE CONSTRAINT ON (`wbsrsrc_qtyx`:`wbsrsrc_qtyx`) ASSERT exists(`wbsrsrc_qtyx`.`month_start`);
CREATE CONSTRAINT ON (`wbsrsrcx`:`wbsrsrcx`) ASSERT exists(`wbsrsrcx`.`wbsrsrc_id`);
CREATE CONSTRAINT ON (`wbsstep`:`wbsstep`) ASSERT exists(`wbsstep`.`wbs_step_id`);
CREATE CONSTRAINT ON (`wbsstep`:`wbsstep`) ASSERT exists(`wbsstep`.`proj_id`);
CREATE CONSTRAINT ON (`wbsstep`:`wbsstep`) ASSERT exists(`wbsstep`.`wbs_id`);
CREATE CONSTRAINT ON (`wbsstep`:`wbsstep`) ASSERT exists(`wbsstep`.`seq_num`);
CREATE CONSTRAINT ON (`wbsstep`:`wbsstep`) ASSERT exists(`wbsstep`.`complete_flag`);
CREATE CONSTRAINT ON (`wbsstep`:`wbsstep`) ASSERT exists(`wbsstep`.`step_name`);
CREATE CONSTRAINT ON (`wbsstepx`:`wbsstepx`) ASSERT exists(`wbsstepx`.`wbs_step_id`);
CREATE CONSTRAINT ON (`wkfltmpl`:`wkfltmpl`) ASSERT exists(`wkfltmpl`.`wkfl_tmpl_id`);
CREATE CONSTRAINT ON (`wkfltmpl`:`wkfltmpl`) ASSERT exists(`wkfltmpl`.`template_name`);
CREATE CONSTRAINT ON (`wkfltmpl`:`wkfltmpl`) ASSERT exists(`wkfltmpl`.`project_flag`);
CREATE CONSTRAINT ON (`wkfluser`:`wkfluser`) ASSERT exists(`wkfluser`.`work_flow_id`);
CREATE CONSTRAINT ON (`wkfluser`:`wkfluser`) ASSERT exists(`wkfluser`.`user_id`);
CREATE CONSTRAINT ON (`wkfluser`:`wkfluser`) ASSERT exists(`wkfluser`.`stage_num`);
CREATE CONSTRAINT ON (`workflow`:`workflow`) ASSERT exists(`workflow`.`work_flow_id`);
CREATE CONSTRAINT ON (`workflow`:`workflow`) ASSERT exists(`workflow`.`proj_id`);
CREATE CONSTRAINT ON (`workflow`:`workflow`) ASSERT exists(`workflow`.`workflow_name`);
CREATE CONSTRAINT ON (`workflow`:`workflow`) ASSERT exists(`workflow`.`external_key`);
CREATE CONSTRAINT ON (`workflow`:`workflow`) ASSERT exists(`workflow`.`stage_num`);
CREATE CONSTRAINT ON (`workflow`:`workflow`) ASSERT exists(`workflow`.`status`);
CREATE CONSTRAINT ON (`workflow`:`workflow`) ASSERT exists(`workflow`.`existing_project_flag`);
CREATE CONSTRAINT ON (`workflow`:`workflow`) ASSERT exists(`workflow`.`stage_name`);
CREATE CONSTRAINT ON (`workflow`:`workflow`) ASSERT exists(`workflow`.`stage_modified_flag`);
CREATE CONSTRAINT ON (`workflow`:`workflow`) ASSERT exists(`workflow`.`initiated_date`);
CREATE CONSTRAINT ON (`workspace`:`workspace`) ASSERT exists(`workspace`.`workspace_id`);
CREATE CONSTRAINT ON (`workspace`:`workspace`) ASSERT exists(`workspace`.`workspace_type`);
CREATE CONSTRAINT ON (`workspace`:`workspace`) ASSERT exists(`workspace`.`proj_id`);
CREATE CONSTRAINT ON (`workspace`:`workspace`) ASSERT exists(`workspace`.`workspace_name`);
:commit
